<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Sprites non bitmap</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section explaining non-bitmap sprites in GameMaker" />
  <meta name="search-keywords" content="SWF,Spine,skeleton animation,vector sprites" />
  <meta name="rh-index-keywords" content="Texture Goups - Non-Bitmap Sprites,SWF,Spine" />
</head>
<body>
  <h1>Sprites non bitmap</h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span> prend en charge les fichiers non bitmap <span class="notranslate">sprites</span> sous la forme de fichiers <a class="glossterm" data-glossterm="vecteur" href="#">vectoriels</a> <span class="inline">SWF </span>ou de fichiers <strong>Spine Skeletal Animation</strong>. Ces deux formats ont leurs avantages et leurs inconvénients, et les deux sections ci-dessous expliquent comment les importer dans l'<a href="../../The_Asset_Editors/Sprites.htm">éditeur de sprites</a> ainsi que quelques informations sur la façon dont ils sont dessinés.</p>
  <h2>Animation squelettique <span class="notranslate">Sprites</span> (<span class="notranslate">Spine</span>)</h2>
  <p>Un site <span class="notranslate">sprite</span> réalisé à l'aide d'une animation squelettique est un site dans lequel un &quot;squelette&quot; de base a été créé et animé à l'aide d'images clés pour déplacer les éléments du squelette dans le temps. Ce squelette est ensuite habillé à partir d'un <a class="glossterm" data-glossterm="atlas des textures" href="#">atlas de textures</a> et l'animation résultante est exportée dans l'un des nombreux types de fichiers. <span data-keyref="GameMaker Name">GameMaker</span> vous permet d'importer ce type de <span class="notranslate">sprite</span> à condition qu'il ait été exporté sous forme de fichier au format <span class="inline">*.json</span> et que le fichier atlas de texture (<span class="inline">*.atlas</span>) et le fichier image ( <span class="inline">*.png</span>) qui lui sont correctement associés <em>se trouvent dans le même répertoire</em>.</p>
  <p><img>Actuellement, <span data-keyref="GameMaker Name">GameMaker</span> <strong>ne</strong> peut <strong>importer des images vectorielles qu'à partir de fichiers au format JSON créés par le programme <a href="http://esotericsoftware.com/">Spine</a></strong>, mais la manière de les importer dans le programme est presque identique à celle utilisée pour ajouter une image bitmap normale. Pour ajouter une animation squelettique, vous devez créer un nouveau <span class="notranslate">sprite</span>, ce qui fera apparaître la boîte de dialogue standard <strong>Load Sprite</strong>, mais ici vous devez vous assurer que vous avez sélectionné <span class="inline">*.json</span> dans le filtre de fichier en bas :</p>
  <p><img alt="Spine UI" class="center" src="../../assets/Images/Settings/Spine_Example.png" /></p>
  <p>En cliquant sur le bouton &quot;Charger&quot;, l'animation squelettique sera ajoutée au <a href="../../Introduction/The_Asset_Browser.htm">navigateur de ressources</a> sous forme de <span class="notranslate">sprite</span>, avec une barre de progression qui s'affiche au fur et à mesure du traitement du fichier. Notez que, selon la complexité du fichier, cela peut prendre un ou deux instants. Une fois le traitement terminé, vous serez ramené à la boîte de dialogue des propriétés de <span class="notranslate">sprite</span>, qui ressemblera désormais à ceci :</p>
  <p><img>Une fois que vous avez importé l'animation, vous pouvez définir les propriétés de collision, mais notez que vous êtes limité ici à l'utilisation de collisions précises ou de collisions de boîte englobante, et que les données de collision pour une animation squelettique sont explicitement tirées des données fournies. <span data-keyref="GameMaker Name">GameMaker</span> ne génère aucun masque de collision si les données sont absentes du fichier importé, ce qui signifie que vous n'obtiendrez tout simplement pas de collisions fonctionnelles si les masques ne sont pas définis correctement dans le programme utilisé pour créer l'image importée.</p>
  <p class="note"><span class="note">REMARQUE</span> En raison de la complexité des animations squelettiques, l'image de prévisualisation affichée dans l'éditeur <span class="notranslate">sprite</span> n'est pas destinée à représenter fidèlement votre animation, mais plutôt à vous donner une image simple qui représente l'animation pour la visualiser dans l'éditeur de salle.</p>
  <p>Contrairement au bitmap <span class="notranslate">sprites</span>, l'animation squelettique importée <span class="notranslate">sprite</span> <strong>ne peut être modifiée</strong> d'aucune manière <strong>dans l'éditeur</strong>, mais il existe un certain nombre de fonctions disponibles dans <span class="notranslate">GameMaker Language</span> (<span class="notranslate">GML</span>) qui peuvent être utilisées pour changer les apparences, définir les propriétés et contrôler d'autres aspects de l'animation. Vous ne pouvez pas non plus définir d'options de texture pour <span class="notranslate">sprite</span>, car <span class="notranslate">GameMaker</span> utilisera l'atlas de texture fourni qui a été créé par le programme qui a généré <span class="notranslate">sprite</span>.</p>
  <p>Il y a un certain nombre de choses dont vous devez être conscient lorsque vous importez une animation de squelette <span class="notranslate">sprites</span>, la plus importante étant que certaines des fonctions de dessin de <span class="notranslate">sprite</span> et de gestion de <span class="notranslate">sprite</span> ne sont pas prises en charge pour des raisons techniques, en particulier les fonctions de dessin qui ne dessinent qu'une partie d'un <span class="notranslate">sprite</span>, ou qui &quot;biaisent&quot; la position d'une certaine manière (voir les fonctions individuelles <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> fonctions pour plus de détails). Cependant, les fonctions de dessin de base de <span class="notranslate">sprite</span> sont entièrement prises en charge, tout comme les variables intégrées de <span class="notranslate">sprite</span>. Outre ces fonctions et variables, vous pouvez également définir et modifier les propriétés de l'animation à l'aide des fonctions spéciales de <span class="inline">skeleton_*</span>, qui sont répertoriées et expliquées dans la section de référence sur les <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Skeletal_Animation.htm">animations squelettiques</a>.</p>
  <h2>Vecteur <span class="notranslate">Sprites</span> (SWF)</h2>
  <p>En général, tous les sites <span class="notranslate">sprites</span> dans <span class="notranslate">GameMaker</span> utilisent des bitmaps qui, bien que flexibles en termes de contenu, limitent la taille et le nombre d'images possibles dans un site <span class="notranslate">sprite</span> avant que l'utilisation de la mémoire ne devienne prohibitive. Le site <span class="notranslate">sprites</span> contourne ces limites en stockant et en dessinant son contenu différemment : au lieu d'une grille de pixels, qui peuvent devenir des blocs ou des flous lorsqu'ils sont mis à l'échelle, ils sont dessinés sous forme de triangles utilisant les mathématiques vectorielles et ceux-ci peuvent être mis à l'échelle (ou réduits) sans perdre leur définition, comme le montre l'image ci-dessous :</p>
  <p><img>Pour vous aider à visualiser comment cela se passe, l'image ci-dessous représente le même vecteur Pompier <span class="notranslate">sprite</span>, mais nous pouvons maintenant voir les polygones qui sont utilisés pour créer l'image dans <span data-keyref="GameMaker Name">GameMaker</span>:</p>
  <p><img>Cependant, rien n'est jamais gratuit lorsqu'il s'agit de programmer des jeux, et le compromis avec les vecteurs <span class="notranslate">sprites</span> est qu'ils coûtent plus cher au processeur à dessiner que les bitmaps <span class="notranslate">sprites</span> et cette différence de vitesse augmente avec la complexité de l'animation importée. De plus, leur utilisation de la mémoire est affectée par leur complexité visuelle, contrairement aux bitmaps <span class="notranslate">sprites</span>. Cela dit, ils permettent d'ajouter des graphiques animés de grande taille d'une manière qui serait impossible avec les bitmaps traditionnels <span class="notranslate">sprites</span>.</p>
  <p>En revanche, comme les vecteurs <span class="notranslate">sprites</span> ne dessinent que les pixels absolument nécessaires (contrairement aux bitmaps <span class="notranslate">sprites</span> qui &quot;dessinent&quot; également l'espace vide autour de l'image), ils peuvent être moins chers du point de vue du GPU. De plus, en général, les vecteurs <span class="notranslate">sprites</span> sont beaucoup plus petits que leurs équivalents bitmap - pour l'exemple du pompier ci-dessus, les tailles des différents types de <span class="notranslate">sprite</span> sont les suivantes :</p>
  <p class="code">Bitmap at 70x68 = 4x70x68 bytes x 12 frames = 223k<br />
    Vector = 54k</p>
  <p>Si vous quadruplez la résolution du sprite :</p>
  <p class="code">Bitmap at 280x272 = 4x280x272 bytes x 12 frames = 3570k<br />
    Vector = 54k</p>
  <p>Ainsi, comme vous pouvez le constater, l'utilisation du vecteur <span class="notranslate">sprites</span> permet d'économiser beaucoup de mémoire et offre encore de nombreuses possibilités d'économies d'espace.</p>
  <p>Actuellement, <span data-keyref="GameMaker Name">GameMaker</span> a un support <em>limité </em>pour les vecteurs <span class="notranslate">sprites</span>. et ne peut importer des images vectorielles qu'à partir de fichiers au format <span class="inline">SWF</span>. La manière de les importer dans le programme est presque identique à celle de l'ajout d'une image bitmap normale. Pour ajouter une image vectorielle <span class="notranslate">sprite</span>, créez une nouvelle <span class="notranslate">sprite</span>, ce qui fera apparaître la boîte de dialogue standard Charger <span class="notranslate">Sprite</span>, mais assurez-vous d'avoir sélectionné <span class="inline">*.swf</span> dans le filtre de fichiers situé en bas.</p>
  <p><img>En cliquant sur le bouton &quot;Charger&quot;, l'image vectorielle ou l'animation est ajoutée au <a href="../../Introduction/The_Asset_Browser.htm">navigateur de ressources</a>. Une barre de progression s'affiche au fur et à mesure que le fichier est traité. Notez que, selon la complexité du fichier, cela peut prendre un certain temps (jusqu'à une minute pour les animations les plus complexes). Lorsque le traitement est terminé, vous revenez à la boîte de dialogue des propriétés de <span class="notranslate">sprite</span>, qui se présente maintenant comme suit :</p>
  <p><img>L'éditeur <span class="notranslate">sprite</span> n'a pas beaucoup changé, mais le bouton <strong>Editer l'image</strong> a été grisé et ne peut pas être cliqué puisqu'il n'y a pas de bitmaps à modifier dans ce type de <span class="notranslate">sprite</span>. Deuxièmement, toutes les options de texture ont également été grisées. SWF <span class="notranslate">sprites</span> est basé sur les mathématiques et en tant que tel n'a généralement pas de textures associées, donc aucune des options disponibles n'est applicable pour ce type de <span class="notranslate">sprite</span>.</p>
  <p class="note"><span class="note">REMARQUE</span> L'aspect de l'image dans l'éditeur de prévisualisation que vous avez choisi ne sera pas le même que celui qu'elle aura dans votre jeu ou dans la fenêtre de prévisualisation de l'éditeur <span class="notranslate">sprite</span>. L'image vectorielle sera importée à la taille à laquelle elle a été créée, qui n'est pas nécessairement celle de l'aperçu (les navigateurs mettent normalement l'image à l'échelle pour l'adapter, par exemple).</p>
  <p>Un ajout à l'éditeur <span class="notranslate">Sprite</span> est que vous pouvez définir la <em>qualité </em>du vecteur <span class="notranslate">sprite</span> lorsqu'il est dessiné en utilisant le curseur <strong>SWF Precision</strong> en haut. Cela réduira ou augmentera simplement le nombre de triangles utilisés pour générer le <span class="notranslate">sprite</span>. Une valeur d'environ 50 % est normalement suffisante pour la plupart des jeux, mais vous devriez expérimenter avec cette valeur si vous utilisez une mise à l'échelle extrême ou si vous avez des problèmes de performance.</p>
  <p>Il y a un certain nombre de choses dont vous devez être conscient lors de l'importation de vecteurs <span class="notranslate">sprites</span>, la plus importante étant que certaines des fonctions de dessin <span class="notranslate">sprite</span> et de gestion <span class="notranslate">sprite</span> ne sont pas prises en charge pour des raisons techniques, en particulier les fonctions de dessin qui ne dessinent qu'une partie d'un <span class="notranslate">sprite</span>, ou qui &quot;biaisent&quot; la position d'une certaine manière (voir les fonctions individuelles <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> fonctions pour plus de détails). Cependant, les fonctions de dessin de base de <span class="notranslate">sprite</span> sont entièrement prises en charge, tout comme les variables intégrées de <span class="notranslate">sprite</span>. Vous pouvez également définir différentes valeurs d'<a class="glossterm" data-glossterm="anti-crénelage" href="#">anticrénelage</a> (AA) pour le SWF <span class="notranslate">sprites</span> dessiné à l'aide des fonctions <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_enable_swf_aa.htm">draw_enable_swf_aa()</a></span>, <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_get_swf_aa_level.htm">draw_get_swf_aa_level()</a></span> ou <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_set_swf_aa_level.htm">draw_set_swf_aa_level()</a></span>.</p>
  <p>Vous devez également être conscient de ce qui suit :</p>
  <ul class="colour">
    <li>Lors de l'importation d'un fichier <span class="inline">*.SWF</span>, Actionscript <em>n'</em>est <em>pas </em>pris en charge. Par conséquent, si votre SWF en dépend pour fonctionner correctement, il ne donnera probablement pas de bons résultats. De même, les clips vidéo intégrés qui ont leur propre ligne de temps n'auront que leur première image affichée pendant l'animation - toute l'animation doit être sur la ligne de temps principale.</li>
    <li>Si votre fichier vectoriel contient des détails particulièrement fins, vous constaterez parfois que des trous ou des triangles étranges apparaissent sur le site <span class="notranslate">sprites</span>. Cela est dû au fait qu'à petite échelle, la géométrie peut parfois s'effondrer pour créer des formes qui ne se triangulent pas bien. Dans ce cas, deux options s'offrent à vous : vous pouvez augmenter l'échelle du contenu du fichier vectoriel, ce qui donnera à l'importateur plus d'espace pour jouer, ou vous pouvez essayer de réduire le niveau de détail de l'objet qui se brise.</li>
    <li><span data-keyref="GameMaker Name">GameMaker</span> utilise la taille de la scène du SWF comme limites du site <span class="notranslate">sprite</span>. Cependant, si vous avez quelque chose sur la scène en dehors de ces limites, il est quand même dessiné. Cela signifie que vous devez soit éviter de placer quoi que ce soit en dehors des limites de la scène si vous ne voulez pas qu'il soit affiché, soit utiliser une couche de masque pour limiter le dessin à cette zone.</li>
    <li>La taille de la scène affecte également la taille des masques de collision générés. Par conséquent, si la taille de la scène est importante et que votre animation comporte de nombreuses images, vous risquez de consommer beaucoup de mémoire. N'utilisez donc des masques de collision précis que si vous en avez vraiment besoin.</li>
    <li>Étant donné qu'un fichier SWF est créé à partir de plusieurs couches, dont certaines peuvent se chevaucher, l'alpha ne fonctionne pas tout à fait de la même manière qu'avec les bitmaps <span class="notranslate">sprites</span> - les zones qui se chevauchent ne seront pas aussi transparentes que les autres parties du site <span class="notranslate">sprite</span>, car les pixels qui s'y trouvent sont dessinés plusieurs fois.</li>
    <li> <em>Les </em>remplissages bitmap <em>sont </em>pris en charge, mais si vous utilisez des remplissages bitmap en mosaïque dans votre fichier SWF, vous devez vous assurer que la taille du bitmap est une puissance de deux, sinon la mosaïque ne fonctionnera pas correctement. Le rendu de texte est également pris en charge, mais vous devez intégrer la police dans votre fichier SWF pour qu'elle apparaisse dans le résultat <span class="notranslate">sprite</span>. De plus, actuellement, seul le texte aligné à gauche sur une seule ligne est pris en charge.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Texture_Groups.htm">Groupes de textures</a></div>
        <div style="float:right">Suivant : <a href="Texture_Pages.htm">Pages de texture</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
</body>
</html>