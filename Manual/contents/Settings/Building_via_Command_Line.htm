<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Construction via la ligne de commande</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">Construction via la ligne de commande</h1>
    <p class="note"><span class="note"><strong>NOTE</strong></span> La création de paquets exécutables via la ligne de commande n'est disponible que pour certaines licences spécifiques. Veuillez donc consulter <a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">cette page</a> pour savoir si votre licence le permet. Pour toutes les autres licences, vous pouvez exécuter et déboguer votre projet via une ligne de commande sans aucune restriction.</p>
    <p>En plus de la construction de votre projet via le site <span class="notranslate">IDE</span>, <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span> vous permet de construire vos projets via une interface de ligne de commande en utilisant les nombreuses options et commandes décrites ci-dessous. Vous pouvez l'utiliser pour construire votre projet, le tester et le déployer sur plusieurs plates-formes en exécutant un seul fichier batch, et pour mettre en place une intégration continue via un serveur d'automatisation tel que <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>.</p>
    <p>Pour ce faire, il suffit d'exécuter l'exécutable <span class="inline">Igor.exe</span> présent dans votre dossier <span class="notranslate">runtime</span> et de lui passer les options et commandes listées sur cette page. Sur <span class="notranslate">Windows</span>, cet exécutable sera présent dans le dossier <span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span> et sur Mac sous <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span>.</p>
    <p> </p>
    <h1>Bâtiment Igor CI</h1>
    <h2>Mise en place</h2>
    <p>Pour configurer la construction de CI sur une machine, vous devez procéder comme suit :</p>
    <ul class="colour">
      <li>Installez <span data-keyref="GameMaker Name">GameMaker</span> et le site <span class="notranslate">runtimes</span> nécessaire</li>
      <li>Construire les projets à travers le site <span class="notranslate">IDE</span> pour les cibles requises, afin de s'assurer qu'ils fonctionnent bien.</li>
      <li>Test de construction à partir de la ligne de commande (voir les exemples ci-dessous)</li>
      <li>Créez un fichier batch qui effectuera la construction dont vous avez besoin dans le cadre de la tâche (testez-le à partir de la ligne de commande).</li>
      <li>Configurez un environnement CI (cela dépend de la façon dont vous allez construire vos jeux) ; nous suggérons d'utiliser <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>.</li>
      <li>Configurez votre tâche CI et assurez-vous que toutes les conditions préalables sont réunies (par exemple, synchronisation du contrôle de la source avec votre projet).</li>
      <li>Accrochez le fichier batch dans la tâche CI et testez-le dans l'environnement Jenkins.</li>
    </ul>
    <h2>Notes</h2>
    <ul class="colour">
      <li>Certaines plates-formes peuvent avoir des problèmes avec la longueur des chemins d'accès aux fichiers, auquel cas vous devrez <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> lecteurs virtuels sur votre PC (comme le fait le site <span class="notranslate">IDE</span> ) avant de les passer dans vos commandes.</li>
      <li>Certaines plates-formes (notamment <span class="notranslate">Android</span>) vont automatiquement <span class="inline">subst</span> un lecteur pendant la construction, donc vous pouvez avoir besoin de nettoyer manuellement en cas d'erreur.</li>
    </ul>
    <h2>Options</h2>
    <p>Voici les options que vous pouvez utiliser en exécutant l'exécutable <strong>Igor </strong>:</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Le dossier utilisateur utilisé pour récupérer les informations sur les licences
            <br>
            <br>
            Sur <span class="notranslate">Windows</span>, il s'agit de <span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            Sur <span class="notranslate">macOS</span>, ce sera : <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Le dossier racine du runtime</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">Le chemin complet vers le fichier <span class="inline">.yyp</span> du projet.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">Le répertoire <span class="notranslate">cache</span> à utiliser (par défaut, <span class="inline">\cache</span> dans le répertoire actuel)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">Le répertoire temporaire à utiliser (la valeur par défaut est <span class="inline">c:\temp</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">Le répertoire de sortie où la compilation sera extraite ; ne spécifiez pas seulement un répertoire, car l'entrée de fin est toujours supprimée (par exemple, si vous spécifiez <span class="inline">d:\game\output</span>, les fichiers de jeu seront placés dans <span class="inline">d:\game</span>).
            <br>
            <br>
            Si ce paramètre n'est pas spécifié, un répertoire nommé <span class="inline">output</span> sera créé dans le même répertoire que le fichier <span class="inline">.bat</span> (ou à partir duquel la commande est exécutée), contenant les fichiers de compilation extraits. </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">Le nom de fichier réel du fichier ZIP ou du programme d'installation NSIS qui est créé.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">Le nom de la configuration à utiliser (la valeur par défaut est <span class="inline">Default</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">Le type de sortie (soit YYC ou VM), par défaut VM.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">Le nombre de CPU à utiliser pendant le processus de construction.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">Le nom du périphérique cible tel qu'il est configuré dans l'IDE.</td>
        </tr>
      </tbody>
    </table>
    <h2>Exemples</h2>
    <p>Vous trouverez ci-dessous des exemples de commandes de construction pour toutes les plateformes :</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Opéra GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>Nettoyage du projet Opera GX :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>Exécution d'Opera GX :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Windows</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>Projet de nettoyage <span class="notranslate">Windows</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Construction d'une VM pour <span class="notranslate">Windows</span> -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>et <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>Construire YYC pour Windows-- <span class="inline">Run</span>, <span class="inline">PackageZip </span>et <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>Projet de nettoyage <span class="notranslate">macOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>Construction d'une VM pour <span class="notranslate">macOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>Notez</strong> que sur Mac vous devrez utiliser mono pour exécuter Igor, donc vous devrez écrire <span class="inline"><strong>mono</strong></span> avant toutes vos commandes, par exemple : <span class="inline">mono Igor.exe [options]</span></p>
      <p>Construction d'une VM pour <span class="notranslate">macOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>Construire YYC pour <span class="notranslate">macOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>Construire YYC pour <span class="notranslate">macOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>Projet de nettoyage <span class="notranslate">Linux</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>Construction d'une VM pour <span class="notranslate">Linux</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>Construire YYC pour <span class="notranslate">Linux</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>Projet de nettoyage HTML5 :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>Construction du dossier HTML5 (assurez-vous de spécifier un dossier cible avec <span class="inline">/tf)</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">iOS</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>Construction d'une VM pour <span class="notranslate">iOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>Construction d'une VM pour <span class="notranslate">iOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>Construire YYC pour <span class="notranslate">iOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>Construire YYC pour <span class="notranslate">iOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>Projet de nettoyage <span class="notranslate">Android</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Création d'un APK <span class="notranslate">Android</span> à l'aide de VM :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>Construire un APK <span class="notranslate">Android</span> en utilisant YYC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>Projet de nettoyage <span class="notranslate">tvOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>Construction d'une VM pour <span class="notranslate">tvOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>Construction d'une VM pour <span class="notranslate">tvOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>Construire YYC pour <span class="notranslate">tvOS</span> sur un Mac :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>Construire YYC pour <span class="notranslate">tvOS</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">PS4</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>Projet de nettoyage PS4 :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>Construction d'une VM pour PS4 sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>Construire YYC pour PS4 sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>Nettoyage du projet PS5 :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>Construction d'une VM pour la PS5 sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>Construire YYC pour PS5 sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox One</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>Nettoyage du projet Xbox One :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>Construire une VM pour la Xbox One sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>Construire YYC pour la Xbox One tout en étant sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Xbox Série X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>Nettoyage du projet Xbox Série X/S :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>Construction d'une VM pour Xbox Series X/S :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>Construire YYC pour Xbox Series X/S :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Interrupteur</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>Projet de nettoyage <span class="notranslate">Switch</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>Construction d'une VM pour <span class="notranslate">Switch</span> sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>Construction d'une VM pour YYC sur un PC :</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>Runtime d'Igor</h1>
    <p>Voici les options qui peuvent être utilisées avec le runtime Igor :</p>
    <table>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Définir le dossier utilisateur utilisé pour récupérer les informations de la licence afin que <span data-keyref="GameMaker Name">GameMaker</span> sache quels modules peuvent être installés.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Définit le chemin direct vers un fichier de licence, peut être utilisé comme une alternative à la définition d'un dossier utilisateur (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">Définir l'URL à partir de laquelle récupérer les informations sur <span class="notranslate">runtime</span> (par défaut, il s'agit de la version stable).</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Définir le dossier d'installation local de <span class="notranslate">runtime</span> pour lister les <span class="notranslate">runtimes</span> installés ou installer de nouveaux runtimes</td>
        </tr>
      </tbody>
    </table>
    <p>Voici les commandes qui peuvent être utilisées avec le runtime Igor :</p>
    <h4>Syntaxe :</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Commande</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">Liste des <span class="notranslate">runtimes</span> disponibles sur un flux (numéro de version, date/heure de construction)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">Liste les <span class="notranslate">runtimes</span> disponibles dans le dossier actuel (<span class="inline">directory</span>= chemin complet du dossier)
            <br>
            <br>
            Vous pouvez spécifier un répertoire dans lequel chercher, mais s'il n'est pas spécifié, la recherche se fera par défaut dans le répertoire courant.
            <br>
            <br>
            Cette commande vérifie également s'il existe un fichier <span class="inline">receipt.json</span> et un dossier <span class="inline">manifest</span> dans le répertoire (en s'assurant qu'il s'agit bien d'un <span class="notranslate">runtime</span>). </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">Imprime des informations sur le plus récent <span class="notranslate">runtime</span> sur le flux donné ; a également besoin d'un fichier de licence pour afficher des informations sur les modules disponibles pour l'utilisateur.
            <br>
            <br>
            <span class="inline">version</span> peut être soit une chaîne utilisée pour rechercher dans les titres des flux (par exemple : <span class="inline">&quot;739&quot;</span> afficherait des informations sur toutes les constructions contenant 739 dans leur numéro de version), soit <span class="inline">all</span> pour afficher des informations sur tous les flux.
            <br>
            <br>
            Il énumérera les modules avec les noms de fichiers <span class="inline">.zip</span> pour chaque module </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">Installe la dernière version de <span class="notranslate">runtime</span> à partir du flux donné en utilisant <span class="inline">version</span> comme filtre de recherche ; si cela n'est pas spécifié, la dernière version sera utilisée par défaut. Elle récupère tous les modules que l'utilisateur possède sur sa licence.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">Calcule les sommes de contrôle pour tous les fichiers installés et les compare aux sommes de contrôle écrites dans le manifeste <span class="inline">folder</span>. Vous pouvez spécifier un dossier à vérifier, mais si ce n'est pas le cas, il s'agira par défaut du répertoire courant.
            <br>
            <br>
            Cela signalera tous les fichiers où les sommes de contrôle ne correspondent pas, les fichiers manquants et les fichiers qui ne devraient pas être là.
            <br>
            <br>
            Notez que les fichiers manifestes eux-mêmes ne sont pas vérifiés et qu'un utilisateur peut modifier les fichiers manifestes pour qu'ils correspondent à ceux qui sont installés. </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>Test d'Igor</h1>
    <p>Voici les options qui peuvent être utilisées pour tester vos constructions avec Igor :</p>
    <table>
      <tbody>
        <tr>
          <th style="">Option</th>
          <th style="">Description</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Définir le dossier utilisateur utilisé pour récupérer les informations de la licence afin que <span data-keyref="GameMaker Name">GameMaker</span> sache quels modules peuvent être installés.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Définir un chemin direct vers un fichier de licence, peut être utilisé comme une alternative à la définition d'un dossier utilisateur (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">Définit un chemin direct vers un fichier <span class="inline">devices.json</span>, peut être utilisé comme une alternative à la définition d'un dossier utilisateur (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">Le délai d'attente à utiliser pour le test en secondes, par défaut 120 secondes ; le test sera arrêté après ce délai et sera marqué comme ayant échoué.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">Nombre de secondes à attendre dans la boucle principale avant de déclarer que le test est réussi, la valeur par défaut est de 30 secondes.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">Utilisé pour rechercher le nom du dispositif dans le fichier <span class="inline">devices.json</span> du dossier utilisateur.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">Liste de cibles séparées par des virgules au format <span class="inline">PLATFORM|DEVICE</span>, par exemple : <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            Si vous spécifiez <strong>all</strong>, les tests tenteront de s'exécuter pour chaque dispositif du fichier <span class="inline">devices.json</span>. </td>
        </tr>
      </tbody>
    </table>
    <p>Il existe une commande que vous pouvez utiliser pour exécuter des tests avec Igor :</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>Vous devez spécifier soit un répertoire de test, soit un nom de fichier de test.</p>
    <ul class="colour">
      <li>S'il s'agit d'un répertoire, Igor cherchera un fichier appelé <span class="inline">tests.json</span> dans le répertoire.
        <ul>
          <li>Si le fichier <strong>n'est pas trouvé</strong>, Igor cherchera récursivement les fichiers <span class="inline">.yyz</span> et <span class="inline">.yyp</span> dans le répertoire
            <ul>
              <li>Chaque projet trouvé sera construit et exécuté sous Windows.</li>
              <li>Il attendra que le fichier <span class="notranslate">runner</span> atteigne la boucle principale.
                <ul>
                  <li>Le test réussit si le site <span class="notranslate">runner</span> est toujours en cours d'exécution après le temps d'attente.</li>
                  <li>Le test échoue si le projet ne se compile pas dans le délai imparti ou s'il se plante avant la fin du temps d'attente.</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Si un fichier <span class="inline">tests.json</span> <strong>est trouvé</strong>, Igor exécutera les tests décrits dans le fichier (voir exemple ci-dessous)</li>
        </ul>
      </li>
      <li>Vous pouvez également fournir un chemin direct vers un fichier <span class="inline">tests.json</span> au lieu d'un répertoire</li>
    </ul>
    <p> </p>
    <h1>Fichier Tests.json</h1>
    <h2>Format</h2>
    <p>Le fichier <span class="inline">tests.json</span> doit avoir le format suivant :</p>
    <ul class="colour">
      <li>Le fichier JSON doit contenir un tableau d'objets</li>
      <li>Chaque objet doit décrire un test
        <ul>
          <li>L'objet test doit contenir ces clés :
            <ul>
              <li><span class="inline">name</span>: Un nom utilisé pour indiquer si le test a réussi ou échoué.</li>
              <li><span class="inline">path</span>: Un chemin vers un fichier ou un dossier <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> pour le test.</li>
              <li><span class="inline">command</span>: La commande Igor pour le test (<span class="inline">Run</span>, <span class="inline">CreatePackage</span>, etc. comme décrit ci-dessus)</li>
            </ul>
          </li>
          <li>L'objet test peut également contenir ces clés :
            <ul>
              <li><span class="inline">platform</span>: Passé directement à Igor pour faire le test.</li>
              <li><span class="inline">device</span>: Le nom du dispositif du fichier <span class="inline">devices.json</span> </li>
              <li><span class="inline">target</span>: La cible dans un format &quot;<span class="inline">PLATFORM|TARGET&quot;</span>, par exemple : &quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>: Un délai d'attente pour l'ensemble du test, y compris la compilation et l'exécution ; s'il est dépassé, le test sera arrêté et marqué comme ayant échoué.</li>
              <li><span class="inline">waittime</span>: Le temps d'attente après l'entrée dans la boucle principale avant de décider si le test a réussi.</li>
              <li><span class="inline">owner</span>l'adresse e-mail de l'utilisateur qui sera envoyé par e-mail si ce test échoue.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Exemple</h2>
    <p>Voici un exemple de fichier <span class="inline">tests.json</span>:</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Retour : <a data-xref="{title}" href="Runner_Details/Runner_Details.htm">Runner &amp; Compiler</a></div>
          <div style="float:right">Suivant : <a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">Fichiers batch du compilateur / Scripts</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>