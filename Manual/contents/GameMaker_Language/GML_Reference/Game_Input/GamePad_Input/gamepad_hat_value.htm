<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gamepad_hat_value</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gamepad_hat_value" />
  <meta name="rh-index-keywords" content="gamepad_hat_value" />
  <meta name="search-keywords" content="gamepad_hat_value" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gamepad_hat_value</h1>
  <p>Avec cette fonction, vous pouvez obtenir la valeur actuelle d'un &quot;chapeau&quot; de gamepad. Chaque valeur de chapeau est un masque de bit pour les différentes directions où :</p>
  <ul class="colour">
    <li>Haut = 1</li>
    <li>Droit = 2</li>
    <li>Bas = 4</li>
    <li>Gauche = 8</li>
  </ul>
  <p>Notez que ces valeurs peuvent être combinées (par exemple, en fournissant un index de chapeau de 3, vous vérifierez vers le haut et vers la droite, ou vous pouvez utiliser l'opérateur <span class="inline2">|</span> pour combiner les différentes valeurs) mais seuls 2 bits au maximum peuvent être pressés à la fois. La fonction renvoie une valeur réelle comprise entre 0 et 1, où 0 signifie que le chapeau n'a pas été pressé et 1 qu'il a été complètement pressé (et il peut y avoir des valeurs intermédiaires selon que la manette de jeu supporte ou non l'entrée analogique pour les chapeaux).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gamepad_hat_value(device, hatindex);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">device</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Which gamepad device &quot;slot&quot; to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">hatindex</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Which gamepad hat (or hats) to check for.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _dir = gamepad_hat_value(global.PadIndex, 0);<br />
    switch (_dir)<br />
    {<br />
        case 1: y -= 3; break;<br />
        case 2: x += 3; break;<br />
        case 3: y -= 3; x += 3; break;<br />
        case 4: x -= 3; break;<br />
        case 6: y += 3; x += 3; break;<br />
        case 8: y += 3; break;<br />
        case 9: y -= 3; x -= 3; break;<br />
        case 12: y += 3; x -= 3; break;<br />
    }</p>
  <p>Le code ci-dessus stocke l'état du chapeau &quot;0&quot; dans une variable locale, puis vérifie quelle est la valeur de retour et agit en conséquence.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Gamepad_Input.htm">Entrée de la manette de jeu</a></div>
        <div style="float:right">Suivant : <a href="gamepad_get_mapping.htm"><span class="notranslate">gamepad_get_mapping</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gamepad_hat_value
-->
  <!-- TAGS
gamepad_hat_value
-->
</body>
</html>