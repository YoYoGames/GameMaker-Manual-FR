<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_potential_settings</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_potential_settings" />
  <meta name="rh-index-keywords" content="mp_potential_settings" />
  <meta name="search-keywords" content="mp_potential_settings" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_potential_settings</h1>
  <p>Les fonctions de <span class="inline">mp_potential_</span> font leur travail en utilisant un certain nombre de paramètres qui peuvent être modifiés à l'aide de cette fonction. Globalement, la méthode fonctionne de la manière suivante : elle essaie d'abord de se déplacer en ligne droite vers le but, en regardant un certain nombre de pas en avant qui peut être défini avec le paramètre &quot;ahead&quot; (la valeur par défaut est 3). Réduire cette valeur signifie que l'instance commencera à changer de direction plus tard car elle ne &quot;voit&quot; pas aussi loin devant elle, et l'augmenter signifie qu'elle commencera à changer de direction plus tôt. Si cette vérification conduit à une collision, l'instance commence à regarder des directions plus à gauche et à droite de la direction idéale, en ligne droite. Il fait cela par étapes de taille &quot;rotstep&quot; (la valeur par défaut est 10), et réduire cette valeur donne à l'instance plus de possibilités de mouvement mais sera plus lent car il a besoin de plus de puissance de traitement.</p>
  <p>Le paramètre &quot;maxrot&quot; est un peu plus difficile à expliquer ! L'instance a une direction de mouvement actuelle, et maxrot (la valeur par défaut est 30) indique de combien elle est autorisée à varier sa direction de part et d'autre de cette direction actuelle en un pas. Ainsi, même si elle peut se déplacer, par exemple, directement vers le but, elle ne le fera que si elle ne viole pas ce changement de direction maximal. Si vous donnez à maxrot une valeur élevée, l'instance pourra changer de direction à chaque pas, ce qui facilitera la recherche d'un chemin court, mais le chemin sera plus laid et moins naturel. Si vous donnez une valeur plus petite à maxrot, le chemin sera plus lisse mais il pourra prendre des détours plus longs (et parfois même ne pas trouver le but). Enfin, quand aucun pas ne peut être fait, le comportement dépend de la valeur du paramètre &quot;onspot&quot;. Si onspot est vrai (la valeur par défaut), alors l'instance tournera sur son spot de la quantité indiquée par &quot;maxrot&quot; et s'il est faux, elle ne bougera pas du tout. La valeur "false" est utile pour les voitures par exemple, mais réduit les chances de l'instance de trouver un chemin.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">mp_potential_settings(maxrot, rotstep, ahead, onspot)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">maxrot</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The number of degrees either side of the current direction that the instance can rotate in a step</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">rotstep</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The number of degrees either side of the current direction that the instance can check for a collision</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ahead</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The number of steps ahead that the instance can check for a collision. Larger values are slower than lower ones.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">onspot</span></td>
        <td><span data-keyref="Type_Bool">Booléen</span></td>
        <td><span class="notranslate">Use this to allow the instance to rotate on the spot when no path is found (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">mp_potential_settings(45, 5, 5, 0);</p>
  <p>Le code ci-dessus configurera les fonctions <span class="inline">mp_potential_</span> pour utiliser les paramètres suivants : l'instance peut regarder en avant de cinq pas, changer de direction de 45 degrés à chaque pas, regarder de 5 degrés de chaque côté de la direction actuelle s'il y a un obstacle et ne pas tourner sur place s'il y a une collision.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Motion_Planning.htm">Planification des mouvements</a></div>
        <div style="float:right">Suivant : <a href="mp_potential_step.htm"><span class="notranslate">mp_potential_step</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
mp_potential_settings
-->
  <!-- TAGS
mp_potential_settings
-->
</body>
</html>