<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Collisions</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Collision functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="collisions,collision functions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Collisions</h1>
  <p>Lorsque vous planifiez des mouvements ou décidez de certaines actions, il est souvent important de voir s'il y a des collisions avec d'autres objets à certains endroits dans le monde du jeu, et souvent, choisir la bonne collision pour le travail est la tâche la plus importante de toutes. <span data-keyref="GameMaker Name">GameMaker</span> dispose d'un certain nombre de fonctions intégrées pour vous aider à gérer les collisions correctement et en fonction des besoins de votre projet.</p>
  <p class="note"><span class="note"><b>NOTE</b></span> Les fonctions de collision utilisaient des valeurs entières dans les versions antérieures de <span class="notranslate">GameMaker</span>, mais elles utilisent désormais des valeurs à virgule flottante, ce qui signifie que les fonctions de collision n'arrondissent plus les arguments non entiers. Pour plus d'informations, veuillez lire <a data-xref="{title}" href="Collision_Compatibility_Mode.htm">Mode de compatibilité des fonctions de collision</a>.</p>
  <h2><label for="one">Vérification simple des collisions</label></h2>
  <p>Les fonctions suivantes traitent des différentes manières dont vous pouvez faire en sorte qu'une instance vérifie les collisions avec une autre instance :</p>
  <ul class="colour">
    <li><a href="place_empty.htm"><span class="notranslate">place_empty</span></a></li>
    <li><a href="place_free.htm"><span class="notranslate">place_free</span></a></li>
    <li><a href="place_meeting.htm"><span class="notranslate">place_meeting</span></a></li>
    <li><a href="position_empty.htm"><span class="notranslate">position_empty</span></a></li>
    <li><a href="position_meeting.htm"><span class="notranslate">position_meeting</span></a></li>
    <li><a href="position_change.htm"><span class="notranslate">position_change</span></a></li>
    <li><a href="position_destroy.htm"><span class="notranslate">position_destroy</span></a></li>
    <li><a href="../../Asset_Management/Instances/instance_place.htm"><span class="notranslate">instance_place</span></a></li>
    <li><a href="../../Asset_Management/Instances/instance_place_list.htm"><span class="notranslate">instance_place_list</span></a></li>
    <li><a href="../../Asset_Management/Instances/instance_position.htm"><span class="notranslate">instance_position</span></a></li>
    <li><a href="../../Asset_Management/Instances/instance_position_list.htm"><span class="notranslate">instance_position_list</span></a></li>
  </ul>
  <p> </p>
  <h2>Contrôle avancé des collisions</h2>
  <p>Les routines suivantes peuvent être utilisées pour cela (ainsi que d'autres fonctions détaillées dans les sections relatives aux <b>déplacements</b> et aux <b>instances</b>). Ces fonctions de collision fonctionnent toutes légèrement différemment mais elles conservent trois arguments communs que nous allons expliquer ici :</p>
  <ul class="colour">
    <li><b>obj</b>: C'est ici que nous spécifions l'objet avec lequel la fonction doit vérifier la présence d'une collision. Il peut s'agir d'un identifiant d'instance, d'un type d'objet ou du mot-clé spécial GM <b>all</b>. Il convient également de noter que si le type d'objet choisi est le <b>parent</b> désigné d'autres objets, alors tous les <i>enfants</i> de cet objet seront également inclus dans cette vérification.<b></b></li>
    <li><b>prec</b>: Ce paramètre peut être soit <span class="inline">true</span> soit <span class="inline">false</span> et concerne la précision de la vérification des collisions. S'il est défini sur <span class="inline">true</span>, des collisions précises seront calculées (mais seulement si l'objet à contrôler a marqué &quot;précis&quot; pour sa détection de collision dans ses propriétés de masque), ce qui est une tâche légèrement plus complexe pour le CPU et doit donc être utilisé avec prudence. Si vous choisissez <span class="inline">false</span>, les collisions seront calculées sur la base de la boîte englobante de l'objet à contrôler.<b></b></li>
    <li><b>notme</b>: Vous pouvez avoir besoin de vérifier les collisions avec un objet qui a le même index que l'objet qui exécute le code, donc pour empêcher le code de trouver une collision avec lui-même, vous pouvez définir cette valeur à <span class="inline">true</span>. Si vous recherchez spécifiquement l'instance de l'objet qui exécute le code, ou si ce n'est pas important, vous pouvez laisser cette valeur à <span class="inline">false</span>.</li>
  </ul>
  <p>Les fonctions de base renverront soit l'ID d'une instance en collision, soit le mot-clé spécial <span class="inline">noone</span> lorsqu'il n'y a pas de collision, tandis que les fonctions de <i>liste</i> renverront le nombre d'instances en collision et rempliront une liste DS préétablie avec leurs ID. Notez que s'il y a plusieurs collisions avec les zones définies par ces fonctions et les instances de l'objet donné, <i>un</i> seul ID d'instance est renvoyé, et il peut s'agir de <i>n'importe laquelle des instances de la collision</i>.</p>
  <p>Les fonctions suivantes permettent de traiter les collisions avancées.</p>
  <ul class="colour">
    <li><a href="collision_circle.htm"><span class="notranslate">collision_circle</span></a></li>
    <li><a href="collision_circle_list.htm"><span class="notranslate">collision_circle_list</span></a></li>
    <li><a href="collision_ellipse.htm"><span class="notranslate">collision_ellipse</span></a></li>
    <li><a href="collision_ellipse_list.htm"><span class="notranslate">collision_ellipse_list</span></a></li>
    <li><a href="collision_line.htm"><span class="notranslate">collision_line</span></a></li>
    <li><a href="collision_line_list.htm"><span class="notranslate">collision_line_list</span></a></li>
    <li><a href="collision_point.htm"><span class="notranslate">collision_point</span></a></li>
    <li><a href="collision_point_list.htm"><span class="notranslate">collision_point_list</span></a></li>
    <li><a href="collision_rectangle.htm"><span class="notranslate">collision_rectangle</span></a></li>
    <li><a href="collision_rectangle_list.htm"><span class="notranslate">collision_rectangle_list</span></a></li>
  </ul>
  <p> </p>
  <h2>Contrôle des collisions sans masque</h2>
  <p>Toutes les fonctions ci-dessus sont liées aux <i>instances de</i> contrôle de collision, et en tant que telles, elles s'appuient sur le masque de collision qui est défini pour l'instance. Cependant, il y a de nombreux moments où vous avez besoin de vérifier les &quot;collisions&quot; avec un point ou une zone, surtout lorsque votre instance n'a pas de <span class="notranslate">sprite</span> assigné, ou lorsque vous travaillez avec la souris etc... C'est pourquoi <span data-keyref="GameMaker Name">GameMaker</span> fournit également les fonctions suivantes pour vous aider dans ces situations :</p>
  <ul class="colour">
    <li><a href="point_in_rectangle.htm"><span class="notranslate">point_in_rectangle</span></a></li>
    <li><a href="point_in_triangle.htm"><span class="notranslate">point_in_triangle</span></a></li>
    <li><a href="point_in_circle.htm"><span class="notranslate">point_in_circle</span></a></li>
    <li><a href="rectangle_in_rectangle.htm"><span class="notranslate">rectangle_in_rectangle</span></a></li>
    <li><a href="rectangle_in_triangle.htm"><span class="notranslate">rectangle_in_triangle</span></a></li>
    <li><a href="rectangle_in_circle.htm"><span class="notranslate">rectangle_in_circle</span></a></li>
  </ul>
  <p> </p>
  <h2>Physique Collisions</h2>
  <p>Lorsque vous utilisez la physique intégrée, le fonctionnement des fonctions de collision ci-dessus n'est pas garanti pour les instances dotées de la physique. Cela est principalement dû au fait que ces instances n'utilisent plus la majorité des variables régulières intégrées (au lieu de cela, les instances activées par la physique ont leur <a href="../../Physics/Physics_Variables/Physics_Variables.htm">propre ensemble de variables</a>) et qu'elles n'utilisent pas non plus le masque de collision ou la boîte englobante, car elles utilisent des <a href="../../Physics/Fixtures/Fixtures.htm">fixtures à</a> la place. Cependant, il existe une fonction spéciale pour tester les collisions avec la physique activée qui vérifie le chevauchement des fixtures :</p>
  <ul class="colour">
    <li><a href="../../Physics/physics_test_overlap.htm"><span class="notranslate">physics_test_overlap</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Le dos : <a href="../Movement_And_Collisions.htm">Mouvement et collisions</a></div>
        <div style="float:right">Suivant : <a href="../Movement/Movement.htm">Mouvement</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Collision Functions
-->
  <!-- TAGS
collision_functions
-->
</body>
</html>