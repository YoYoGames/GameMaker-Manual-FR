<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_message_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_message_async" />
  <meta name="rh-index-keywords" content="show_message_async" />
  <meta name="search-keywords" content="show_message_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_message_async</h1>
  <p>Cette fonction ouvre une fenêtre et affiche le message que vous avez défini dans la fonction à l'utilisateur. Il s'agit d'une fonction asynchrone, et en tant que telle, <span data-keyref="GameMaker Name">GameMaker</span> <i>ne</i> bloque <i>pas</i> le périphérique sur lequel elle est exécutée en attendant une réponse, mais continue à exécuter les événements normalement. Une fois que l'utilisateur a appuyé sur le bouton &quot;OK&quot;, un événement asynchrone est déclenché. <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm"><b>Dialogue</b></a> est déclenché et, pour la durée de cet événement <i>uniquement</i>, une ds_map sera stockée dans la variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>.</p>
  <p>Cette carte contiendra les deux clés, &quot;id&quot; et &quot;status&quot;, &quot;id&quot; étant la valeur renvoyée par la fonction lorsqu'elle a été appelée, et &quot;status&quot; étant soit <span class="inline">true</span> si le bouton &quot;Okay&quot; a été pressé, soit <span class="inline">false</span> si le message a été annulé (si disponible, car toutes les plateformes cibles ne permettent pas l'annulation des dialogues).</p>
  <p class="note"><strong><em><span class="note">NOTE</span></em></strong><em> Cette fonction est <span data-keyref="Dialog for debug only"> <strong>réservée à un usage de débogage et de test</strong></span>et ne doit pas être utilisée dans les jeux publiés. Dans ce cas, vous devez créer une interface utilisateur personnalisée pour recevoir les entrées des joueurs, de manière à avoir un contrôle total sur l'apparence et le comportement des boîtes de dialogue.</em></p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">show_message_async(string);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">string</span></td>
        <td><span data-keyref="Type_String">Chaîne de caractères</span></td>
        <td><span class="notranslate">The message to show to the user.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>L'<b>événement de pression de la souris gauche</b> (par exemple) de l'objet qui affiche le message aurait le code suivant :</p>
  <p class="code">msg = show_message_async(&quot;You will now be taken to the store&quot;);</p>
  <p>L'exemple ci-dessus affichera un message avec la chaîne de caractères donnée. L'identifiant du message est stocké dans la variable &quot;msg&quot; et sera utilisé dans l'événement asynchrone Dialogs comme indiqué ci-dessous :</p>
  <p class="code">var i_d, stat;<br />
    i_d = ds_map_find_value(async_load, &quot;id&quot;);<br />
    if (i_d == msg) <br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;))<br />
        {<br />
            url_open(&quot;https://play.google.com/store&quot;);<br />
        }<br />
    }</p>
  <p>Le code ci-dessus vérifie la clé &quot;id&quot; de l'adresse <span class="inline">DS Map</span> retournée par rapport à la valeur stockée dans la variable &quot;msg&quot;. S'ils sont identiques, il vérifie ensuite si le bouton &quot;Okay&quot; a été pressé (plutôt que la fenêtre soit fermée/annulée) et s'il retourne <span class="inline">true</span>, il ouvre une url.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Dialog.htm">Dialogue</a></div>
        <div style="float:right">Suivant : <a href="show_question_async.htm"><span class="notranslate">show_question_async</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
show_message_async
-->
  <!-- TAGS
show_message_async
-->
</body>
</html>