<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>envoi de défi</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for achievement_send_challenge" />
  <meta name="rh-index-keywords" content="achievement_send_challenge,achievement_type_score_challenge ,achievement_type_achievement_challenge ,achievement_leaderboard_info" />
  <meta name="search-keywords" content="achievement_send_challenge,achievement_type_score_challenge ,achievement_type_achievement_challenge ,achievement_leaderboard_info" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>envoi de défi</h1>
  <p>Cette fonction enverra un défi à travers le réseau au joueur choisi. Vous pouvez obtenir l'<i>identifiant du joueur</i> en utilisant la fonction <a href="achievement_load_friends.htm"><tt>achievement_load_friends()</tt></a> ou la fonction <a href="achievement_load_leaderboard.htm"><tt>achievement_load_leaderboard()</tt></a>    et vous devez également fournir le <i>challengeid</i> qui est la valeur unique donnée au défi lorsque vous l'avez créé sur votre tableau de bord iTunes Connect ou Google Play. Vous devez également fournir un score, un court message texte et définir le type de défi.
   <i>type de</i> défi. Il peut s'agir d'une des <b>constantes</b> suivantes :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">achievement_type_score_challenge </span></td>
        <td>Un défi basé sur la valeur du score.</td>
      </tr>
      <tr>
        <td><span class="notranslate">achievement_type_achievement_challenge </span></td>
        <td>Un défi basé sur une réalisation.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Cette fonction va déclencher un callback <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm">Social Asynchronous Event</a> pour le joueur qui doit recevoir le défi, et dans cet événement vous aurez une carte DS référencée
    dans la variable <tt>async_load</tt>. La clé <i>id</i> de cette <tt>carte DS</tt> est utilisée pour identifier le bon callback (il peut y avoir plus d'une fonction de déclenchement pour un événement asynchrone donné), et sera associée à la <b>constante</b> <tt>achievement_challenge_received</tt> ainsi qu'à un certain nombre d'autres paires clé/valeur pour chaque joueur. Le contenu exact de la carte est indiqué ci-dessous :</p>
  <p class="note"><b>NOTE</b>: que l'utilisateur peut également recevoir des notifications de toast pour les défis reçus, mais cela dépendra des valeurs que vous avez choisies en utilisant la fonction <span style="font-size:1px;"><a href="achievement_show_challenge_notifications.htm"><tt style="font-size: 14px">achievement_show_challenge_notifications()</tt></a></span>.</p>
  <ul class="colour">
    <li>&quot;<b>id</b>&quot; - Pour cette fonction, il s'agit de <tt>achievement_leaderboard_info</tt>.</li>
    <li>&quot;<b>playerid</b>&quot; - L'ID du joueur pour le défi.</li>
    <li>&quot;<b>issuerid</b>&quot; - L'identifiant de l'émetteur du défi.</li>
    <li>&quot;<b>state</b>&quot; - L'état du défi, qui aura une valeur de 0 à 3 (sous forme de chaîne) pour <i>invalide</i>, <i>en attente</i>, <i>terminé</i> ou <i>refusé</i>.</li>
    <li>&quot;<b>Message</b>&quot; - Le message texte pour le défi.</li>
    <li>&quot;<b>completeddate</b>&quot; - La date d'achèvement du défi.</li>
    <li>&quot;<b>issueddate</b>&quot; - La date d'émission du défi.</li>
    <li>&quot;<b>Type</b>&quot; - Le type de défi donné. Peut être l'une des deux constantes énumérées ci-dessus.</li>
    <li>&quot;<b>Identifiant</b>&quot; - La chaîne d'identification du défi, telle que définie sur le tableau de bord du fournisseur.</li>
    <li>&quot;<b>score</b>&quot; - Le score lié au défi (le cas échéant).</li>
  </ul>
  <p> </p>
  <h4><b>Syntaxe :</b></h4>
  <p class="code">achievement_send_challenge(playerid, challengeid, score, type, message)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">playerid</span></td>
        <td>L'ID unique du joueur à défier.</td>
      </tr>
      <tr>
        <td><span class="notranslate">challengeid</span></td>
        <td>L'identifiant unique du défi (tel qu'il figure sur le tableau de bord du fournisseur).</td>
      </tr>
      <tr>
        <td><span class="notranslate">score</span></td>
        <td>Le score à battre.</td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td>le type de défi à lancer - une des deux <b>constantes</b> données ci-dessous.</td>
      </tr>
      <tr>
        <td><span class="notranslate">message</span></td>
        <td>Le message à joindre au défi.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>Pour envoyer un défi sur le réseau, vous auriez ce code :</p>
  <p class="code">achievement_send_challenge(global.playerid[0], global.challengeid[0], score, achievement_type_score_challenge, &quot;Beat that sucker!&quot;);</p>
  <p>Cette demande déclenchera alors l'<b>événement social</b> dans votre jeu pour le joueur visé par le défi, et cela peut être traité de la manière suivante :</p>
  <p class="code">var ident = ds_map_find_value(async_load, &quot;id&quot;);<br/> if ident == achievement_challenge_received<br/>     {
    <br/>     player_id = ds_map_find_value(async_load, &quot;playerid&quot;);<br/>     issuer_id = ds_map_find_value(async_load, &quot;issuerid&quot;);<br/>     state = ds_map_find_value(async_load, &quot;state&quot;);<br/>     message = ds_map_find_value(async_load,
    &quot;message&quot;);<br/>     date_completed = ds_map_find_value(async_load, &quot;completeddate&quot;);<br/>     date_issued = ds_map_find_value(async_load, &quot;issueddate&quot;);<br/>     ach_type = ds_map_find_value(async_load, &quot;type&quot;);<br/>        ach_ident = ds_map_find_value(async_load, &quot;identifier&quot;);<br/>     ach_score = ds_map_find_value(async_load, &quot;score&quot;);<br/>     }
  </p>
  <p>Le code ci-dessus vérifie la <tt>carte DS</tt> retournée dans l'<b>événement social asynchrone</b> et si son &quot;id&quot; correspond à la constante vérifiée, il extrait ensuite les valeurs pertinentes pour chacune des clés de la carte et les stocke dans des variables
    pour une utilisation ultérieure.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Achievements_And_Leaderboards.htm">Réalisations et classements</a></div>
        <div style="float:right">Suivant : <a href="achievement_reset.htm"><span class="notranslate">achievement_reset</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
achievement_send_challenge
achievement_type_score_challenge 
achievement_type_achievement_challenge 
achievement_leaderboard_info
-->
  <!-- TAGS
achievement_send_challenge
-->
</body>
</html>