<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Contraintes de retour en arrière</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>Contraintes de retour en arrière</h1>
  <p>Le système Rollback comporte certaines contraintes dont vous devez être conscient. Si vous ne respectez pas l'une de ces contraintes, le <a data-xref="{text}" href="Rollback_System.htm#h">Test Sync</a> émettra une erreur pour vous informer de ce qui ne va pas.</p>
  <h2>Chambres</h2>
  <p>Vous pouvez changer de pièce lorsqu'une partie multijoueur est active, à condition que tous les joueurs soient connectés.</p>
  <p>Si vous changez de salle, le jeu devra relancer son processus de synchronisation.</p>
  <p>Les données des objets gérés <strong>ne sont pas </strong>automatiquement transférées lorsqu'une pièce est modifiée. Vous pouvez les transférer manuellement en utilisant des variables globales, un objet persistant ou en enregistrant les informations du joueur local dans un fichier.</p>
  <p>En utilisant ces options, vous pouvez sauvegarder les informations du joueur avant la fin d'une room, et les réappliquer lorsque l'instance du joueur est créée dans une nouvelle room.</p>
  <h2>Ordre des événements</h2>
  <p>Lorsqu'une partie multijoueur commence, les événements suivants se déroulent dans l'ordre indiqué :</p>
  <ul class="colour">
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p">Début de la pièce</a></li>
    <li><strong>Créer des</strong> événements pour des <a href="Rollback_Functions/rollback_define_player.htm">joueurs définis</a></li>
    <li><a data-xref="{text}" href="Rollback_Events.htm#h">Début du retour en arrière</a>
      <ul>
        <li><span class="inline2">rollback_event_param.first_start</span> sera <span class="inline2">vrai</span>.</li>
      </ul>
    </li>
  </ul>
  <p>Lorsque vous changez de salle au milieu d'une partie multijoueur, les événements suivants se déroulent dans l'ordre indiqué :</p>
  <ul class="colour">
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p1">Fin de la pièce</a></li>
    <li>Événements de<strong>nettoyage</strong> pour des <a href="Rollback_Functions/rollback_define_player.htm">joueurs définis </a></li>
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p">Début de la pièce</a></li>
    <li><strong>Créer des</strong> événements pour des <a href="Rollback_Functions/rollback_define_player.htm">joueurs définis</a></li>
    <li><a data-xref="{text}" href="Rollback_Events.htm#h">Début du retour en arrière</a>
      <ul>
        <li><span class="inline2">rollback_event_param.first_start</span> sera <span class="inline2">false</span>.</li>
      </ul>
    </li>
  </ul>
  <h2>Détruire l'événement</h2>
  <p>L'événement <strong>Destroy</strong> d'une instance s'exécute normalement dès qu'elle est détruite, par exemple, après l'appel de <span class="inline"><a href="../Asset_Management/Instances/instance_destroy.htm">instance_destroy()</a></span>. Cependant, l'événement peut ne pas s'exécuter immédiatement dans un jeu multi-joueurs.</p>
  <p>Un appel à <span class="inline">instance_destroy()</span> peut facilement être exécuté par une mauvaise prédiction, ce qui signifie que la destruction de l'instance sera bientôt annulée lorsque les données correctes du joueur responsable seront reçues.</p>
  <p>Pour cette raison, l'événement Destroy d'une instance n'est appelé que lorsqu'il est confirmé qu'elle était censée être détruite. Cela signifie qu'il peut y avoir un léger décalage entre la destruction de l'instance sur l'écran d'un joueur et l'appel de son événement Destroy.</p>
  <p>Si vous voulez que quelque chose se passe sur l'écran d'un client dans la même image que la destruction d'une instance, il est recommandé de créer une fonction personnalisée et de l'appeler avec <span class="inline">instance_destroy()</span>.</p>
  <p>Cela s'applique également à l'événement <strong>Clean Up</strong> qui s'exécute sur une instance en cours de destruction.</p>
  <h2>Gestion de l'État</h2>
  <p>Rollback Multiplayer gère l'&quot;état&quot; de votre jeu entre les clients, ce qui inclut les instances gérées et leurs variables. Ces parties gérées de votre jeu peuvent être annulées en cas de prédiction erronée par le système Rollback.</p>
  <p>Lorsque vous créez ou détruisez une instance gérée, ou modifiez des propriétés/variables dans une instance gérée, vous mettez à jour l'état de votre jeu. Cet état <strong>n'est pas</strong> envoyé aux autres joueurs, car seule l'<a href="Rollback_Functions/rollback_define_input.htm">entrée</a> est partagée pour tous les clients.</p>
  <p>Il existe certaines restrictions concernant la gestion de l'état de votre jeu que vous devez respecter pour assurer une bonne synchronisation entre les joueurs.</p>
  <h3 id="h1">État avant le début du rollback</h3>
  <p>Vous devez vous assurer que chaque joueur commence dans le même état de jeu. Cela signifie que tout ce qui concerne votre jeu et ses instances gérées doit être le même pour tous les joueurs lorsque l'événement <a href="Rollback_Events.htm">Rollback Start</a> se déclenche, c'est-à-dire lorsque le jeu commence réellement.</p>
  <p>Vous pouvez exécuter n'importe quel code de création ou de configuration pour vos instances gérées avant ce point, tant que cela est fait exactement de la même manière pour tous les clients. Pour savoir si le jeu a commencé, utilisez <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_game_running.htm">rollback_game_running</a></span>.</p>
  <p>Vous pouvez utiliser le temps entre votre appel de début/jonction et l'événement <a href="Rollback_Events.htm">Rollback Start</a> pour afficher un écran de chargement pour les joueurs en attente.</p>
  <p>Le joueur revient au même état lorsqu'il <a href="Rollback_Functions/rollback_leave_game.htm">quitte un jeu</a>, ce qui signifie que l'utilisation de <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_game_running.htm">rollback_game_running</a></span> est nécessaire pour garantir que toute logique de jeu ne s'exécute que lorsque le jeu est connecté.</p>
  <h3>État global</h3>
  <p>Les variables globales ne peuvent pas affecter l'état de votre jeu, car elles ne sont pas synchronisées entre les joueurs. Toutes les variables nécessaires doivent se trouver dans des objets gérés.</p>
  <h3>État de l'événement de tirage au sort</h3>
  <p>Vous ne pouvez pas modifier l'état d'un événement Draw, et son objectif doit rester de dessiner des graphiques uniquement en fonction de l'état défini dans les événements précédents. Tous les objets gérés deviennent en lecture seule pendant un événement Draw, vous ne pouvez donc pas modifier leurs variables et vous ne pouvez pas créer ou détruire des instances d'objets gérés.</p>
  <h3 id="h">Variables temporelles</h3>
  <p>N'utilisez pas de variables/fonctions comme <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/current_time.htm">current_time</a></span> ou <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/get_timer.htm">get_timer()</a></span> pour affecter la logique du jeu. Une variable gérée appelée <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_current_frame.htm">rollback_current_frame</a></span> a été fournie et peut être utilisée à la place. Elle renvoie le nombre d'images qui se sont écoulées depuis le début de la partie multi-joueurs.</p>
  <p>Les<a href="../Asset_Management/Instances/Instance_Variables/alarm.htm">événements d'alarme</a> peuvent être utilisés en toute sécurité dans les objets gérés.</p>
  <p>Veillez également à ne pas utiliser <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/delta_time.htm">delta_time</a></span>, car il dépend fortement du système qui fait tourner le jeu et ne peut être synchronisé entre les joueurs.</p>
  <h3>Références de l'instance</h3>
  <p>Un ID d'instance stocké dans une instance gérée doit pointer vers une instance gérée.</p>
  <p>Si une instance gérée fait référence à une instance non gérée, il en résultera des incohérences entre les états du client, car les modifications apportées à cette instance non gérée ne peuvent pas être gérées et annulées.</p>
  <p>Par exemple, si votre instance gérée <span class="inline2">obj_workstation</span> contient une référence à une instance <span class="inline2">obj_anvil</span>, <span class="inline2">obj_anvil</span> doit être un objet géré.</p>
  <h3>Références de l'instance perdue</h3>
  <p>Une variable à l'intérieur d'une instance gérée, contenant une référence à une autre instance gérée, sera définie comme <span class="inline2">indéfinie</span> si l'instance référencée est détruite.</p>
  <p>Cela signifie que si une variable dans une instance gérée <strong>persistante</strong> contient une référence à une instance gérée <strong>non persistante</strong>, cette variable sera définie comme <span class="inline2">indéfinie</span> lorsque la pièce changera, car l'instance non persistante cessera d'exister.</p>
  <h2>Numéros aléatoires</h2>
  <p>L'état de la génération de nombres aléatoires (RNG) est géré entre les joueurs, il est donc totalement sûr d'utiliser des fonctions aléatoires (par exemple <span class="inline">random()</span>, <span class="inline">choose()</span>, etc.) pour la logique du jeu. Le système Rollback garantit que chaque joueur reçoit le même nombre aléatoire au même moment de la partie.</p>
  <p>Les événements Draw utilisent un état RNG distinct. Cela signifie que les fonctions aléatoires appelées dans un événement Draw n'affecteront pas l'état RNG régulier pour les autres événements, et peuvent ne pas être les mêmes entre les différents joueurs.</p>
  <h3>Graines</h3>
  <p>Vous ne pouvez pas utiliser <span class="inline"><a href="../Maths_And_Numbers/Number_Functions/randomise.htm">randomise()</a></span> ou <a href="../Maths_And_Numbers/Number_Functions/random_set_seed.htm"><span class="inline">random_set_seed()</span></a> pour changer la graine RNG, car elle est gérée par le système Rollback.</p>
  <p>L'état RNG géré ne démarre que lorsque <a data-xref="{text}" href="Rollback_Events.htm#h">Rollback Start</a> est appelé, c'est-à-dire lorsque la partie multi-joueurs commence. Vous pouvez modifier la graine avant ce moment, mais cela n'aura aucun effet au-delà du point de départ.</p>
  <h2>Autres lectures</h2>
  <p>Lisez les pages suivantes pour plus d'informations sur le système Rollback :</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_Events.htm">Événements de retour en arrière</a></li>
    <li><a data-xref="{title}" href="Creating_Multiplayer.htm">Créer un jeu multi-joueurs</a></li>
    <li><a data-xref="{title}" href="Rollback_System.htm">Système de retour en arrière</a></li>
    <li><a data-xref="{title}" href="Defining_Inputs.htm">Définir les entrées</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Retour : <a data-xref="{title}" href="Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
        <div>Suivant : <a data-xref="{title}" href="Rollback_Events.htm">Événements de retour en arrière</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
</body>
</html>