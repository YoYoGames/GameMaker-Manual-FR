<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>matrix_build_lookat</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for matrix_build_lookat" />
  <meta name="rh-index-keywords" content="matrix_build_lookat" />
  <meta name="search-keywords" content="matrix_build_lookat" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>matrix_build_lookat</h1>
  <p>Cette fonction construit une matrice d'observation (vue) basée sur les paramètres spécifiés ci-dessous. Puisque cette fonction modifie la matrice de vue et non la matrice de projection, vous devez d'abord initialiser la matrice de projection en utilisant l'autre fonction de matrice <a href="matrix_build_projection_perspective.htm"><span class="inline">matrix_build_projection_perspective()</span></a>puis utiliser cette fonction pour déplacer la caméra de vue dans la projection.</p>
  <p>Pour définir la vue, vous devez d'abord définir la position <i>depuis laquelle</i> vous regardez, ce qui est indiqué par les paramètres (xfrom, yfrom, zfrom). Ensuite, vous devez préciser la direction vers <i>laquelle</i> vous regardez, ce qui est fait en donnant un deuxième point vers lequel regarder avec les arguments (xto, yto, zto). Enfin, vous pouvez toujours faire tourner la caméra autour de la ligne allant du point de vue au point de regard, et pour spécifier cela, nous devons donner un vecteur &quot;up&quot; - la direction qui est vers le haut dans la caméra. Ceci est donné par les trois derniers arguments (xup, yup, zup).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">matrix_build_lookat(xfrom, yfrom, zfrom, xto, yto, zto, xup, yup, zup);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">xfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Array_Matrix">Matrix Array</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);<br />
    projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);<br />
    camera_set_view_mat(view_camera[0], viewmat);<br />
    camera_set_proj_mat(view_camera[0], projmat);</p>
  <p>Le code ci-dessus crée une nouvelle matrice d'observation et une matrice orthographique, stocke leurs ID dans des variables locales, puis les utilise pour définir les matrices de vue et de projection pour la caméra affectée au port de vue [0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Matrix_Functions.htm">Fonctions de la matrice</a></div>
        <div style="float:right">Suivant : <a href="matrix_build_projection_ortho.htm"><span class="notranslate">matrix_build_projection_ortho</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
matrix_build_lookat
-->
  <!-- TAGS
matrix_build_lookat
-->
</body>
</html>