<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>rond</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for round" />
  <meta name="rh-index-keywords" content="round" />
  <meta name="search-keywords" content="round" />
  <meta name="is_pure" content="true" />
</head>

<body>




  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>rond</h1>
  <p>Comme son nom l'indique, <span class="inline">round()</span> prend un nombre réel et l'arrondit à l'entier supérieur ou inférieur le plus proche. Dans le cas particulier où le nombre fourni est exactement un demi-entier (1,5, 17,5, -2,5, etc.), le nombre sera arrondi à la valeur <i>paire</i> la plus proche, par exemple, 2,5 sera arrondi à 2, tandis que 3,5 sera arrondi à 4. Ce type d'arrondi s'appelle l'<i>arrondi des banquiers</i> et sur un grand nombre d'itérations ou lors de l'utilisation de mathématiques à virgule flottante, il donne un arrondi statistiquement meilleur que l'approche plus traditionnelle "arrondi vers le haut si plus de 0,5 et vers le bas sinon".
    que l'approche plus traditionnelle consistant à &quot;arrondir à la hausse si la valeur est supérieure à 0,5 et à la baisse sinon&quot;.</p>
  <p>Cela signifie que si la fraction d'une valeur est de 0,5, le résultat arrondi est le <i>nombre entier pair</i> le plus proche de la valeur d'entrée. Ainsi, par exemple, 23,5 devient 24, comme 24,5, tandis que -23,5 devient -24, comme -24,5. Cette méthode traite les valeurs positives
    Cette méthode traite les valeurs positives et négatives de manière symétrique, elle est donc exempte de biais de signe et, plus important encore, pour des distributions raisonnables de valeurs, la valeur attendue (moyenne) des nombres arrondis est la même que celle des nombres originaux.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">round(n);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">n</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The number to round.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">score += round(hp / 5);</p>
  <p>Le code ci-dessus ajoutera un nombre entier arrondi à la valeur du score.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Number_Functions.htm">Fonctions des chiffres</a></div>
        <div style="float:right">Suivant : <a href="floor.htm"><span class="notranslate">floor</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
round
-->
  <!-- TAGS
round
-->

</body></html>