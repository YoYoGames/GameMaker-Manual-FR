<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>irandom_range</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for irandom_range" />
  <meta name="rh-index-keywords" content="irandom_range" />
  <meta name="search-keywords" content="irandom_range" />
</head>

<body>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>irandom_range</h1>
  <p>Cette fonction est similaire à <a href="random_range.htm"><span class="inline">random_range()</span></a> mais avec des valeurs entières en entrée. Vous fournissez la valeur basse de la plage ainsi que la valeur haute, et la fonction renvoie une valeur entière aléatoire dans (et incluant) la plage donnée.
    (et incluant) l'intervalle donné. Par exemple, <span class="inline">irandom_range(10, 35)</span> renverra un nombre entier compris entre 10 et 35 <i>inclus</i>.</p>
  <p>Comme avec la fonction <a href="irandom.htm"><span class="inline">irandom()</span></a> des nombres réels peuvent être utilisés, auquel cas ils seront arrondis à l'entier inférieur le plus proche EG : irandom_range(6.2,9.9) donnera une valeur comprise entre 6 et 9.</p>
  <p class="note"><b><span class="note">NOTE</span></b> Cette fonction renverra la même valeur à chaque nouvelle exécution du jeu, car GameMaker : Studio génère la même graine aléatoire initiale à chaque fois afin de rendre le code <span class="notranslate">debugging</span> beaucoup plus facile. Pour éviter ce comportement, utilisez
    <span style="font-size:1px;"><a href="randomise.htm"><span class="inline">randomise()</span></a></span> au début de votre jeu.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">irandom_range(n1, n2);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">n1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The low end of the range from which the random number will be selected.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">n2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The high end of the range from which the random number will be selected.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">score += irandom_range(500, 600);</p>
  <p>Cela ajoutera une valeur entière comprise entre 500 et 600 (inclus) au score total.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Number_Functions.htm">Fonctions des chiffres</a></div>
        <div style="float:right">Suivant : <a href="random_set_seed.htm"><span class="notranslate">random_set_seed</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
irandom_range
-->
  <!-- TAGS
irandom_range
-->

</body></html>