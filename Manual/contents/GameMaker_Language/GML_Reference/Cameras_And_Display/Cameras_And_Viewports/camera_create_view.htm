<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>caméra_créer_vue</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for camera_create_view" />
  <meta name="rh-index-keywords" content="camera_create_view" />
  <meta name="search-keywords" content="camera_create_view" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>caméra_créer_vue</h1>
  <p>Cette fonction va créer une nouvelle caméra, puis définir sa vue dans la pièce, avant de renvoyer la valeur d'identification unique pour identifier la caméra dans les appels de fonction ultérieurs. La caméra sera créée en utilisant les valeurs que vous avez définies dans cette fonction pour la position, la taille et d'autres détails qui correspondent aux valeurs que vous avez définies dans l'éditeur de pièce (voir <a href="../../../../The_Asset_Editors/Rooms.htm">ici</a>). Notez que cette fonction peut prendre un <i>nombre variable d'arguments</i>, seuls les arguments de position x/y et de largeur/hauteur étant obligatoires. Tous les arguments non fournis utiliseront leurs arguments par défaut.</p>
  <p>Notez que les caméras sont comme toutes les ressources dynamiques et occupent de la mémoire lors de leur création. Cela signifie que vous devez faire attention à ne pas créer inutilement des caméras et à détruire celles dont vous n'avez pas besoin en appelant la fonction <a href="camera_destroy.htm"><span class="inline">camera_destroy()</span></a>. Cela signifie également que les caméras persistent d'une salle à l'autre si elles sont affectées à une variable <span class="inline">global</span> (elles persistent également lorsqu'elles sont affectées à des variables d'instance ou locales, mais vous ne pouvez pas les <span class="notranslate">access</span> après avoir changé de salle, d'où la fuite de mémoire), de sorte que vous pouvez - par exemple - créer une nouvelle caméra, l'affecter à une variable globale, puis au début de chaque salle utiliser les fonctions <span class="inline">camera_set_*</span> pour définir les propriétés avant de l'affecter à un port de vue.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">camera_create_view(room_x, room_y, width, height, [angle, object, x_speed, y_speed, x_border, y_border])</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">room_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x position (within the room) of the left side of the area the camera view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">room_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y position (within the room) of the top of the area the camera view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">width</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The width of the area the view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">height</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The height of the area the view captures.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">angle</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> L'angle à définir pour la vue de la caméra (de 0° à 360°, la valeur par défaut est 0).</td>
      </tr>
      <tr>
        <td><span class="notranslate">object</span></td>
        <td> <span data-keyref="Type_ID_Instance">ID de l'</span><span data-keyref="Type_Asset_Object">actif</span> ou de l'<span data-keyref="Type_ID_Instance">instance de</span>l'<span data-keyref="Type_Asset_Object">objet</span> </td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> L'ID de l'objet (ou l'ID de l'instance) pour la vue de la caméra à suivre (la valeur par défaut est -1, aucun objet).</td>
      </tr>
      <tr>
        <td><span class="notranslate">x_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> La vitesse horizontale maximale à laquelle la vue peut se déplacer (définie à -1 pour un suivi &quot;instantané&quot;, la valeur par défaut est -1).</td>
      </tr>
      <tr>
        <td><span class="notranslate">y_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> La vitesse verticale maximale à laquelle la vue peut se déplacer (définie à -1 pour un suivi &quot;instantané&quot;, la valeur par défaut est -1).</td>
      </tr>
      <tr>
        <td><span class="notranslate">x_border</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> L'espace horizontal minimum entre le bord de la zone de vue et l'instance qu'elle est censée suivre (avant que la vue ne commence à se déplacer et si elle est censée suivre une instance, la valeur par défaut est 0).</td>
      </tr>
      <tr>
        <td><span class="notranslate">y_border</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> L'espace vertical minimum entre le bord de la zone de vue et l'instance qu'elle est censée suivre (avant que la vue ne commence à se déplacer et si elle est censée suivre une instance, la valeur par défaut est 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Camera">Camera ID</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">camera_destroy(view_camera[0]);<br />
    view_camera[0] = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);</p>
  <p>Le code ci-dessus supprime la caméra actuelle affectée au viewport [0], puis crée une nouvelle caméra, définit ses propriétés d'affichage et l'affecte au viewport [0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Cameras_And_View_Ports.htm">Caméras et ports d'observation</a></div>
        <div style="float:right">Suivant : <a href="camera_destroy.htm"><span class="notranslate">camera_destroy</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
camera_create_view
-->
  <!-- TAGS
camera_create_view
-->
</body>
</html>