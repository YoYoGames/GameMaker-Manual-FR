<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vue_courante</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_current" />
  <meta name="rh-index-keywords" content="view_current" />
  <meta name="search-keywords" content="view_current" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vue_courante</h1>
  <p>Cette variable en <b>lecture seule</b> n'est valable que dans la fenêtre <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm"><b>Événement "Draw</b></a> et renvoie le port de vue actuel faisant l'objet d'un rendu. La valeur de retour changera pendant l'événement de dessin lorsque vous avez plusieurs vues, car l'événement de dessin est appelé <i>une fois pour chaque port de vue successivement</i>. Ainsi, lorsque (par exemple) vous utilisez le port de vue [0] et le port de vue [1] dans votre salle de jeu, l'événement de dessin pour <i>TOUTES les</i> instances sera exécuté deux fois, une fois pour chaque port, et avec cette variable vous pouvez vérifier quelle vue est actuellement dessinée. En général, ceci est utilisé pour ne rendre que des détails spécifiques à un seul port lorsque plusieurs ports de vue sont visibles dans la salle en même temps. Voir l'exemple de code ci-dessous.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">view_current;</p>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (view port index from 0 to 7)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if view_current == 0<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[0]);<br />
        var _yy = camera_get_view_y(view_camera[0]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 1&quot;);<br />
    }<br />
    else<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[1]);<br />
        var _yy = camera_get_view_y(view_camera[1]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 2&quot;);<br />
    }</p>
  <p>Le code ci-dessus vérifie quelle est la vue en cours de dessin et dessine ensuite un texte différent pour chaque vue en fonction de la valeur de retour.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Cameras_And_View_Ports.htm">Caméras et ports de vue</a></div>
        <div style="float:right">Suivant : <a href="view_enabled.htm"><span class="notranslate">view_enabled</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
view_current
-->
  <!-- TAGS
view_current
-->
</body>
</html>