<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>view_surface_id</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_surface_id" />
  <meta name="rh-index-keywords" content="view_surface_id" />
  <meta name="search-keywords" content="view_surface_id" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>view_surface_id</h1>
  <p>Avec cette variable, vous pouvez définir le contenu d'un port de vue donné pour dessiner sur une surface, ou obtenir l'identifiant de la surface actuelle si une surface a été assignée à un port de vue. Lorsque vous travaillez avec des surfaces, il est souvent nécessaire de capturer <i>toute la</i> région visible de l'écran sur la surface, et donc de l'affecter à un port de vue en utilisant cette variable. Cela signifie que tout ce qui est affiché dans la vue choisie sera désormais dessiné sur la surface assignée. La vue <i>ne sera pas</i> dessinée à l'écran, ce qui signifie que vous devrez soit :</p>
  <ul class="colour">
    <li>Activez une nouvelle vue et dessinez la surface uniquement dans cette vue (en utilisant la commande <a href="view_current.htm"><span class="inline">view_current</span></a> pour vérifier quelle vue est dessinée)</li>
    <li>Dessinez la surface dans l'événement Draw GUI ou Post Draw d'une instance, puisque ces événements sont indépendants des vues.</li>
  </ul>
  <p>Vous pouvez également lire cette variable pour obtenir l'indice de la surface qui a été attribuée à la vue choisie ou elle renverra -1 si aucune surface n'a été attribuée. En général, la surface utilisée pour cette fonction doit avoir la taille de la caméra de vue elle-même (et non du port de vue). L'exemple étendu ci-dessous montre une configuration de base pour capturer une vue et la dessiner dans l'événement <b>Draw GUI</b>. Pour plus d'informations sur les surfaces, consultez la section <a href="../../Drawing/Surfaces/Surfaces.htm">Surfaces</a>.</p>
  <p>Notez que vous pouvez également définir un port de vue sur une surface en utilisant la fonction <a href="view_set_surface_id.htm"><span class="inline">view_set_surface_id()</span></a>.</p>
  <div data-conref="../../../../assets/snippets/Recursive_Surface_Draw_Error.hts"> </div>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">view_surface_id[0...7];</p>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Surface">Surface ID</span> or -1 (if no surface has been assigned)</p>
  <p> </p>
  <h4>Exemple étendu :</h4>
  <p>Dans cet exemple étendu, nous allons créer une surface et l'affecter au port de vue [0] afin qu'elle capture la vue de la caméra affectée à ce port, puis la dessiner à l'écran dans l'événement Draw GUI. Pour commencer, nous devons initialiser notre variable de surface dans l'<b>événement Create</b> d'une instance de contrôleur :</p>
  <p class="code">surf = -1;</p>
  <p>Nous avons défini la variable de surface à -1, car toutes les fonctions de surface doivent être utilisées dans les événements <b>Draw</b> pour éviter les erreurs ou les comportements indéfinis. Ainsi, une fois cela fait, nous aurions ceci dans l'événement principal <b>Draw</b>:</p>
  <p class="code">if !surface_exists(surf)<br />
    {<br />
        surf = surface_create(camera_get_view_width(view_camera[0]), camera_get_view_height(view_camera[0]));<br />
        view_surface_id[0] = surf;<br />
    }</p>
  <p>Les surfaces sont <i>volatiles</i>, ce qui signifie qu'elles peuvent être supprimées de la mémoire à tout moment en raison de la gestion de la mémoire du système d'exploitation et d'autres choses, donc ici nous vérifions si notre surface existe et si ce n'est pas le cas, nous la créons et l'assignons à la vue 0. Si vous ne faites rien d'autre à ce stade, lorsque vous lancerez votre jeu, vous obtiendrez simplement un écran vide car tous les dessins sont effectués sur la surface, mais la surface elle-même n'est dessinée nulle part. Par conséquent, nous devons maintenant dessiner la surface à l'écran dans l'événement <b>Draw GUI</b> comme ceci :</p>
  <p class="code">if surface_exists(surf)<br />
    {<br />
        draw_surface_stretched(surf, 0, 0, display_get_gui_width(), display_get_gui_height());<br />
    }</p>
  <p>Ce code va maintenant dessiner la surface que nous avons créée à partir de la caméra de vue étirée pour remplir la totalité de la couche GUI.</p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Cameras_And_View_Ports.htm">Caméras et ports de vue</a></div>
        <div style="float:right">Suivant : <a href="view_get_camera.htm"><span class="notranslate">view_get_camera</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
view_surface_id
-->
  <!-- TAGS
view_surface_id
-->
</body>
</html>