<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>array_sort</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function array_sort" />
  <meta name="rh-index-keywords" content="array_sort" />
  <meta name="search-keywords" content="array_sort" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span>array_sort</span></h1>
  <p>Avec cette fonction, vous pouvez trier un tableau par ordre croissant ou décroissant ou en utilisant une fonction personnalisée pour définir l'ordre de tri. La fonction nécessite que vous fournissiez le tableau à trier, puis l'un des éléments suivants :</p>
  <ul class="colour">
    <li>Les constantes <span class="inline">true</span> ou <span class="inline">false</span> pour indiquer un <span>ordre de tri ascendant (<span class="inline">true</span>) ou descendant (<span class="inline">false</span>)</span></li>
    <li>Une fonction personnalisée pour définir l'ordre de tri</li>
  </ul>
  <p>Cette fonction va modifier le contenu du tableau original qui a été fourni. Pour créer une copie triée, utilisez d'abord <span class="inline"><a href="array_copy.htm">array_copy()</a></span> pour dupliquer le tableau, puis passez-le à cette fonction.</p>
  <h3>Utilisation d'une fonction personnalisée</h3>
  <p>Si vous utilisez une fonction personnalisée pour le tri, elle doit prendre 2 arguments qui recevront respectivement les valeurs de l'élément courant et de l'élément suivant. La fonction doit renvoyer l'une des valeurs suivantes pour affecter l'ordre de tri (où <span class="inline">elm1</span> est l'élément actuel et <span class="inline">elm2</span> l'élément suivant) :</p>
  <ul class="colour">
    <li><span class="inline">0</span>: si <span class="inline">elm1</span> et <span class="inline">elm2</span> sont égaux</li>
    <li><span class="inline">&lt;= -1</span> (nombre entier négatif) : si <span class="inline">elm1</span> passe avant <span class="inline">elm2</span></li>
    <li><span class="inline">&gt;= 1</span> (nombre entier positif) : si <span class="inline">elm1</span> va après <span class="inline">elm2</span></li>
  </ul>
  <p class="note"><span class="note">REMARQUE</span> La valeur renvoyée par votre fonction personnalisée doit être un nombre entier. Les valeurs à virgule flottante inférieures à 1 seront lues comme 0, vous devez donc utiliser <a href="../Maths_And_Numbers/Number_Functions/sign.htm"><span class="inline">sign()</span></a> ou <a href="../Maths_And_Numbers/Number_Functions/round.htm"><span class="inline">round()</span></a> si votre fonction fonctionne avec des valeurs à virgule flottante.</p>
  <p>Si le tableau contient un ensemble de chaînes de caractères, celles-ci seront triées par ordre alphabétique sur la base de l'alphabet anglais en utilisant le type de tri croissant/décroissant par défaut. Tous les autres types de données seront triés sur la base de leur valeur numérique, dont les valeurs exactes dépendront du type de données lui-même (par exemple, un tableau de <span class="notranslate">buffers</span> sera trié sur la base de la valeur numérique de leurs adresses mémoire).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">array_sort(variable, sorttype_or_function);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">variable</span></td>
        <td><span data-keyref="Type_Array"><a href="../../../../GameMaker_Language/GML_Overview/Arrays.htm" target="_blank">Array</a></span></td>
        <td><span class="notranslate">The variable that holds the array.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span>sorttype_or_function<span> </span></td>
        <td><span data-keyref="Type_Bool"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Booléen</a></span> ou <span data-keyref="Type_Function_Script"><a href="../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Fonction de script</a></span>/<span data-keyref="Type_Method"><a href="../../../../GameMaker_Language/GML_Overview/Method_Variables.htm" target="_blank">Méthode</a></span></td>
        <td><span class="notranslate">The sort type (<span><span class="inline">true</span> pour un tri ascendant ou <span class="inline">false</span> pour un tri descendant) ou une référence de fonction à utiliser pour le tri.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _a = [10, 9, 8, 7, 6, 5];<br />
    <br />
    array_sort(_a, function(elm1, elm2)<br />
    {<br />
        return elm1 - elm2;<br />
    });
  </p>
  <p>Le code ci-dessus utilise une fonction de tri personnalisée pour trier le tableau dans un ordre croissant. La fonction de tri prend les deux éléments du tableau <span class="inline">elm1</span> et <span class="inline">elm2</span> et effectue une soustraction sur eux. Si <span class="inline">elm1</span> est supérieur à <span class="inline">elm2</span>, la soustraction donne un nombre positif qui place <span class="inline">elm1</span> après <span class="inline">elm2</span>, ce qui les place dans un ordre croissant.</p>
  <p>Voici un exemple détaillé :</p>
  <p class="code">var _xx, _yy, _a;<br />
    <br />
    for (var i = 0; i &lt; 10; i++)<br />
    {<br />
        _xx = irandom(room_width);<br />
        _yy = irandom(room_height);<br />
        _a[i] = instance_create_layer(_xx, _yy, layer, obj_Bullet);<br />
    }<br />
    <br />
    show_debug_message(_a);<br />
    <br />
    var _f = function(inst1, inst2)<br />
    {<br />
        return inst1.x - inst2.x;<br />
    }<br />
    <br />
    array_sort(_a, _f);<br />
    show_debug_message(_a);
  </p>
  <p>Le code ci-dessus va créer un tableau de 10 instances placées à des positions aléatoires dans la pièce. Le message de débogage affichera quelque chose comme le suivant :</p>
  <p class="code">[ 100003,100004,100005,100006,100007,100008,100009,100010,100011,100012 ]</p>
  <p>Le code crée ensuite une méthode à utiliser dans la fonction <span class="inline">array_sort()</span> qui renvoie la différence entre chacune des positions X des instances de la pièce. Ensuite, la fonction <span class="inline">array_sort()</span> est exécutée en utilisant cette méthode, en triant les instances par X, de la plus basse à la plus haute. La sortie du tableau ressemblerait alors à quelque chose comme ceci :</p>
  <p class="code">[ 100011,100004,100009,100006,100012,100008,100010,100005,100007,100003 ]</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Variable_Functions.htm">Fonctions variables</a></div>
        <div style="float:right">Suivant : <a href="array_length.htm"><span class="notranslate">array_length</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
array_sort
-->
  <!-- TAGS
array_sort
-->
</body>
</html>