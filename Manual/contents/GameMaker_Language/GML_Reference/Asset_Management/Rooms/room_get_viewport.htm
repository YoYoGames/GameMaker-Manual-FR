<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>chambre_get_viewport</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function room_get_viewport" />
  <meta name="rh-index-keywords" content="room_get_viewport" />
  <meta name="search-keywords" content="room_get_viewport" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>room_get_viewport</h1>
  <p>Avec cette fonction, vous pouvez récupérer les détails d'un hublot dans une pièce autre que la pièce actuelle. Vous donnez l'ID de la pièce et l'index du hublot à récupérer (de 0 à 7) et la fonction renvoie un <a href="../../../GML_Overview/Arrays.htm">tableau</a> de 5 index, où.. :</p>
  <ul class="colour">
    <li>[0] = visible (booléen : <span class="inline">true</span> / <span class="inline">false</span>)</li>
    <li>[1] = position x (réelle)</li>
    <li>[2] = position y (réelle)</li>
    <li>[3] = largeur (réelle)</li>
    <li>[4] = hauteur (réelle)</li>
  </ul>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">room_get_viewport(rm, vind);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">rm</span></td>
        <td><span data-keyref="Type_Asset_Room">Actif de la salle</span></td>
        <td><span class="notranslate">The index of the room to get viewport data from</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vind</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The index of the view port to get</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Array">Array</span> (5 elements: visible, x, y, width, height)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">v_vals = room_get_viewport(rm_Game, 0);<br />
    <br />
    if v_vals[0] == false<br />
    {<br />
        room_set_view(rm_Game, true, v_vals[1], v_vals[2], v_vals[3], v_vals[4]);<br />
    }
  </p>
  <p>Le code ci-dessus récupère les données du port d'observation pour la pièce donnée, puis vérifie si le port est marqué comme visible. S'il ne l'est pas, les données du port d'observation sont définies pour le rendre visible.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Rooms.htm">Pièces</a></div>
        <div style="float:right">Suivant : <a href="room_set_camera.htm"><span class="notranslate">room_set_camera</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
room_get_viewport
-->
  <!-- TAGS
room_get_viewport
-->
</body>
</html>