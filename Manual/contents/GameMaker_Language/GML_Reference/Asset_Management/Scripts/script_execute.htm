<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>script_exécution</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function script_execute" />
  <meta name="rh-index-keywords" content="script_execute" />
  <meta name="search-keywords" content="script_execute" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>script_exécution</h1>
  <p>Cette fonction a été conçue à l'origine pour appeler des <i>actifs de</i> script de manière dynamique, mais avec l'introduction des fonctions définies par l'utilisateur, elle peut désormais être utilisée de deux manières :</p>
  <ul class="colour">
    <li>La première façon est de prendre en charge les <b>anciens</b> scripts, où chaque script était une fonction unique et le titre du script était également le nom de la fonction. Utilisé de cette façon, il fonctionnera comme avant et exécutera un actif de script créé par l'utilisateur et lui passera les arguments donnés. Notez qu'il n'appelle pas réellement le <i>script</i> dans ce cas, mais la <i>fonction de script</i> du même nom dans le script. <span style="text-align: justify;"></span></li>
    <li><span style="text-align: justify;">La deuxième méthode consiste à appeler une fonction à partir d'un actif de script qui contient plusieurs fonctions. Dans ce cas, vous devez fournir le nom de la fonction et les arguments qu'elle requiert plutôt que le nom de l'actif de script. Notez que cela ne fonctionne que pour les <a href="../../../GML_Overview/Script_Functions.htm">fonctions de script</a> et non pour les <a href="../../../GML_Overview/Method_Variables.htm">méthodes</a>, car seules les fonctions de script ont un ID de script qui leur est attribué.</span></li>
  </ul>
  <p><span style="text-align: justify;"></span>Bien que cette fonction soit principalement conçue pour la prise en charge de l'héritage, elle n'est pas dépréciée car elle a toujours sa place dans les situations de mise en réseau et d'appel de procédure à distance. Il convient également de noter que cette fonction est lente et que son utilisation fréquente peut nuire aux performances.</p>
  <p class="note"><span class="note">REMARQUE</span> Cette fonction ne peut pas être utilisée avec les fonctions intégrées.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">script_execute(scr, arg0, arg1, arg2..., etc...);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">scr</span></td>
        <td><span data-keyref="Type_Asset_Script"><a href="../../../../../The_Asset_Editors/Scripts.htm" target="_blank">Script Asset</a></span> ou <span data-keyref="Type_Function_Script"><a href="../../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Fonction de script</a></span></td>
        <td><span class="notranslate">The function/script that you want to call</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">arg0, arg1, arg2..., etc...</span></td>
        <td><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variable</a></span></td>
        <td><span class="notranslate">The different arguments that you want to pass through to the function/script</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variable</a></span> (Will depend on the return value from the script/function being called)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">script_execute(choose(move_up, move_down, move_left, move_right), irandom(5));</p>
  <p>Le code de l'exemple ci-dessus utilisera <span class="inline">script_execute</span> pour choisir l'une des quatre fonctions définies par l'utilisateur (dans ce cas, liées au mouvement) et lui passera un entier aléatoire comme premier argument.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Scripts.htm">Scripts</a></div>
        <div style="float:right">Suivant : <a href="script_execute_ext.htm"><span class="notranslate">script_execute_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
script_execute
-->
  <!-- TAGS
script_execute
-->
</body>
</html>