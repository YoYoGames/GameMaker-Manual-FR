<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_get_master_gain</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_get_master_gain" />
  <meta name="rh-index-keywords" content="audio_get_master_gain" />
  <meta name="search-keywords" content="audio_get_master_gain" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_get_master_gain</h1>
  <p>Cette fonction permet d'obtenir la valeur absolue du volume global de tous les sons et musiques pour un auditeur spécifique. L'indice par défaut de l'auditeur est 0, mais vous pouvez utiliser la fonction <a href="Audio_Listeners/audio_get_listener_info.htm"><span class="inline">audio_get_listener_info()</span></a> pour obtenir les différents indices disponibles pour la plateforme cible. La valeur de gain retournée est basée sur une échelle linéaire allant de 0 (silencieux) à 1 (plein volume). Notez que sur certaines plates-formes, vous pouvez avoir un gain supérieur à 1, bien qu'une valeur de 1 soit considérée comme &quot;plein volume&quot; et que toute valeur supérieure peut introduire une coupure audio.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">audio_get_master_gain(listenerIndex);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">listenerIndex</span></td>
        <td> <span data-keyref="Type_ID_Audio_Listener">ID de l'auditeur</span><span data-keyref="Type_Real">réel</span> ou <span data-keyref="Type_ID_Audio_Listener">audio</span></td>
        <td><span class="notranslate">The index of the listener to get the gain of.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var num = audio_get_listener_count();<br />
    for(var i = 0; i &lt; num; ++i;)<br />
    {<br />
        var info = audio_get_listener_info(i);<br />
        var ind = info[? &quot;index&quot;];<br />
        if audio_get_master_gain(ind) != 1<br />
        {<br />
            audio_set_master_gain(info[? &quot;index&quot;], 1);<br />
        }<br />
        ds_map_destroy(info);<br />
    }</p>
  <p>Le code ci-dessus boucle à travers les écouteurs disponibles, vérifiant si leur gain est de 1 ou non, et si ce n'est pas le cas, il le met à 1 pour chacun d'eux.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Suivant : <a href="audio_channel_num.htm"><span class="notranslate">audio_channel_num</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
audio_get_master_gain
-->
  <!-- TAGS
audio_get_master_gain
-->
</body>
</html>