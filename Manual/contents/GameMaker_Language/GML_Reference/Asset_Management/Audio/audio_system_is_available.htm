<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Système audio disponible</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_system_is_available" />
  <meta name="rh-index-keywords" content="audio_system_is_available" />
  <meta name="search-keywords" content="audio_system_is_available" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Système audio disponible</h1>
  <p>Cette fonction peut être utilisée pour vérifier et voir si le système audio a été initialisé, ou si le contexte audio est en cours d'exécution. Sur toutes les plates-formes, cette fonction renverra vrai immédiatement après le démarrage du jeu lorsque le moteur audio est initialisé, <i>sauf sur la cible <b>HTML5</b></i>. Sur HTML5, l'état du contexte audio peut changer à tout moment en fonction des entrées de l'utilisateur, du navigateur utilisé et de sa version, de sorte que cette fonction peut être utilisée pour vérifier si l'audio peut être joué ou non. Si la fonction renvoie <span class="inline">false</span> (c'est-à-dire que l'état du contexte audio n'est pas en cours d'exécution), seuls les sons non diffusés <i>peuvent</i> être lus (mais ce n'est pas garanti, et vous devez supposer qu'aucun son ne peut être lu), tandis que si elle renvoie <span class="inline">true</span>, tous les sons seront lus.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">audio_system_is_available();</p>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Bool"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if audio_system_is_available()<br />
    {<br />
        if audio_is_paused(global.Music)<br />
        {<br />
            audio_resume_sound(global.Music)<br />
        }<br />
        else<br />
        {<br />
            if !audio_is_playing(global.Music)<br />
            {<br />
                global.Music = audio_play_sound(snd_Music, 0, true);<br />
            }<br />
        }<br />
    }<br />
    else<br />
    {<br />
        if audio_is_playing(global.Music)<br />
        {<br />
            audio_pause_sound(global.Music);<br />
        }<br />
    }</p>
  <p>Le code ci-dessus met en pause ou non une piste audio selon que le système audio est initialisé et disponible ou non.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Suivant : <a href="audio_exists.htm"><span class="notranslate">audio_exists</span></a></div>
        
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
audio_system_is_available
-->
  <!-- TAGS
audio_system_is_available
-->
</body>
</html>