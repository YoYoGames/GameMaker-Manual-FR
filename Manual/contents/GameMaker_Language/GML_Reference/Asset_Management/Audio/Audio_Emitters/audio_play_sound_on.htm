<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_play_sound_on</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_play_sound_on" />
  <meta name="rh-index-keywords" content="audio_play_sound_on" />
  <meta name="search-keywords" content="audio_play_sound_on" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_play_sound_on</h1>
  <p>Avec cette fonction, vous pouvez jouer n'importe quelle ressource sonore par le biais d'un émetteur, les modifications apportées au gain, à la position, à la hauteur ou à la vitesse de l'émetteur affectant la façon dont l'utilisateur entend le son final joué. Vous fournissez l'index de l'émetteur à utiliser, l'index du son à jouer et vous spécifiez ensuite si le son doit être joué en boucle ou non. Ensuite, vous pouvez attribuer une priorité, qui est ensuite utilisée pour déterminer comment les sons sont traités lorsque le nombre de sons joués dépasse la limite fixée par la fonction <a href="../audio_channel_num.htm"><span class="inline">audio_channel_num()</span></a>. Les sons de priorité inférieure seront arrêtés en faveur des sons de priorité supérieure, et la valeur de la priorité peut être n'importe quel nombre réel (la valeur réelle est arbitraire, et peut être comprise entre 0 et 1 ou 0 et 100, car <span data-keyref="GameMaker Name">GameMaker</span> leur attribuera la même priorité). Notez que lorsqu'il s'agit de priorité, plus le nombre est <i>élevé</i>, plus la priorité est <i>élevée</i>, de sorte qu'un son de priorité 100 sera favorisé par rapport à un son de priorité 1.</p>
  <div data-conref="../../../../../assets/snippets/audio_play_sound_last_arguments.hts"> </div>
  <p>Cette fonction renvoie également un numéro d'index unique pour le son en cours de lecture, qui peut ensuite être stocké dans une variable afin que vous puissiez le mettre en pause ou l'arrêter avec les fonctions appropriées. Cela signifie que si vous avez plusieurs instances du même son en cours de lecture à un moment donné, vous pouvez cibler une seule instance de ce son à traiter à l'aide des fonctions audio.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">audio_play_sound_on(emitter, sound, loop, priority, <span>[gain], [offset], [pitch], [listener_mask]</span>);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">emitter</span></td>
        <td><span data-keyref="Type_ID_Audio_Emitter"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Emitters/audio_emitter_create.htm" target="_blank">ID de l'émetteur audio</a></span></td>
        <td><span class="notranslate">The index of the emitter to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">sound</span></td>
        <td><span data-keyref="Type_Asset_Sound"><a href="../../../../../../The_Asset_Editors/Sounds.htm" target="_blank">Actif sonore</a></span></td>
        <td><span class="notranslate">The index of the sound to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">loop</span></td>
        <td><span data-keyref="Type_Bool"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Booléen</a></span></td>
        <td><span class="notranslate">Flags the sound as looping or not.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">priority</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">Set the channel priority for the sound.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">gain</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Valeur pour le gain.</td>
      </tr>
      <tr>
        <td><span class="notranslate">offset</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> La durée (en secondes) à laquelle fixer le point de départ. Les valeurs plus longues que la longueur du son donné sont ignorées.</td>
      </tr>
      <tr>
        <td><span class="notranslate">pitch</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Le multiplicateur de pas (par défaut 1).</td>
      </tr>
      <tr>
        <td><span class="notranslate">listener_mask</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Les données bitmask à définir pour le son. Sur la cible HTML5, cela n'aura aucun effet car la cible ne supporte pas plus d'un auditeur.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Sound_Instance"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_play_sound.htm" target="_blank">Sound Instance ID</a></span></p>
  <p> </p>
  <h4>Exemple 1 :</h4>
  <p class="code">if global.SFX<br />
    {<br />
        audio_play_sound_on(s_emit, snd_Explode, false, 1);<br />
    }</p>
  <p>Le code ci-dessus vérifie la variable globale &quot;SFX&quot; et si elle retourne <span class="inline">true</span> alors le son indexé dans la variable &quot;snd_Explode&quot; sera joué par l'émetteur indexé dans la variable &quot;s_emit&quot; avec une faible priorité et sans boucle.</p>
  <h4>Exemple 2 :</h4>
  <p class="code">if hit == true<br />
    {<br />
        audio_play_sound_on(s_emit, snd_Hit, false, 1, 1.3);<br />
    }</p>
  <p>Le code ci-dessus vérifie si l'instance qui exécute le code a été touchée. Si <span class="inline">true</span> il joue le son &quot;snd_Hit&quot; à travers l'emitter &quot;s_emit&quot; avec un gain légèrement plus élevé de 1.3. Le gain défini ici est multiplié par le gain de l'emitter pour obtenir le gain final auquel le son est joué.</p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Audio_Emitters.htm">Émetteurs audio</a></div>
        <div style="float:right">Suivant : <a href="audio_emitter_get_gain.htm"><span class="notranslate">audio_emitter_get_gain</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
audio_play_sound_on
-->
  <!-- TAGS
audio_play_sound_on
-->
</body>
</html>