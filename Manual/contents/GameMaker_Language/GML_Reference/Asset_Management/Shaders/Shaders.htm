<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Shaders</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Shaders</h1>
  <p>Les nuanceurs sont un outil incroyablement puissant qui permet de manipuler la nature et la manière dont les éléments sont <a class="glossterm" data-glossterm="rendu" href="#">rendus à</a> l'écran par la carte graphique. Comme ces minuscules programmes sont exécutés sur la carte graphique elle-même, ils sont extrêmement rapides à traiter, ce qui libère de précieux cycles d'unité centrale pour d'autres logiques de jeu.</p>
  <p>Pour créer un <span class="notranslate">shader</span>, vous devez avoir écrit à la fois un <b>Vertex Shader</b> et un <b>Fragment Shader</b> (également connu sous le nom de <b>Pixel Shader</b>) à l'aide de l'<a href="../../../../The_Asset_Editors/Shaders.htm">éditeur de shaders</a>. Même si (par exemple) vous souhaitez uniquement modifier les positions des vertex pour une instance dessinée, ou si vous souhaitez uniquement modifier les valeurs de couleur des pixels, vous aurez toujours besoin des <b>deux</b> programmes pour qu'un <span class="notranslate">shader</span> complet fonctionne.</p>
  <p class="note"><span class="note">REMARQUE</span> Les shaders <b>ne</b> vous permettent <b>pas</b> de modifier la valeur des variables que vous leur passez, et celles-ci seront donc appelées <b>constantes de shaders</b> dans toute la documentation qui s'y réfère.</p>
  <p>Pour un aperçu complet des fonctions et variables GLSL ES disponibles que vous pouvez utiliser pour programmer le site <span class="notranslate">shaders</span> lui-même, veuillez consulter les <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">pages de référence du langage d'ombrage OpenGL ES (GLSL ES)</a>. Le lien suivant est également utile car il contient quelques cartes de référence rapide pour l'API OpenGL ES (notez que seules les deux dernières cartes présentées sont applicables à <span data-keyref="GameMaker Name">GameMaker</span>) : <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">Cartes de référence OpenGL ES</a>.</p>
  <p>L'utilisation du site <span class="notranslate">shader</span> dans vos projets est très simple et ne nécessite que quelques lignes de code pour en tirer le meilleur parti :</p>
  <p class="code">shader_set(myShader);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>Comme vous pouvez le voir, ils sont utilisés de la même manière que les modes de fusion et les surfaces, où vous sélectionnez (définissez) d'abord le site <span class="notranslate">shader</span>, dessinez ce que vous voulez en l'utilisant, puis réinitialisez à nouveau la cible de dessin. Si vous souhaitez obtenir le rendu de tout l'écran par le biais d'un <span class="notranslate">shader</span>, et pas seulement d'un <span class="notranslate">sprite</span> ou d'un arrière-plan, vous devrez configurer une surface pour capturer la vue actuelle, puis la transmettre au <span class="notranslate">shader</span> (voir <a href="../../Drawing/Surfaces/Surfaces.htm">Surfaces</a> pour plus d'informations).</p>
  <p class="note"><b>REMARQUE</b>: <span class="notranslate">Shaders</span>, comme tout ce qui concerne le dessin, <b>ne</b> peut <b>être utilisé que dans l'événement draw</b>. Il convient également de noter que si vous essayez d'utiliser une valeur de couleur dans un <span class="notranslate">shader</span> et que l'objet n'a pas de texture, le résultat sera noir.</p>
  <p>Si le site <span class="notranslate">shader</span> que vous utilisez possède des valeurs d'entrée, celles-ci sont définies à l'aide des fonctions de l'<i>uniforme</i>. Vous devez d'abord obtenir le <i>handle de</i> l'uniforme (qui est essentiellement une valeur d'identification de l'uniforme à définir) en utilisant la fonction <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a> dans l'<b>événement de création de</b> l'instance utilisant le site <span class="notranslate">shader</span>, puis vous stockez ces identifiants dans des variables, comme suit :</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
    colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>Une fois que vous avez les poignées uniformes, vous pouvez les définir dans le code <span class="notranslate">shader</span> pour l'<b>événement Draw</b> comme ceci :</p>
  <p class="code">shader_set(sShaderDemo5);<br />
    shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
    shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
    draw_sprite(sprite_index,image_index,x+24, y);<br />
    shader_reset();</p>
  <p>Une dernière chose à noter est que, bien que <span class="notranslate">shaders</span> soit accepté sur toutes les plateformes, il est toujours spécifique à un appareil et si le matériel ou le logiciel de l'appareil ne peut pas utiliser <span class="notranslate">shaders</span>, vous obtiendrez une erreur. Il est donc recommandé de vérifier que le fichier <span class="notranslate">shader</span> a été compilé avant de définir les uniformes ou d'utiliser le fichier <span class="notranslate">shader</span> lui-même, comme ceci :</p>
  <p class="code">if (shader_is_compiled(myShader))<br />
    {<br />
        shader_set(myShader);<br />
        draw_self();<br />
        shader_reset();<br />
    }<br />
    else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>Comme vérification supplémentaire, vous pouvez également appeler la fonction <a href="shaders_are_supported.htm"><span class="inline">shaders_are_supported()</span></a> pour vérifier si le matériel supporte <span class="notranslate">shaders</span>. En général, vous effectuez ces vérifications au début du jeu et stockez les résultats dans une <a href="../../../GML_Overview/Variables/Global_Variables.htm">variable globale</a> pour les vérifier ultérieurement.</p>
  <p>Il est important de noter que <span data-keyref="GameMaker Name">GameMaker</span> supporte également certaines <b>macros de</b> compilation conditionnelle qui peuvent être utilisées dans GLSL ES <span class="notranslate">shaders</span> afin qu'elles puissent exécuter un code alternatif sur des plateformes spécifiques supportées. Les macros et les plateformes sur lesquelles elles seront générées sont présentées dans le tableau ci-dessous :</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Macro Shader</th>
        <th>Valeur</th>
        <th>Plate-forme cible</th>
      </tr>
      <tr>
        <td>_YY_GLSLES_</td>
        <td>1</td>
        <td>Toutes les plateformes cibles</td>
      </tr>
      <tr>
        <td>_YY_GLSL_</td>
        <td>2</td>
        <td>Mac et <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>)</td>
      </tr>
      <tr>
        <td>_YY_HLSL11_</td>
        <td>3</td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>_YY_PSSL_</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Lorsque vous compilez votre projet <span data-keyref="GameMaker Name">GameMaker</span> sur l'une des plates-formes répertoriées à l'aide d'un format GLSL ES <span class="notranslate">shader</span>, l'<i>une</i> des macros ci-dessus sera générée et pourra ensuite être utilisée dans le code <span class="notranslate">shader</span> comme suit :</p>
  <p class="code">#ifdef _YY_HLSL11_<br />
    // HLSL shader code here<br />
    #else<br />
    // GLSL shader code here<br />
    #endif</p>
  <p>Si vous êtes novice en matière de <span class="notranslate">shaders</span> ou si vous souhaitez un guide plus complet pour les créer et les utiliser avec <span data-keyref="GameMaker Name">GameMaker</span>, veuillez consulter la page suivante du manuel :</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">Guide d'utilisation des shaders</a></li>
  </ul>
  <p> </p>
  <p>Les fonctions suivantes sont disponibles pour dessiner et définir les ombres :</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm"><span class="notranslate">shader_get_name</span></a></li>
    <li><a href="shader_get_uniform.htm"><span class="notranslate">shader_get_uniform</span></a></li>
    <li><a href="shader_get_sampler_index.htm"><span class="notranslate">shader_get_sampler_index</span></a></li>
    <li><a href="shader_set.htm"><span class="notranslate">shader_set</span></a></li>
    <li><a href="shader_set_uniform_f.htm"><span class="notranslate">shader_set_uniform_f</span></a></li>
    <li><a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></li>
    <li><a href="shader_set_uniform_i.htm"><span class="notranslate">shader_set_uniform_i</span></a></li>
    <li><a href="shader_set_uniform_i_array.htm"><span class="notranslate">shader_set_uniform_i_array</span></a></li>
    <li><a href="shader_set_uniform_matrix.htm"><span class="notranslate">shader_set_uniform_matrix</span></a></li>
    <li><a href="shader_set_uniform_matrix_array.htm"><span class="notranslate">shader_set_uniform_matrix_array</span></a></li>
    <li><a href="shader_reset.htm"><span class="notranslate">shader_reset</span></a></li>
    <li><a href="shader_is_compiled.htm"><span class="notranslate">shader_is_compiled</span></a></li>
    <li><a href="shaders_are_supported.htm"><span class="notranslate">shaders_are_supported</span></a></li>
    <li><a href="shader_current.htm"><span class="notranslate">shader_current</span></a></li>
  </ul>
  <p> </p>
  <p>Nous avons également une fonction spéciale qui définit un état global pour tous les shaders :</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm"><span class="notranslate">shader_enable_corner_id</span></a></li>
  </ul>
  <p> </p>
  <p>Lorsque vous travaillez avec des échantillonneurs de texture dans <span class="notranslate">shaders</span>, vous aurez besoin d'informations sur la texture utilisée, auquel cas vous pouvez utiliser les fonctions suivantes :</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm"><span class="notranslate">sprite_get_texture</span></a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm"><span class="notranslate">sprite_get_uvs</span></a></li>
    <li><a href="../Fonts/font_get_texture.htm"><span class="notranslate">font_get_texture</span></a></li>
    <li><a href="../Fonts/font_get_uvs.htm"><span class="notranslate">font_get_uvs</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm"><span class="notranslate">texture_get_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm"><span class="notranslate">texture_get_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm"><span class="notranslate">texture_get_texel_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm"><span class="notranslate">texture_get_texel_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm"><span class="notranslate">texture_set_stage</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm"><span class="notranslate">gpu_set_texfilter_ext</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm"><span class="notranslate">gpu_set_texrepeat</span></a></li>
  </ul>
  <p> </p>
  <p>Bien que ce manuel <b>ne</b> couvre <b>pas</b> toutes les fonctions et variables de l'Open GL <span class="notranslate">shader</span>, il contient une liste de celles qui sont propres à <span data-keyref="GameMaker Name">GameMaker</span>. Ces constantes ne font pas partie de la spécification Open GL pour <span class="notranslate">shaders</span> et sont fournies pour simplifier l'intégration de <span class="notranslate">shaders</span> dans vos projets.</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">Constantes de l'ombrage</a></li>
  </ul>
  <p> </p>
  <p>Enfin, <span data-keyref="GameMaker Name">GameMaker</span> vous permet de définir vos propres <b>formats de sommets</b> à partir desquels vous pouvez créer vos propres <span class="notranslate">primitives</span>. Cela peut accélérer considérablement les opérations sur <span class="notranslate">shader</span> ou être utilisé pour étendre leurs capacités et créer des effets surprenants. Vous trouverez des informations à ce sujet dans les sections suivantes :</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">Primitives et formats de sommets</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Asset_Management.htm">Gestion des actifs</a></div>
        <div style="float:right">Suivant : <a href="../Sequences/Sequences.htm">Séquences</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->
</body>
</html>