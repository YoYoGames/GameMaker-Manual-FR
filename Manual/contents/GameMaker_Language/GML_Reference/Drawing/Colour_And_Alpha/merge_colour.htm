<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>fusionner_couleur</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section the function merge_colour" />
  <meta name="rh-index-keywords" content="merge_colour,merge_color" />
  <meta name="search-keywords" content="merge_colour,merge_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>fusionner_couleur</h1>
  <p>Avec cette fonction, vous pouvez prendre deux couleurs et les fusionner pour obtenir une nouvelle couleur. La quantité de chacune des couleurs composantes peut être définie en modifiant l'argument &quot;amount&quot;, où une valeur de 0 renverra la première couleur (col1), une valeur de 1 renverra la deuxième couleur (col2) et une valeur intermédiaire renverra le mélange correspondant. Par exemple, une valeur de 0,5 mélangera les deux couleurs de manière égale. L'image suivante illustre comment cela fonctionne en fusionnant les couleurs rouge et bleue :</p>
  <p><img alt="Mege colour example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/merge_colour.png" /></p>
  <h4>Syntaxe :</h4>
  <p class="code">merge_colour(col1, col2, amount);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">col1</span></td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td><span class="notranslate">The first colour to merge</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">col2</span></td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td><span class="notranslate">The second colour to merge</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">amount</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">How much of each colour should be merged. For example, 0 will return col1, 1 will return col2, and 0.5 would return a merge of both colours equally</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Constant_Colour">Colour Constant</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">col = merge_colour(c_lime, c_orange, 0.5);</p>
  <p>Le code ci-dessus utilise la fonction pour créer une couleur en fusionnant le citron vert et l'orange à 50/50, puis stocke sa valeur dans la variable &quot;col&quot; pour une utilisation ultérieure.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Dos : <a href="Colour_And_Alpha.htm">Couleur et alpha</a></div>
        <div style="float:right">Suivant : <a href="draw_clear.htm"><span class="notranslate">draw_clear</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
merge_colour
merge_color
-->
  <!-- TAGS
merge_colour
-->
</body>
</html>