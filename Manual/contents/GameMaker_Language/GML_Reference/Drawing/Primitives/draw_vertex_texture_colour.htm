<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dessiner_vertex_texture_couleur</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for draw_vertex_texture_colour" />
  <meta name="rh-index-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color" />
  <meta name="search-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>dessiner_vertex_texture_couleur</h1>
  <p>Cette fonction définit la position d'un sommet texturé pour un <span class="notranslate">primitive</span>. L'aspect final du <span class="notranslate">primitive</span> dépendra du type de <span class="notranslate">primitive</span> choisi pour le dessin (Voir <a href="draw_primitive_begin.htm"><span class="inline">draw_primitive_begin()</span></a> pour plus d'informations),
    de l'ordre dans lequel vous y ajoutez les sommets, de la position des points de départ et d'arrivée que vous donnez pour l'échantillon de texture et des valeurs de couleur et d'alpha que vous avez définies. Pour conserver l'aspect de la texture en ne modifiant que l'alpha, une valeur de -1 (ou  ) peut être utilisée.
    de -1 (ou <span class="inline">c_white</span>) peut être utilisée pour l'argument couleur. Pour terminer et dessiner le <span class="notranslate">primitive</span>, vous devez appeler <a href="draw_primitive_end.htm"><span class="inline">draw_primitive_end()</span></a>.</p>
  <p class="note"><b><span class="note">NOTE</span></b> Pour qu'une texture soit répétée, sa taille doit être une puissance de deux, c'est-à-dire : 32x32, 128x128, etc...</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">draw_vertex_texture_colour(x, y, xtex, ytex, col, alpha)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">x</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the vertex.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the vertex.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xtex</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate within the texture.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">ytex</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate within the texture.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">col</span></td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td><span class="notranslate">The colour to blend with the texture at this vertex (-1 or <span class="inline">c_white</span> pour aucun mélange).</td>
     </tr>
      <tr>
        <td><span class="notranslate">alpha</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The alpha to draw this vertex with (0-1).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">draw_set_colour(c_white);<br/> var tex = sprite_get_texture(spr_Background, 0);<br/> draw_primitive_begin_texture(pr_trianglestrip, tex);<br/> draw_vertex_texture_colour(0, 0, 0, 0, c_fuchsia, 1);<br/> draw_vertex_texture_colour(640, 0, 1, 0, c_yellow,
    1);<br/> draw_vertex_texture_colour(0, 480, 0, 1, c_aqua, 1);<br/> draw_vertex_texture_colour(640, 480, 1, 1, c_lime, 1);<br/> draw_primitive_end();
  </p>
  <p>Le code ci-dessus dessinera une bande de triangle à 4 sommets (formant un rectangle) texturée avec la texture contenue dans la variable &quot;tex&quot;, et la texture entière sera utilisée pour couvrir le site <span class="notranslate">primitive</span>, et elle sera mélangée avec quatre couleurs différentes.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Primitives_And_Vertex_Formats.htm">Primitives et formats de sommets</a></div>
        <div style="float:right">Suivant : <a href="vertex_format_begin.htm"><span class="notranslate">vertex_format_begin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
draw_vertex_texture_colour
draw_vertex_texture_color
-->
  <!-- TAGS
draw_vertex_texture_colour
-->
</body>
</html>