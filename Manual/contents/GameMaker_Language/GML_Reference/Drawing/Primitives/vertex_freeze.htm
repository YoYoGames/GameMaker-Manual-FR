<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_freeze</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_freeze" />
  <meta name="rh-index-keywords" content="vertex_freeze" />
  <meta name="search-keywords" content="vertex_freeze" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_freeze</h1>
  <p>Cette fonction peut être utilisée pour &quot;geler&quot; un sommet <span class="notranslate">buffer</span>. Ce <span class="notranslate">buffer</span> devient <b>en lecture seule</b>, ce qui signifie que si vous deviez le modifier, vous devriez supprimer l'ensemble du <span class="notranslate">buffer</span> et le recréer. Un <span class="notranslate">buffer</span> gelé peut être soumis à <span class="notranslate">shader</span> plus rapidement qu'un <span class="notranslate">buffer</span> normal et dynamique et est recommandé pour les effets qui nécessitent un <span class="notranslate">primitive</span> personnalisé immuable pour la durée d'un niveau ou du jeu.</p>
  <p>La fonction renvoie 0 si elle réussit à geler le sommet spécifié <span class="notranslate">buffer</span>, mais si elle échoue pour une raison quelconque, elle renvoie -1.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">vertex_freeze(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">Vertex <span class="notranslate">Buffer</span> ID</span></td>
        <td><span class="notranslate">The vertex buffer to freeze.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (0 for success, -1 for failure)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">// Create event<br />
    vertex_freeze(vbuff);</p>
  <p>Le code ci-dessus fige le sommet donné <span class="notranslate">buffer</span> dans l'événement Create, afin qu'il puisse être utilisé comme un <span class="notranslate">buffer</span> &quot;statique&quot; dans d'autres événements pour accélérer <span class="notranslate">access</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Primitives_And_Vertex_Formats.htm">Primitives et formats de sommets</a></div>
        <div style="float:right">Suivant : <a href="vertex_freeze.htm"><span class="notranslate">vertex_submit</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
vertex_freeze
-->
  <!-- TAGS
vertex_freeze
-->
</body>
</html>