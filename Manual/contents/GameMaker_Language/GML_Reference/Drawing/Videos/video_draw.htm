<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>video_draw</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for video_draw" />
  <meta name="rh-index-keywords" content="video_draw" />
  <meta name="search-keywords" content="video_draw, draw video, render video" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1>video_draw</h1>
  <p>Cette fonction dessine l'image courante de la <a href="video_open.htm">vidéo ouverte</a> sur une surface (ou deux surfaces). Elle renvoie la ou les surfaces dans son tableau de retour, qui peuvent être <a href="../Surfaces/draw_surface.htm">dessinées manuellement</a>.</p>
  <p>La fonction renvoie également des données concernant l'état de la vidéo, qui sont développées ci-dessous.</p>
  <p>Assurez-vous que cette fonction est appelée après un appel à <span class="inline"><a href="video_open.htm">video_open()</a></span> mais avant un appel à <span class="inline"><a href="video_close.htm">video_close()</a></span>, sinon elle ne fera rien (car aucune vidéo ne sera chargée).</p>
  <h2>Données de retour</h2>
  <p>La fonction renvoie un tableau dont le premier élément (<span class="inline2">[0]</span>) est une valeur réelle. Cette valeur indique l'état de la vidéo, et sera :</p>
  <ul class="colour">
    <li><strong>0</strong>, si la vidéo est lue sans problème</li>
    <li><strong>-1</strong>, s'il y a eu une erreur</li>
    <li>Sur certaines plateformes, <strong>-2</strong>, si la vidéo a fini d'être lue (à ce moment-là, elle peut être supprimée de la mémoire avec un appel à <span class="inline"><a href="video_close.htm">video_close()</a></span> ).
      <ul>
        <li>Il est recommandé d'utiliser plutôt les <a data-xref="{text}" href="Videos.htm#h">rappels asynchrones</a> pour savoir quand une vidéo se termine.</li>
      </ul>
    </li>
  </ul>
  <p>Lorsque cette valeur d'état est <strong>0</strong>, le tableau contiendra plus de données, qui dépendront du format de la vidéo. Vous pouvez connaître le format de la vidéo en appelant <span class="inline"><a href="video_get_format.htm">video_get_format()</a></span>.</p>
  <h2>Vidéos sur le RGBA</h2>
  <p><span>Pour les vidéos RGBA, la position <span class="inline2">[1]</span> contiendra la surface où l'image vidéo a été dessinée. Vous pouvez obtenir cette surface et <a href="../Surfaces/draw_surface.htm">la dessiner</a> manuellement.</span></p>
  <h2>Vidéos YUV</h2>
  <p><span>Certaines plateformes (notamment les consoles) utilisent le format de couleur YUV pour les vidéos, qui fait appel à deux surfaces. Dans ce cas, le tableau aura les positions <span class="inline2">[1]</span> et <span class="inline2">[2]</span> avec deux surfaces :</span></p>
  <ul class="colour">
    <li><span>[<span class="inline2">1]</span> est la surface vidéo principale en noir et blanc.</span></li>
    <li><span>[<span class="inline2">2]</span> est la surface chromatique qui contient toutes les données de couleur.</span></li>
  </ul>
  <p>Ces deux surfaces sont ensuite combinées à l'aide d'un YUV <span class="notranslate">shader</span> avant d'être utilisées pour texturer un quad personnalisé, qui dessinera la vidéo à l'écran.</p>
  <p>Lisez les <a data-xref="{title}" href="YUV_Videos.htm">vidéos YUV</a> pour connaître les étapes du dessin de ces deux surfaces à l'aide d'un <span class="notranslate">shader</span>.</p>
  <p>Pour les détails d'implémentation spécifiques à une console particulière, veuillez vous référer à sa documentation sur le <a href="https://help.yoyogames.com/hc/en-us/">Helpdesk de YoYo Games</a>.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">video_draw();</p>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _data = video_draw();<br />
    var _status = _data[0];<br />
    <br />
    if (_status == 0)<br />
    {<br />
        var _surface = _data[1];<br />
    <br />
        draw_surface(_surface, x, y);<br />
    }
  </p>
  <p>Le code ci-dessus appelle <span class="inline">video_draw()</span>, et vérifie si le statut renvoyé est 0, ce qui signifie que la vidéo est en cours de lecture. Dans ce cas, il récupère l'ID de la surface et la dessine à la position de l'instance. Cela ne fonctionne que pour les vidéos RGBA.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Retour : <a data-xref="{title}" href="Videos.htm">Lecture de la vidéo</a></div>
        <div>Suivant : <a data-xref="{title}" href="YUV_Videos.htm">Vidéos YUV</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->
</body>
</html>