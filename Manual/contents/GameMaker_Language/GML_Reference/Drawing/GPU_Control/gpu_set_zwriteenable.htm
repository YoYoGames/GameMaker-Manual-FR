<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_zwriteenable</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_zwriteenable" />
  <meta name="rh-index-keywords" content="gpu_set_zwriteenable" />
  <meta name="search-keywords" content="gpu_set_zwriteenable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_zwriteenable</h1>
  <p>Cette fonction peut être utilisée pour activer (<span class="inline">true</span>) et désactiver (<span class="inline">false</span>) l'ordre des profondeurs en utilisant le z-buffer. Lorsqu'une instance est rendue dans <span data-keyref="GameMaker Name">GameMaker</span>, la profondeur d'un pixel généré (sa coordonnée z) est stockée dans le z-buffer, puis, si une autre instance de la scène doit être rendue au même pixel, les deux profondeurs sont comparées (z-testing - voir <a href="gpu_set_ztestenable.htm"><span class="inline">gpu_set_ztestenable()</span></a>) et celle qui est &quot;plus proche&quot; de l'observateur est alors enregistrée dans le z-buffer, remplaçant l'ancienne. Cependant, ce n'est pas toujours ce que vous souhaitez et il y a des moments où vous voulez qu'un élément soit dessiné par-dessus tout le reste, quelle que soit sa valeur z. Dans ce cas, vous pouvez utiliser cette fonction pour désactiver l'écriture dans le tampon z et ainsi forcer ce qui est dessiné à être dessiné par-dessus tout le reste. Notez que la description donnée ici concerne le mode de comparaison <i>par défaut</i> du test z, mais qu'il est possible de le modifier.</p>
  <p>La valeur par défaut est que le z-buffering est activé (<span class="inline">true</span>).</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gpu_set_zwriteenable(enable);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">enable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">The comparison mode to use (see list above)</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">gpu_set_zwriteenable(false);<br />
    with (obj_menu_containers)<br />
    {<br />
        draw_self();<br />
    }<br />
    gpu_set_zwriteenable(true);</p>
  <p>Le code ci-dessus désactive l'écriture dans le z-buffer, dessine un certain nombre d'objets, puis la réactive pour continuer à dessiner.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="GPU_Control.htm">Contrôle du GPU</a></div>
        <div style="float:right">Suivant : <a href="gpu_set_fog.htm"><span class="notranslate">gpu_set_fog</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_zwriteenable
-->
  <!-- TAGS
gpu_set_zwriteenable
-->
</body>
</html>