<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_mip_filter_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_get_tex_mip_filter_ext" />
  <meta name="rh-index-keywords" content="gpu_get_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="search-keywords" content="gpu_get_tex_mip_filter_ext,tf_point,tf_linear,tf_anisotropic" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_get_tex_mip_filter_ext</h1>
  <p>Cette fonction vous permet d'obtenir le mode de filtrage actuel de mip pour un échantillonneur <span class="notranslate">shader</span> donné. Vous fournissez la valeur de l'index de l'échantillonneur <span class="notranslate">shader</span> (tel que renvoyé par la fonction <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><span class="inline">shader_get_sampler_index()</span></a>) et la fonction renvoie l'une des constantes de valeur de mode énumérées ci-dessous.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">gpu_get_tex_mip_filter_ext(sampler_index);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">sampler_index</span></td><td><span data-keyref="Type_Handle_Shader_Sampler"></span></td>
        <td><span class="notranslate">The index of the shader sampler to get</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Constant_Mipmapping_Filter">Mipmapping Filter Constant</span> (listed below):</p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">tf_point</span></td>
        <td>Cela signifie que le mélange entre les niveaux de mipmap est désactivé, ce qui peut provoquer des transitions de texture visibles, mais donne les meilleures performances.</td>
      </tr>
      <tr>
        <td><span class="notranslate">tf_linear</span></td>
        <td>Cela signifie que le mélange entre les niveaux de mipmap est activé (c'est également connu sous le nom de <i>filtrage trilinéaire</i>), ce qui lisse les transitions de texture, mais entraîne une légère baisse des performances.</td>
      </tr>
      <tr>
        <td><span class="notranslate">tf_anisotropic</span></td>
        <td>Cela signifie que le filtrage anisotrope est activé, ce qui améliore considérablement la qualité de la transition des textures et peut réduire le flou visible avec d'autres modes de filtrage, mais il a le plus grand impact sur les performances.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var _sampleIndex = shader_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br />
    var _spriteTex = sprite_get_texture(sprite_index, 0);<br />
    shader_set(shd_Glass);<br />
    if (gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point) <br />
    {<br />
        gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);<br />
    }<br />
    texture_set_stage(_sampleIndex , _spriteTex);<br />
    shader_reset();</p>
  <p>Le code ci-dessus définit le mode de filtre mip à <span class="inline">tf_point</span> (désactivant le mipmapping) pour l'échantillonneur de texture <span class="notranslate">shader</span> donné s'il n'a pas déjà été défini.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Mipmapping.htm">Mipmapping</a></div>
        <div style="float:right">Suivant : <a href="gpu_get_tex_mip_bias.htm"><span class="notranslate">gpu_get_tex_mip_bias</span></a></div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_mip_filter_ext
tf_point
tf_linear
tf_anisotropic
--><!-- TAGS
gpu_get_tex_mip_filter_ext
--></body>
</html>