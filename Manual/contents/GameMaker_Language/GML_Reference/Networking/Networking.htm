<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Mise en réseau</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Networking  functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Networking" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Mise en réseau</h1>
  <p>Les fonctions de mise en réseau de <span data-keyref="GameMaker Name">GameMaker</span> sont basées sur les <i>sockets</i>, qui sont un standard industriel sur toutes les plateformes. Avec les sockets, vous avez la possibilité de créer à la fois des clients et des serveurs à l'aide d'un simple <span class="notranslate">GML</span>, ce qui vous permet de créer même un jeu à un seul joueur en utilisant le modèle client/serveur (ce qui permettra d'ajouter facilement le multijoueur plus tard).</p>
  <p>Fondamentalement, un socket est un objet qui peut envoyer, recevoir, se connecter et écouter des <i>ports</i> sur le réseau. Ces fonctions ne concernent que les connexions TCP/IP, sur lesquelles Internet est basé (IPv4 pour être plus précis). En substance, cela vous permet de connecter un socket utilisant une adresse IP (disons 192.168.1.10) à un autre socket sur une autre adresse IP (disons 192.168.1.11). Une fois connectées, ces deux sockets peuvent envoyer des données dans les deux sens en utilisant les fonctions <span class="inline">network_send_*</span> (comme <a href="network_send_packet.htm"><span class="inline">network_send_packet()</span></a>) et l'événement asynchrone dédié qu'elles déclenchent. Cet événement asynchrone génère une <a href="../Data_Structures/DS_Maps/DS_Maps.htm">carte DS</a> contenant les données reçues ainsi que d'autres détails. Vous trouverez tous les détails dans la section sur l'<a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">événement asynchrone réseau</a>.</p>
  <p>Au lieu que les programmes doivent lire et traiter chaque partie du trafic réseau entrant dans une machine, les adresses IP traitent également les ports, qui sont numérotés de 0 à 65535. Cela permet à chaque programme de ne recevoir que les paquets de données qui l'intéressent, et non pas tout ce qui a été envoyé par chaque programme. Cela permet également de gagner un temps considérable au niveau du CPU, car cela réduit considérablement le traitement des données. Avec <span data-keyref="GameMaker Name">GameMaker</span>, vous pouvez donc également "écouter" les ports. Ainsi, un serveur créera un socket, puis le liera à un port spécifique à écouter. Il sera alors informé des connexions, déconnexions et transferts de données à partir de ce socket.</p>
  <p>Les &quot;paquets&quot; de données sont eux-mêmes constitués de données binaires extraites d'un <span class="notranslate">buffer</span>. Ce <span class="notranslate">buffer</span> peut être créé et manipulé à l'aide des <a href="../Buffers/Buffers.htm">fonctions Buffer</a> de <span data-keyref="GameMaker Name">GameMaker</span>.</p>
  <p>Il convient de noter que si vous créez un projet pour la cible HTML5, vous ne pourrez pas utiliser les fonctions de création de serveur en raison des restrictions du navigateur et devrez écrire votre propre serveur pour cette plate-forme en utilisant quelque chose comme <strong>Electron </strong>ou <strong>NodeJS</strong>. Notez également que si votre jeu est multiplateforme et que vous prévoyez de vous connecter à une instance HTML5 du jeu à partir d'un serveur fonctionnant sur un appareil mobile ou de bureau, votre serveur ne peut communiquer avec l'instance HTML5 qu'à l'aide du protocole Web Socket (ceci se fait à l'aide des constantes <span class="inline">network_socket_ws</span> ou <span class="inline">network_socket_wss</span> - voir <a href="network_create_server.htm"><span class="inline">network_create_server()</span></a> pour plus d'informations). Cela signifie que votre serveur devra peut-être créer deux sockets sur des ports différents, un pour se connecter à des cibles non HTML5 (<span class="notranslate">Android</span>, <span class="notranslate">Windows</span>, etc...) et un pour se connecter à la cible HTML5.</p>
  <p>Les fonctions suivantes peuvent être utilisées pour la mise en réseau :</p>
  <ul class="colour">
    <li><a href="network_create_server.htm"><span class="notranslate">network_create_server</span></a></li>
    <li><a href="network_create_server_raw.htm">réseau_créer_serveur_raw </a></li>
    <li><a href="network_create_socket.htm"><span class="notranslate">network_create_socket</span></a></li>
    <li><a href="network_create_socket_ext.htm"><span class="notranslate">network_create_socket_ext</span></a></li>
    <li><a href="network_connect.htm"><span class="notranslate">network_connect</span></a></li>
    <li><a href="network_connect_async.htm"><span class="notranslate">network_connect_async</span></a></li>
    <li><a href="network_connect_raw.htm"><span class="notranslate">network_connect_raw</span></a></li>
    <li><a href="network_connect_raw_async.htm">réseau_connect_async_raw</a></li>
    <li><a href="network_resolve.htm"><span class="notranslate">network_resolve</span></a></li>
    <li><a href="network_set_config.htm"><span class="notranslate">network_set_config</span></a></li>
    <li><a href="network_set_timeout.htm"><span class="notranslate">network_set_timeout</span></a></li>
    <li><a href="network_send_broadcast.htm"><span class="notranslate">network_send_broadcast</span></a></li>
    <li><a href="network_send_packet.htm"><span class="notranslate">network_send_packet</span></a></li>
    <li><a href="network_send_raw.htm"><span class="notranslate">network_send_raw</span></a></li>
    <li><a href="network_send_udp.htm"><span class="notranslate">network_send_udp</span></a></li>
    <li><a href="network_send_udp_raw.htm"><span class="notranslate">network_send_udp_raw</span></a></li>
    <li><a href="network_destroy.htm"><span class="notranslate">network_destroy</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../GML_Reference.htm">Référence GML</a></div>
        <div style="float:right">Suivant : <a data-condition="Export:StableOnly" data-xref="{title}" href="../Web_And_HTML5/Web_And_HTML5.htm">Web et HTML5</a> <a data-condition="Export:Beta" data-xref="{title}" href="../Rollback/Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Networking
-->
  <!-- TAGS
networking_functions
-->
</body>
</html>