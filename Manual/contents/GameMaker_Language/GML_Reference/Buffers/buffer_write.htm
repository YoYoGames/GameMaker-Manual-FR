<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_write</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_write" />
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_write</h1>
  <p>Cette fonction peut être utilisée pour écrire des données sur un site <span class="notranslate">buffer</span> préalablement créé. Les données que vous écrivez doivent être en accord avec l'argument &quot;type&quot; de cette fonction, ce qui signifie que vous ne pouvez pas essayer d'écrire une chaîne de caractères comme un entier 16 bits non signé, par exemple. Les constantes suivantes peuvent être utilisées pour définir le type de données :</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">Type de données de la mémoire tampon Constante</a></span></th>
      </tr>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u8</span></td>
        <td>Un nombre entier non signé de 8 bits. Il s'agit d'une valeur positive comprise entre 0 et 255.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s8</span></td>
        <td>Un nombre entier signé de 8 bits. Il peut s'agir d'une valeur positive ou négative comprise entre -128 et 127 (0 est considéré comme positif).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u16</span></td>
        <td>Un nombre entier non signé de 16 bits. Il s'agit d'une valeur positive comprise entre 0 et 65 535.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s16</span></td>
        <td>Un nombre entier signé de 16 bits. Il peut s'agir d'une valeur positive ou négative comprise entre -32 768 et 32 767 (0 est considéré comme positif).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u32</span></td>
        <td>Un nombre entier non signé de 32 bits. Il s'agit d'une valeur positive comprise entre 0 et 4 294 967 295.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s32</span></td>
        <td>Un nombre entier signé de 32 bits. Il peut s'agir d'une valeur positive ou négative comprise entre -2 147 483 648 et 2 147 483 647 (0 étant considéré comme positif).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u64</span></td>
        <td>Un nombre entier non signé de 64 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f16</span></td>
        <td>Un flottant de 16 bits. Il peut s'agir d'une valeur positive ou négative dans la même plage qu'un entier signé de 16 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f32</span></td>
        <td>Un flottant de 32 bits. Il peut s'agir d'une valeur positive ou négative dans la même plage qu'un entier signé de 32 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f64</span></td>
        <td>Un flotteur 64 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_bool</span></td>
        <td>Une valeur booléenne. Ne peut être que 1 ou 0 (<span class="inline">true</span> ou <span class="inline">false</span>)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_string</span></td>
        <td>Une chaîne de caractères de n'importe quelle taille, finalisée par un caractère de terminaison nul.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_text</span></td>
        <td>Une chaîne de caractères de n'importe quelle taille, sans le caractère final nul.</td>
      </tr>
    </tbody>
  </table>
  <p>La fonction renvoie 0 si elle réussit ou -1 si elle échoue.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">buffer_write(buffer, type, value)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">ID de la mémoire tampon</a></span></td>
        <td><span class="notranslate">The index of the buffer to write to.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span></td>
        <td><span class="notranslate">The type of data that is to be written to the buffer (see the list of constants above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">value</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span></td>
        <td><span class="notranslate">The data to write.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    buffer_write(buff, buffer_s16, 0);<br />
    buffer_write(buff, buffer_s16, x);<br />
    buffer_write(buff, buffer_s16, y);</p>
  <p>Le code ci-dessus trouve le début du site <span class="notranslate">buffer</span> avec l'identifiant stocké dans la variable &quot;buff&quot; et y écrit une série de valeurs entières signées de 16 bits.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Buffers.htm">Tampons</a></div>
        <div style="float:right">Suivant : <a href="buffer_fill.htm"><span class="notranslate">buffer_fill</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->
</body>
</html>