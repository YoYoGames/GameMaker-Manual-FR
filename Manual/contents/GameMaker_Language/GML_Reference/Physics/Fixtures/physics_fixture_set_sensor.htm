<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_set_sensor</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_set_sensor" />
  <meta name="rh-index-keywords" content="physics_fixture_set_sensor" />
  <meta name="search-keywords" content="physics_fixture_set_sensor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_set_sensor</h1>
  <p>Parfois, vous voudrez que votre jeu détecte et reconnaisse la collision de deux instances avec des appareils, mais sans avoir de réaction physique à la collision. Cela peut être fait en convertissant le dispositif en capteur, ce qui signifie qu'il générera un événement de collision mais sans réaction physique, de sorte que vous pourrez utiliser ces instances comme &quot;déclencheurs&quot; d'autres événements dans la salle de jeu. N'importe quel dispositif peut être marqué comme un capteur, et il n'y a aucune différence si l'instance à laquelle il est lié est statique ou en mouvement.</p>
  <p class="note"><b>REMARQUE</b>: un dispositif de détection déclenche l'événement de collision <b>uniquement</b> lorsque la collision <b>se produit pour la première fois</b>, ce qui signifie que vous n'obtenez pas un flux d'événements de collision lorsque les deux corps continuent à se chevaucher (ce qui se produirait traditionnellement). S'ils cessent de se chevaucher et se chevauchent à nouveau, un autre événement de collision sera déclenché.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_fixture_set_sensor(fixture, state)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td>
        <td><span data-keyref="Type_ID_PhyFixture">ID du dispositif de physique</span></td>
        <td><span class="notranslate">the index of the fixture</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">state</span></td>
        <td><span data-keyref="Type_Bool">Booléen</span></td>
        <td><span class="notranslate">whether a fixture is a sensor (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">physics_fixture_set_sensor(fix_Cloud, 1);</p>
  <p>Le code ci-dessus va transformer l'état du capteur de l'appareil indexé dans &quot;fix_Cloud&quot; en vrai.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Fixtures.htm">Fixtures</a></div>
        <div style="float:right">Suivant : <a href="physics_fixture_set_kinematic.htm"><span class="notranslate">physics_fixture_set_kinematic</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_set_sensor
-->
  <!-- TAGS
physics_fixture_set_sensor
-->
</body>
</html>