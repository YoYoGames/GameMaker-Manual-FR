<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_fixture_bind_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_bind_ext" />
  <meta name="rh-index-keywords" content="physics_fixture_bind_ext" />
  <meta name="search-keywords" content="physics_fixture_bind_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_bind_ext</h1>
  <p>Une fois que nous avons défini notre dispositif, il doit être lié à une instance. Cela signifie que ses <i>propriétés</i> sont transférées à l'instance sélectionnée, et <b>non au projecteur lui-même</b>, de sorte qu'un projecteur peut être lié à plusieurs instances si toutes doivent avoir les mêmes propriétés. Vous pouvez spécifier un index d'objet pour la cible et toutes les instances présentes dans la pièce à ce moment-là recevront les propriétés de ce luminaire (mais pas les nouvelles instances de l'objet créées ultérieurement), ou vous pouvez utiliser les mots-clés spéciaux <i>other</i> et <i>all</i>. Vous pouvez même spécifier un objet parent et toutes les instances enfants avec ce parent recevront également le fixture. Une fois que le dispositif a été lié à toutes les instances dont vous avez besoin, il peut être supprimé s'il n'est plus nécessaire et les instances ayant les propriétés de ce dispositif ne seront pas affectées et conserveront ces propriétés.</p>
  <p>Normalement, le dispositif sera lié à l'instance avec le centre de masse positionné à l'origine de l'instance, mais ce n'est pas toujours ce dont vous avez besoin et donc cette fonction vous permet également de décaler la position x et y où le dispositif est lié d'une quantité donnée (si vous n'avez pas besoin de cela, utilisez alors <a href="physics_fixture_bind.htm"><span class="inline">physics_fixture_bind()</span></a> à la place). Il est important de noter qu'un dispositif ne peut supporter qu'<i>un seul</i> décalage, car l'ajout de plusieurs décalages à un seul dispositif n'est pas supporté par Box2D.</p>
  <p><img>La fonction renvoie également une valeur &quot;id&quot; unique pour le dispositif <i>lié</i><b>(pas le dispositif lui-même</b>) qui peut ensuite être utilisée pour supprimer (&quot;délier&quot;) les propriétés physiques de l'instance à l'aide de la fonction <a href="physics_remove_fixture.htm"><span class="inline">physics_remove_fixture()</span></a>. Cela vous permet d'ajouter et de supprimer des propriétés physiques d'une instance sans avoir à détruire et recréer des objets.</p>
  <p class="note"><b>REMARQUE</b>: les installations doivent être supprimées lorsqu'elles ne sont plus nécessaires, faute de quoi elles risquent de provoquer une fuite de mémoire qui ralentira et finira par faire planter votre jeu.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_fixture_bind_ext(fixture, target, xoffset, yoffset)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td>
        <td><span data-keyref="Type_ID_PhyFixture">ID du dispositif de physique</span></td>
        <td><span class="notranslate">The fixture that is to be bound</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">target</span></td>
        <td><span data-keyref="Type_ID_Instance">ID de l'instance</span> ou <span data-keyref="Type_Asset_Object">actif de l'objet</span></td>
        <td><span class="notranslate">The target instance that is to receive the fixture (can be an instance id, an object id, <i>other</i>, or <i>all</i>)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xoffset</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The offset along the x-axis</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yoffset</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The offset along the y-axis</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var fix, inst;<br />
    fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(fix, 16);<br />
    physics_fixture_set_density(fix, 1.0);<br />
    inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br />
    my_fix = physics_fixture_bind_ext(fix, inst, sprite_width / 2, -(sprite_height / 2));<br />
    physics_fixture_delete(fix);</p>
  <p>Le code ci-dessus va créer un dispositif et affecter son index à la variable &quot;fix&quot;. Il définit ensuite la forme et la densité du dispositif avant de le lier à l'instance avec un décalage basé sur la largeur et la hauteur de <span class="notranslate">sprite</span>. L'index du dispositif <b>lié</b> est stocké dans la variable &quot;my_fix&quot;. Enfin, le dispositif lui-même est supprimé pour éviter les fuites de mémoire, car il n'est plus nécessaire.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Fixtures.htm">Fixtures</a></div>
        <div style="float:right">Suivant : <a href="physics_fixture_set_collision_group.htm"><span class="notranslate">physics_fixture_set_collision_group</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_bind_ext
-->
  <!-- TAGS
physics_fixture_bind_ext
-->
</body>
</html>