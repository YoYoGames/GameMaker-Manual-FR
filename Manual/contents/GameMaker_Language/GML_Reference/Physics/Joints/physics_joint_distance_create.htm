<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physique_joint_distance_créer</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_distance_create" />
  <meta name="rh-index-keywords" content="physics_joint_distance_create" />
  <meta name="search-keywords" content="physics_joint_distance_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physique_joint_distance_créer</h1>
  <p>L'un des joints les plus simples est le joint de distance, qui stipule que la distance entre deux points sur deux instances doit être constante. Lorsque vous spécifiez un joint de distance, les deux instances doivent déjà être créées et avoir un dispositif de fixation assigné, puis vous définissez les deux points d'ancrage en coordonnées de salle. Le premier point d'ancrage est connecté à l'instance 1, le second point d'ancrage est connecté à l'instance 2 et la distance entre ces points implique la longueur de la contrainte de distance. L'image ci-dessous montre comment cela fonctionne :</p>
  <p><img>Comme vous pouvez le constater, les points d'ancrage sont spécifiés en tant que coordonnées de la pièce. Il faut donc les définir avec précaution, surtout si les instances sont créées en même temps que les joints plutôt que d'être placées dans la pièce via l'éditeur de pièce. Vous devez également savoir que les articulations sont créées indépendamment de la taille de <span class="notranslate">sprite</span> des instances ou des dispositifs qu'elles ont attachés. Ainsi, si vous créez un joint de distance ailleurs qu'à l'origine de l'instance, il est toujours valide et contraindra les deux instances par rapport à la position à laquelle il a été créé. Si vous définissez la valeur &quot;col&quot; sur <span class="inline">true</span>, les deux instances peuvent interagir et entrer en collision l'une avec l'autre, mais <i>seulement</i> si elles ont des événements de collision. Par contre, si vous définissez la valeur &quot;col&quot; sur <span class="inline">false</span>, elles n'entreront jamais en collision.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">ID de l'instance</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">ID de l'instance</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor1_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The first x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor1_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The first y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor2_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The second x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor2_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">the second y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Booléen</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id=instance_create_layer(x+300, y, &quot;Instances&quot;, obj_Rudder);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>Le code ci-dessus crée et définit un nouveau dispositif, puis crée une instance de &quot;obj_Rudder&quot;. Le dispositif est ensuite assigné à l'instance qui exécute le code ainsi qu'à l'instance nouvellement créée et un joint est créé entre eux. Enfin, le dispositif est supprimé car il n'est plus nécessaire.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Dos : <a href="Joints.htm">Articulations</a></div>
        <div style="float:right">Suivant : <a href="physics_joint_revolute_create.htm"><span class="notranslate">physics_joint_revolute_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_distance_create
-->
  <!-- TAGS
physics_joint_distance_create
-->
</body>
</html>