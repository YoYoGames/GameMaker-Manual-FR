<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_gear_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_gear_create" />
  <meta name="rh-index-keywords" content="physics_joint_gear_create" />
  <meta name="search-keywords" content="physics_joint_gear_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">physics_joint_gear_create</span></h1>
  <p>Si vous voulez créer un engin mécanique sophistiqué, vous pouvez utiliser des engrenages. En principe, vous pouvez créer des engrenages dans <span data-keyref="GameMaker Name">GameMaker</span> en utilisant des instances de composition pour modéliser les dents de l'engrenage, mais cela n'est pas très efficace et peut être fastidieux à rédiger ! Heureusement, il existe une méthode plus simple, qui consiste à utiliser un <i>joint d'engrenage</i>. Pour en créer un, vous devez avoir préalablement défini vos montages et créé les deux articulations de base qui composeront votre engrenage - celles-ci <b>doivent</b> être constituées d'une <a href="physics_joint_revolute_create.htm">articulation rotative</a> et d'une <a href="physics_joint_prismatic_create.htm">articulation prismatique</a> ou d'une autre <i>articulation rotative</i>. L'image ci-dessous montre comment un engrenage est généralement créé dans un jeu :</p>
  <p><img>Que se passe-t-il alors ? Eh bien, une fois que les deux articulations sont ajoutées à l'engrenage, l'interaction avec l'une aura un effet sur l'autre, donc dans l'exemple de l'image ci-dessus, si vous faites tourner inst2, inst3 se déplacera de haut en bas, ou si vous déplacez inst3 de haut en bas alors inst2 tournera. Vous pouvez également modifier le rapport de démultiplication, ce qui signifie que vous devez déplacer une instance de plus (ou de moins) pour obtenir l'effet souhaité. Le code de l'exemple en bas de page montre comment on peut créer quelque chose comme l'image ci-dessus.</p>
  <p class="note"><b>REMARQUE</b>: Si vous devez supprimer l'une des deux instances impliquées dans le joint d'engrenage (ou simplement supprimer leurs joints), vous <b>devez</b> d'abord supprimer le joint d'engrenage en utilisant <span style="font-size:1px;"><a href="physics_joint_delete.htm"><span class="inline">physics_joint_delete()</span></a></span> sinon vous obtiendrez une erreur !</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code"><span data-field="title" data-format="default">physics_joint_gear_create</span>(inst1, inst2, joint_1, joint_2, ratio)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID de l'instance</a></span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID de l'instance</a></span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_1</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">A previously defined revolute joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_2</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">A previously defined revolute <i>or</i> prismatic joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ratio</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">Set the velocity ratio between the two joints</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Joints/Joints.htm" target="_blank">Physics Joint ID</a></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;<br />
    g_fix = physics_fixture_create();<br />
    physics_fixture_set_box_shape(g_fix, 40, 10);<br />
    t_fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(t_fix, 10);<br />
    physics_fixture_set_density(t_fix, 0.5);<br />
    inst1 = instance_create_layer(60, room_height - 30, &quot;Background&quot;, obj_Ground);<br />
    inst2 = instance_create_layer(40, room_height - 300, &quot;Instances&quot;, obj_Cog);<br />
    inst3 = instance_create_layer(150, room_height - 300, &quot;Instances&quot;, obj_Barrel);<br />
    physics_fixture_bind(g_fix, inst1);<br />
    physics_fixture_bind(t_fix, inst2);<br />
    physics_fixture_bind(t_fix, inst3);<br />
    r_joint = physics_revolute_joint_create(inst1, inst2, 40, room_height - 300, -80, 80, 1, 10, 0.5, 1, 0);<br />
    p_joint = physics_prismatic_joint_create(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0);<br />
    <span data-field="title" data-format="default">physics_joint_gear_create</span>(inst2, inst3, r_joint, p_joint, 0.5);
  </p>
  <p>Le code ci-dessus crée et définit deux fixtures, puis crée trois instances, une &quot;obj_Ground&quot; et deux autres, &quot;obj_Cog&quot; et &quot;obj_Barrel&quot;. Les fixtures sont ensuite liées à ces instances et deux joints sont créés. Une jointure revolute entre le sol et le cog, et une jointure prismatique entre le sol et le barrel. Enfin, un joint d'engrenage est créé entre les instances de pignon et de baril en utilisant les joints revolute et prismatique définis précédemment.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Dos : <a href="Joints.htm">Articulations</a></div>
        <div style="float:right">Suivant : <a href="physics_joint_rope_create.htm"><span class="notranslate">physics_joint_rope_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_gear_create
-->
  <!-- TAGS
physics_joint_gear_create
-->
</body>
</html>