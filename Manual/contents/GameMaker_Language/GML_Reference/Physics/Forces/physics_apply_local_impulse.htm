<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physique_application_impulsion_locale</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_apply_local_impulse" />
  <meta name="rh-index-keywords" content="physics_apply_local_impulse" />
  <meta name="search-keywords" content="physics_apply_local_impulse" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physique_application_impulsion_locale</h1>
  <p>Non seulement vous pouvez appliquer une force et une gravité à un objet avec la physique de <span data-keyref="GameMaker Name">GameMaker</span>, mais vous pouvez également appliquer une impulsion. Celle-ci est légèrement différente d'une force dans la mesure où, lorsqu'elle est appliquée, elle affecte <i>immédiatement</i> la vitesse et, potentiellement, le couple (ou &quot;spin&quot;) de l'objet, en particulier si le point choisi pour appliquer l'impulsion a un vecteur qui n'est pas aligné avec le centre de masse (note : le centre de masse <i>n'</i> est <i>pas nécessairement</i> le même que l'origine !) Cette fonction applique une impulsion <i>localement</i> à une instance. Cela signifie que la force et la direction de l'impulsion sont calculées sur la base de l'origine (ou de la position si elle n'a pas de <span class="notranslate">sprite</span>) de l'instance, sans tenir compte de la direction ou de la rotation qu'elle peut avoir dans la salle de jeu ou le monde physique. Voici une illustration :</p>
  <p><img>Comme vous pouvez le voir, la grenouille de l'image reçoit une impulsion par le bas qui la fait &quot;sauter&quot;. L'impulsion exacte est définie par le vecteur que nous obtenons à partir des composantes ximpulse/yimpulse par rapport aux coordonnées xpos/ypos - ce qui signifie simplement que l'impulsion est calculée comme la distance de xpos/ypos à ximpulse/yimpulse en Newtons, et la direction est l'angle que nous obtenons de xpos/ypos à ximpulse/yimpulse.</p>
  <p class="note"><b>REMARQUE</b>: Le monde physique utilise des mètres pour tous ses calculs, et le ratio de pixels par mètre est défini dans l'éditeur de pièce ou en utilisant la fonction <span style="font-size:1px;"><a href="../The_Physics_World/physics_world_create.htm"><span class="inline">physics_world_create()</span></a></span>.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">physics_apply_local_impulse(xpos, ypos, ximpulse, yimpulse)</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">xpos</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate <i>relative to the origin</i> where the impulse will be applied</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">ypos</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate <i>relative to the origin</i> where the impulse will be applied</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">ximpulse</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">the x component of the impulse vector (relative to the xpos coordinate)</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yimpulse</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">the y component of the impulse vector (relative to the ypos coordinate)</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemple :</h4>
  <p class="code">if jump<br />
    {<br />
        physics_apply_local_impulse(0, 20, 0, 50);<br />
    }</p>
  <p>Le code ci-dessus appliquera une impulsion avec une force de 30 Newtons et une direction allant de bas en haut <i>par rapport à</i> l'origine de l'instance si la variable &quot;jump&quot; est vraie.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Forces.htm">Forces</a></div>
        <div style="float:right">Suivant : <a href="physics_apply_torque.htm"><span class="notranslate">physics_apply_torque</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
physics_apply_local_impulse
-->
  <!-- TAGS
physics_apply_local_impulse
-->
</body>
</html>