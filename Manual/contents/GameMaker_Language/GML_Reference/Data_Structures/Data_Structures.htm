<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Structures de données</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Data Structures" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Data Structures" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Structures de données</h1>
  <p>Dans les jeux, vous avez souvent besoin de stocker des informations de manière précise et ordonnée. Par exemple, vous pouvez avoir besoin de stocker des listes d'objets qu'une personne porte ou vous pouvez vouloir stocker une grille de lieux qui doivent encore être visités. Vous <i>pouvez</i> utiliser les tableaux pour cela, mais si vous voulez effectuer des opérations plus complexes, comme trier les données ou rechercher un élément particulier, vous devez écrire de gros morceaux de code à l'adresse <span class="notranslate">GML</span>, ce qui peut être lent à exécuter, difficile à déboguer et très pénible à écrire !</p>
  <p>Pour remédier à cela, <span data-keyref="GameMaker Name">GameMaker</span> dispose d'un certain nombre de <b>structures de données</b> intégrées auxquelles on peut accéder par le biais de fonctions spécialisées. Il existe six types différents de structures de données, chacune ayant ses propres avantages en fonction du type d'informations que vous cherchez à stocker et de la manière dont vous souhaitez les manipuler par la suite : piles, files d'attente, listes, cartes, files d'attente prioritaires et grilles.</p>
  <p class="note"><strong>REMARQUE</strong>: Il est recommandé d'utiliser les <a href="../../GML_Overview/Arrays.htm">tableaux</a> et les <a href="../../GML_Overview/Structs.htm">structures</a> plutôt que les listes et les cartes DS, car ils présentent des caractéristiques similaires, sont plus faciles à utiliser et font l'objet d'un ramassage automatique des déchets.</p>
  <p>Essentiellement, toutes les structures de données fonctionnent de la même manière : vous créez une structure de données et stockez sa <i>valeur d'index</i> dans une variable. Vous utilisez ensuite cet index pour référencer la structure de données dans tous les appels de fonction ultérieurs qui peuvent effectuer des opérations sur elle. Enfin, lorsque vous avez terminé, vous détruisez à nouveau la structure de données pour la retirer de la mémoire. Vous pouvez utiliser simultanément autant de structures que vous le souhaitez, et toutes les structures peuvent stocker tous les <a href="../../GML_Overview/Data_Types.htm">types de données</a> disponibles.</p>
  <p class="note"><b><span class="note">NOTE</span> </b>Comme toutes les ressources dynamiques, les structures de données occupent de la mémoire et doivent donc <b>toujours</b> être détruites lorsqu'elles ne sont plus nécessaires afin d'éviter les fuites de mémoire qui ralentissent et finissent par faire planter votre jeu.</p>
  <p>Lorsque vous créez une structure de données, la valeur d'index utilisée pour l'identifier est une valeur entière commençant à 0. Cela signifie que différentes structures de données peuvent avoir la <b>même</b> valeur d'index, donc en cas de doute vous devriez utiliser la fonction <span style="font-size:1px;"><span class="inline"><a data-xref="{title}" href="ds_exists.htm">ds_exists</a></span></span> avant d'y accéder. Notez également que les indices sont réutilisés, de sorte qu'une valeur d'indice de structure de données détruite peut être utilisée par une structure nouvellement créée par la suite, et nous vous recommandons de définir toute variable qui contient un indice DS à -1 après avoir détruit la structure de données.</p>
  <p>Vous trouverez des informations sur les différentes structures de données dans les sections suivantes :</p>
  <ul class="colour">
    <li><a href="DS_Grids/DS_Grids.htm">Grilles</a></li>
    <li><a href="DS_Lists/DS_Lists.htm">Listes</a></li>
    <li><a href="DS_Maps/DS_Maps.htm">Cartes</a></li>
    <li><a href="DS_Priority_Queues/DS_Priority_Queues.htm">Files d'attente prioritaires</a></li>
    <li><a href="DS_Queues/DS_Queues.htm">Files d'attente</a></li>
    <li><a href="DS_Stacks/DS_Stacks.htm">Piles</a></li>
  </ul>
  <p> </p>
  <p>Avant d'utiliser des structures de données dans votre jeu, vous devez également savoir qu'il y a certains moments où, en raison d'erreurs d'arrondi, vous pouvez obtenir un résultat qui n'est pas celui que vous attendiez. Ce problème peut être résolu en modifiant la précision du DS à l'aide de la fonction suivante :</p>
  <ul class="colour">
    <li><a href="ds_set_precision.htm"><span class="notranslate">ds_set_precision</span></a></li>
  </ul>
  <p> </p>
  <p>Il existe également une fonction spéciale permettant de vérifier si une structure de données d'un type donné existe :</p>
  <ul class="colour">
    <li><a href="ds_exists.htm"><span class="notranslate">ds_exists</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../GML_Reference.htm">Référence GML</a></div>
        <div style="float:right">Suivant : <a href="../Strings/Strings.htm">Cordes</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Data Structures
-->
  <!-- TAGS
data_structure_functions
-->
</body>
</html>