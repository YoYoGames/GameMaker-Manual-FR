<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>montrer_debug_message</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_debug_message" />
  <meta name="rh-index-keywords" content="show_debug_message" />
  <meta name="search-keywords" content="show_debug_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>montrer_debug_message</h1>
  <p>Cette fonction va créer un message de débogage personnalisé qui sera affiché dans la fenêtre du compilateur à l'adresse <span class="notranslate">runtime</span>. Notez que le message peut être <i>soit</i> une chaîne de caractères, soit un nombre réel, mais si vous avez besoin des deux, le nombre devra d'abord être converti en chaîne de caractères à l'aide de la fonction <a href="../Strings/Strings.htm"><span class="inline">string()</span></a> (voir l'exemple ci-dessous) et que si le nombre a plus de deux décimales, vous devez utiliser la fonction <a href="../Strings/string_format.htm"><span class="inline">string_format()</span></a> pour les afficher car, par défaut, les décimales sont arrondies aux deux décimales les plus proches (ainsi, &quot;1,2468&quot; sera affiché sous la forme &quot;1,25&quot; dans la fenêtre de sortie).</p>
  <p>Les messages de débogage affichés avec cette fonction seront affichés dans la <a href="../../../Introduction/The_Output_Window.htm">fenêtre de sortie du compilateur</a> en bas de <span class="notranslate">IDE</span> ainsi que dans la <a href="../../../IDE_Tools/The_Debugger.htm">vue graphique</a> du débogueur lorsque le jeu est exécuté en mode débogage. Si vous ne voulez voir les messages qu'en mode débogage, vous devriez probablement utiliser la fonction <a href="debug_event.htm"><span class="inline">debug_event()</span></a> à la place.</p>
  <p> </p>
  <h4>Syntaxe :</h4>
  <p class="code">show_debug_message(string);</p>
  <table>
    <tbody>
      <tr>
        <th>Arguments</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The custom debug message to show.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Les retours :</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4><b>Exemple :</b></h4>
  <p class="code">if !instance_exists(obj_Exit)<br />
    {<br />
        show_debug_message(&quot;Exit not created!&quot;);<br />
        show_debug_message(&quot;Error Num: &quot; + string(global.error));<br />
        game_end();<br />
    }</p>
  <p>Le code ci-dessus vérifie si une instance existe et si ce n'est pas le cas, un message de débogage est affiché dans la fenêtre de compilation et le jeu est terminé.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Debugging.htm">Débogage</a></div>
        <div style="float:right">Suivant : <a href="show_debug_overlay.htm"><span class="notranslate">show_debug_overlay</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
show_debug_message
-->
  <!-- TAGS
show_debug_message
-->
</body>
</html>