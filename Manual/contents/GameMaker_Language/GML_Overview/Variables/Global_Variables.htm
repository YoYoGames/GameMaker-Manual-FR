<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Variables globales</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining global variables" />
  <meta name="rh-index-keywords" content="global,globalvar,Global Variables" />
  <meta name="search-keywords" content="global,global variables,globalvar" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Variables globales</h1>
  <p>Une description de base d'une variable <strong>globale </strong>est une variable qui, une fois déclarée, n'appartient à aucune instance en particulier et qui est pourtant accessible à toutes. Tout comme les <a href="Local_Variables.htm">variables locales</a>, les variables globales doivent être déclarées à l'aide d'un identifiant, mais contrairement à une variable locale, une variable globale reste en mémoire <em>jusqu'à la fin du jeu</em>. Ainsi, vous pouvez créer une variable globale pour garder la trace (par exemple) du nombre de balles dont dispose le joueur, puis mettre à jour cette variable à différents moments du jeu, à partir de n'importe quelle instance ou fonction et à tout moment. Essentiellement, une variable globale n'appartient à aucune instance spécifique et peut être accédée, modifiée et utilisée par toutes les instances, et toute modification apportée à la variable est &quot;globale&quot;, en ce sens que toutes les instances utilisant la variable seront affectées par la modification. Prenons un exemple :</p>
  <p class="code">global.food = 5;</p>
  <p>Nous déclarons la variable &quot;<span class="inline">food</span>&quot; en écrivant d'abord &quot;<span class="inline">global</span>&quot;, puis un &quot;<span class="inline">.</span>&quot; pour indiquer à <span data-keyref="GameMaker Name">GameMaker</span> que cette variable a désormais une portée globale. Nous devrons utiliser cette forme à partir de maintenant chaque fois que nous aurons besoin de <span class="notranslate">access</span> ou de modifier cette variable de quelque manière que ce soit. Nous avons donc créé une nouvelle variable appelée &quot;<span class="inline">food</span>&quot; et nous l'avons déclarée comme globale. Maintenant, n'importe quelle instance ou fonction peut utiliser et modifier cette variable de n'importe quelle manière et toutes les autres instances le &quot;verront&quot;. Par exemple, nous pourrions avoir un objet alimentaire différent avec lequel le joueur entre en collision et dans l'événement de collision nous aurions :</p>
  <p class="code">global.food +=1;</p>
  <p>Nous avons également un autre objet qui dessine cette valeur comme ceci :</p>
  <p class="code">draw_text(32, 32, &quot;food = &quot; + string(global.food));</p>
  <p>Avec les variables globales, nous pouvons changer les valeurs et voir ces changements se refléter dans toutes les instances des objets qui font référence à cette variable. Comme pour les variables <i>locales</i>, vous devez veiller à ne pas nommer vos variables globales de la même manière que les variables d'instance, car cela pourrait vous poser des problèmes et faire apparaître des bogues dans vos jeux en raison du chevauchement des variables, ce qui peut parfois s'avérer difficile à déboguer. En général, vous devriez avoir un seul objet qui déclare toutes vos variables globales au tout début du jeu (par exemple, dans l'<a href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm">événement Room Start</a> du premier objet placé dans la première pièce du jeu) ou une seule <a href="../Script_Functions.htm">fonction de script</a> qui les déclare toutes ensemble, car cela vous donne un endroit pratique pour revenir en arrière et tout référencer en même temps si vous avez besoin de vérifier un nom de variable ou de modifier une valeur.</p>
  <p><span data-keyref="GameMaker Name">GameMaker</span> possède également une collection de variables globales &quot;intégrées&quot;. Vous devez donc les connaître car vous pouvez donner le même nom à l'une de vos variables d'instance ou souhaiter avoir votre propre variable globale avec le même nom et vous demander pourquoi vous obtenez des erreurs ! Elles sont cependant faciles à repérer, car elles sont affichées dans une couleur différente dans l'éditeur de code et apparaissent également dans la barre d'autocomplétion en bas de la page. La majorité des variables globales intégrées ont des utilisations très spécifiques et sont répertoriées dans les sections appropriées du manuel - cependant, il y en a deux importantes qui sont utilisées fréquemment et qui ne sont pas répertoriées ailleurs :</p>
  <ul class="colour">
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/async_load.htm">async_load</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="../../GML_Reference/Game_Input/Gesture_Input/event_data.htm">event_data</a></span></li>
  </ul>
  <p>Il existe également trois variables globales construites et <b>dépréciées</b> dont vous devez être conscient (ces variables sont uniquement conçues pour prendre en charge les projets hérités des versions précédentes de <span class="notranslate">GameMaker</span> et doivent être utilisées dans le cadre de la mise en œuvre du projet). <b><i>ne pas être utilisé dans les nouveaux projets</i></b>) :</p>
  <ul class="colour">
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/score.htm">score</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/health.htm">health</a></span></li>
    <li><span class="inline"><a data-xref="{title}" href="Builtin_Global_Variables/lives.htm">lives</a></span></li>
  </ul>
  <p>Enfin, il existe deux variables qui peuvent être utilisées pour les fonctions et méthodes de script :</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Builtin_Global_Variables/argument.htm">argument</a></li>
    <li><a data-xref="{title}" href="Builtin_Global_Variables/argument_count.htm">argument_count</a></li>
  </ul>
  <p>La forme suivante peut également être utilisée pour déclarer des variables globales, mais elle est <i><b>inclus uniquement pour la rétrocompatibilité</b></i>et il n'est pas recommandé d'utiliser ce formulaire pour les nouveaux projets, car les futures versions de <span class="notranslate">GameMaker</span> pourraient ne pas le prendre en charge.</p>
  <p>La deuxième façon de créer des variables globales consiste à les déclarer en tant que telles à l'aide de la déclaration <span class="inline">globalvar</span>, tout comme vous le feriez pour une variable locale à l'aide de la déclaration <span class="inline">var</span>.</p>
  <p class="note"><b>IMPORTANT !</b> La déclaration <span class="inline">globalvar</span> est <b>obsolète</b> et n'est prise en charge qu'à des fins patrimoniales. Vous devez <b>toujours</b> utiliser l'identifiant <span class="inline">global.</span> pour marquer les variables globales.</p>
  <p>Cette déclaration (dépréciée) serait utilisée comme suit :</p>
  <p class="code">globalvar food;<br />
    food = 5;</p>
  <p>Une fois déclarée de cette manière, la variable &quot;food&quot; est désormais considérée comme globale et ne nécessite pas de préfixe <span class="inline">global.</span> - ce qui signifie également qu'il est beaucoup plus difficile d'identifier les variables globales dans votre code et qu'il est également beaucoup plus facile d'obtenir un chevauchement de variables lorsque vous utilisez le même nom de variable dans différents objets ou dans des extensions que vous avez installées. Une fois déclarée de cette manière, la variable globale est accessible comme suit :</p>
  <p class="code">food += 2;</p>
  <p>ou :</p>
  <p class="code">draw_text(32, 32, &quot;food = &quot; + string(food));</p>
  <p>Comme vous pouvez le voir, sans rien pour montrer que la variable est globale, vous vous exposez potentiellement à de nombreux problèmes subtils dans votre jeu, c'est pourquoi cette déclaration doit être évitée.</p>
  <p>Il existe quelques fonctions conçues pour vous aider à traiter les variables globales, que vous trouverez à la page suivante :</p>
  <ul class="colour">
    <li><a href="../../GML_Reference/Variable_Functions/Variable_Functions.htm">Fonctions variables</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Variables_And_Variable_Scope.htm">Variables et champ d'application des variables</a></div>
        <div style="float:right">Suivant : <a href="Constants.htm">Constantes</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
global
globalvar
global variables
-->
  <!-- TAGS
global_variables
-->
</body>
</html>