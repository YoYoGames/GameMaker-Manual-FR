<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Extensions iOS / tvOS</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Extensions iOS / <span class="notranslate">tvOS</span> </h1>
  <p>Pour créer une extension pour <span class="notranslate">iOS</span> ou tvOS, vous devez le faire en deux parties. La première partie consiste à ajouter l'extension elle-même, ainsi que les fichiers requis, et la seconde à créer les fonctions et les macros/constantes dont l'extension a besoin.</p>
  <p>Les fonctions et les constantes sont ajoutées en utilisant des fichiers de <strong>type placeholder </strong>pour les regrouper. Vous devez donc ajouter un placeholder, puis définir les fonctions et les macros comme expliqué dans la section <a href="Creating_An_Extension.htm">ici</a>. Pour ajouter le reste des fichiers, vous devez d'abord cocher la case <em>iOS </em>et/ou <em>tvOS </em>dans la section <strong>Additional Features</strong> de l'éditeur pour ouvrir la fenêtre <strong>Extension Properties</strong> correspondante (l'image ci-dessous montre la fenêtre de propriétés <span class="notranslate">iOS</span>, mais la fenêtre <span class="notranslate">tvOS</span> est exactement la même) :</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Ici, vous pouvez donner les détails suivants :</p>
  <ul class="colour">
    <li class="dropspot"><strong>Compilateur <span class="notranslate">Flags</span> / Drapeaux de linker</strong>: Certains frameworks et SDK tiers nécessitent l'ajout de drapeaux supplémentaires pour le linker <span class="notranslate">flags</span> et le compilateur <span class="notranslate">flags</span> pour fonctionner, qui peuvent être spécifiés ici (voir la documentation qui accompagne le SDK ou le framework en question pour plus de détails).</li>
    <li class="dropspot"><strong>Nom de la classe</strong>: Votre extension peut avoir plusieurs classes, chaque classe ayant ses propres fonctions et constantes. Vous devez donc lui donner un nom qui reflète son objectif.</li>
    <li class="dropspot"><strong>Nom de la classe du délégué d'application</strong>: Le nom de votre classe de délégué d'application personnalisée. Ce paramètre permet à l'extension de remplacer/étendre la fonctionnalité de base de l'application. Pour utiliser cette fonctionnalité, vous devez procéder comme suit :
      <ol>
        <li>Assurez-vous que les fichiers source du délégué portent le même nom que la classe du délégué (par exemple, <span class="inline">@interface MyCustomAppDelegate</span> doit être défini dans &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot;).</li>
        <li>Ajoutez la variable d'environnement <span class="inline">${YYExtAppDelegateIncludes}</span> au début du fichier d'en-tête du délégué de votre application. Elle sera remplacée au moment de la compilation par les fichiers inclus pertinents pour la classe de délégué parent.</li>
        <li>Utilisez la variable d'environnement <span class="inline">${YYExtAppDelegateBaseClass}</span> comme classe de base pour votre délégué d'application personnalisé. Elle sera remplacée au moment de la compilation par la classe de délégué de base correcte.<br>
          <br>
          Pour garantir que votre extension fonctionne avec toutes les autres extensions qui utilisent des délégués d'applications personnalisées, vous devez appeler toutes les méthodes de la classe de base à partir de méthodes surchargées dans votre classe enfant. Avant d'appeler la méthode de la superclasse, vous devez vous assurer qu'elle est implémentée dans la hiérarchie de la classe pour éviter les erreurs, par ex :
        </li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p>
    </li>
    <li class="dropspot"><strong>Cadres du système</strong>: Vous pouvez ajouter ici n'importe quel <a class="glossterm" data-glossterm="cadre" href="#">cadre de</a>système <span class="notranslate">iOS</span> à votre extension. Vous pouvez les ajouter en cliquant sur le bouton <img> qui ajoutera un cadre de référence, que vous pourrez ensuite modifier en double-cliquant sur <img>. Vous pouvez en savoir plus sur les cadres système disponibles <a href="https://developer.apple.com/documentation/">ici</a>. Pour supprimer un cadre système, il suffit de le sélectionner et de cliquer sur le bouton <img>.<br>
      <br>
      <img>Vous pouvez activer la case à cocher d'un framework pour le marquer comme une &quot;<strong>Référence faible</strong>&quot;. Cela l'ajoute à la section &quot;<strong>Build Phases -&gt; Link Binary with Libraries</strong>&quot; de <span class="notranslate">Xcode</span> comme un framework &quot;<strong>Optional</strong>&quot;, par opposition à un framework &quot;<strong>Required</strong>&quot; (qui est le comportement par défaut).
    </li>
    <li class="dropspot"><strong>Cadres tiers + paquets</strong>: Cette section permet d'ajouter des bundles tiers et SDK. Comme pour les frameworks système, cliquez sur le bouton <img> pour les ajouter, puis double-cliquez sur <img> pour les modifier. En les sélectionnant puis en cliquant sur <img>, vous les supprimerez (consultez la documentation fournie avec le SDK choisi pour obtenir des informations sur le nom du framework).<br>
      <br>
      Ici, vous pouvez choisir de <strong>ne pas intégrer</strong> le framework, de l'<strong>intégrer et de</strong> le <strong>signer</strong>, ou de <strong>l'intégrer sans le signer</strong>:<br>
      <img>Ceci reflète la même option pour un framework ajouté sous &quot;<strong>Frameworks, Libraries and Embedded Content</strong>&quot; dans <span class="notranslate">Xcode</span>.
    </li>
    <li class="dropspot"><strong>Entrez le chemin du framework sur Mac</strong>: Si vous voulez ajouter un framework à l'extension dont les fichiers sont présents sur le Mac qui est utilisé pour construire votre projet, vous pouvez entrer le chemin vers ce framework (sur la machine de construction) dans ce champ et ensuite cliquer sur le bouton <img> pour l'ajouter.<br>
      <br>
      Le chemin d'accès doit pointer vers un fichier <span class="inline">.framework</span> qui sera compressé sous la forme d'un <span class="inline">.zip</span> et placé dans le dossier <span class="inline">iOSSourceFromMac</span> sous le répertoire de votre extension ; vous pouvez facilement l'ouvrir à tout moment en cliquant avec le bouton droit de la souris sur <img> dans l'extension et en sélectionnant <em>Ouvrir dans l'explorateur</em>.
    </li>
    <li class="dropspot"><strong>Ajouter la source</strong>: Vous pouvez l'utiliser pour ajouter les fichiers sources nécessaires au fonctionnement de votre extension. Les fichiers ajoutés seront stockés dans le dossier <span class="inline">iOSSource</span> à l'intérieur du répertoire de votre extension.</li>
    <li class="dropspot"><b>Injection de code</b>: Vous pouvez ajouter ici tout code à injecter (ajouter) dans votre application <span class="notranslate">iOS</span> lorsque votre jeu est construit pour le test ou la version finale. Veillez à bien réviser ce paramètre (et vos autorisations) avant de soumettre des jeux à la boutique, car des paramètres incorrects entraîneront l'échec de la soumission de votre jeu.</li>
  </ul>
  <h2>Injection de code</h2>
  <p>L'injection de code peut être utilisée pour les extensions iOS/tvOS de la même manière que celle décrite sur la page <span class="notranslate">Android</span> Extensions : voir <a data-xref="{text}" href="Android_Extensions.htm#h">Injection de code</a>.</p>
  <p>Les balises suivantes sont disponibles pour les plateformes <span class="notranslate">iOS</span> et <span class="notranslate">tvOS</span>:</p>
  <p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray
  </p>
  <p>L'emplacement <span class="notranslate">runtime</span> où le code est injecté dépend du type de balise :</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">Type d'étiquette</th>
        <th style="">Chemin d'injection</th>
      </tr>
      <tr>
        <td style=""><b>Droits à prestations</b></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\\N<br>
         <span>${YYXCodeProjName}.droits</span>
        </td>
      </tr>
      <tr>
        <td style=""><b>info.plist</b></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\\N<br>
          Fichiers d'accompagnement\${YYXCodeProjName}-Info<span>.plist</span></td>
      </tr>
      <tr>
        <td style=""><strong>infoPlist.strings</strong></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\\N<br>
          fr.lproj\InfoPlist.strings</td>
      </tr>
      <tr>
        <td style=""><strong>projet.pbxproj</strong></td>
        <td style="">{RUNTIME}\Notre modèle de projet{{YYXCodeProjName}.xcodeproj\N<br>
          projet.pbxproj</td>
      </tr>
      <tr>
        <td style=""><strong>xcscheme</strong></td>
        <td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\\<br>
          xcshareddata\xcschemes\${YYXCodeProjName}.xcscheme</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong></strong><span class="note">NOTE</span> Ces chemins sont uniquement pour VM. Pour YYC, le code injecté ira dans le répertoire <span class="inline">{RUNTIME}\yyc\</span>, où les chemins peuvent ou non être équivalents à ceux de VM.</p>
  <p>Notez qu'il existe une option de jeu <a href="../../Settings/Game_Options/iOS.htm">pour iOS</a> et <a href="../../Settings/Game_Options/tvOS.htm">pour tvOS</a> permettant d'ajouter un fichier <span class="inline">Podfile.lock</span> à <span data-keyref="GameMaker Name">GameMaker</span>, qui est nécessaire si vous ajoutez les dépendances <span class="notranslate">CocoaPods</span> dans cette section.</p>
  <h2>Informations complémentaires</h2>
  <p>Si des cadres système ou des cadres tiers ont été ajoutés à votre extension, ils seront désormais répertoriés dans la fenêtre <strong>Propriétés de l'extension </strong>, et chacun d'entre eux sera accompagné d'une case à cocher. Si vous cochez la case, vous activez la liaison faible, ce qui est utile si vous devez &quot;remplacer&quot; un symbole de la bibliothèque incluse par votre propre valeur, mais il faut noter que cela ralentira la liaison.</p>
  <p>Pour plus d'informations sur la création d'extensions natives pour <span class="notranslate">iOS</span>, voir <a href="Extended_Examples.htm">Exemples de sources</a>; et pour plus d'informations sur l'utilisation de <span class="notranslate">CocoaPods</span> dans les extensions, voir le guide suivant :</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS et tvOS : utilisation des pods Cocoa</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Extensions.htm">L'éditeur d'extension</a></div>
        <div style="float:right">Suivant : <a href="Extended_Examples.htm">Exemples de sources</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>