<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Extensions Android</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how Android extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating Android Extensions" />
  <meta name="search-keywords" content="Android extensions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Extensions Android</h1>
  <p>Pour créer une extension pour <span class="notranslate">Android</span>, vous devez le faire en deux parties. La première partie consiste à ajouter l'extension elle-même, ainsi que les fichiers requis, et la deuxième partie consiste à créer les fonctions et les macros/constantes dont l'extension a besoin.</p>
  <p>Les fonctions et les constantes sont ajoutées en utilisant des fichiers de <strong>type placeholder </strong>pour les regrouper. Vous devez donc ajouter un placeholder, puis définir les fonctions et les macros comme expliqué dans la section précédente. Pour ajouter le reste des fichiers, vous devez d'abord cocher la case <em>Android </em>dans la section <b>Extra Platforms</b> de l'éditeur, ce qui ouvrira les propriétés de l'extension <span class="notranslate">Android</span>:</p>
  <p class="dropspot"><img alt="Android Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Android.png" /></p>
  <p>Ici, vous pouvez donner les détails suivants :</p>
  <ul class="colour">
    <li class="dropspot"><strong>Nom de la classe</strong>: Votre extension peut avoir plusieurs classes, chaque classe ayant ses propres fonctions et constantes. Vous devez donc lui donner un nom qui reflète son objectif.</li>
    <li class="dropspot"><strong>Autorisations Android</strong>: Vous pouvez ajouter ici toutes les autorisations supplémentaires dont votre extension a besoin. La nature de ces autorisations dépend entièrement de l'utilisation de l'extension. Vous devez donc <a href="https://developer.android.com/reference/android/Manifest.permission.html">consulter la documentation fournie par Google</a> pour la plate-forme <span class="notranslate">Android</span> ou, si vous utilisez un kit SDK tiers, la documentation fournie avec le kit SDK. <img> Pour ajouter une nouvelle autorisation, vous devez cliquer sur le bouton <img> pour ajouter une autorisation fictive, puis double-cliquer sur celle-ci pour la modifier en fonction de vos besoins. Vous pouvez supprimer des autorisations à l'aide du bouton <img>.</li>
    <li class="dropspot"><b>Injection de code</b>: Vous pouvez ajouter ici tout code à injecter (ajouter) dans votre application <span class="notranslate">Android</span> lorsque votre jeu est construit pour le test ou la version finale. Veillez à bien réviser ces paramètres (et vos autorisations) avant de soumettre des jeux à la boutique, car des paramètres incorrects entraîneront l'échec de la soumission de votre jeu. Consultez la section ci-dessous pour plus d'informations.</li>
  </ul>
  <h2 id="h">Injection de code</h2>
  <p>Tout code saisi dans la fenêtre &quot;Code Injection&quot; devra être séparé en groupes XML distincts, comme le montre la capture d'écran ci-dessus. La balise XML que vous utilisez pour un groupe déterminera l'endroit où le code sera injecté dans votre application.</p>
  <p>Vous pouvez utiliser la syntaxe suivante pour créer des groupes d'injection de code :</p>
  <p class="code">&lt;YYTagName&gt;<br />
    <br />
    // Code to inject<br />
    <br />
    &lt;/YYTagName&gt;
  </p>
  <p>Les balises suivantes sont disponibles pour la plateforme <span class="notranslate">Android</span>:</p>
  <p class="code">YYAndroidTopLevelGradle<br />
    YYAndroidTopLevelGradleBuildscript<br />
    YYAndroidTopLevelGradleBuildscriptRepositories<br />
    YYAndroidTopLevelGradleBuildscriptDependencies<br />
    YYAndroidTopLevelGradleAllprojects<br />
    YYAndroidTopLevelGradleAllprojectsRepositories<br />
    YYAndroidTopLevelGradleEnd<br />
    <br />
    YYAndroidGradle<br />
    YYAndroidGradleEnd<br />
    YYAndroidGradleAndroid<br />
    <span>YYAndroidGradleDependencies<span> <br />
        YYAndroidGradleProperties</span></span><br />
    YYAndroidManifestAttributes<br />
    YYAndroidManifestApplicationAttributes<br />
    YYAndroidManifestActivityAttributes<br />
    YYAndroidManifestActivityInject<br />
    YYAndroidManifestApplicationInject<br />
    YYAndroidStringValuesInjection<br />
    YYAndroidLayout<br />
    <span>YYAndroidProguard</span>
  </p>
  <p>L'emplacement <span class="notranslate">runtime</span> où le code est injecté dépend du type de balise :</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">Type d'étiquette</th>
        <th style="">Chemin d'injection</th>
      </tr>
      <tr>
        <td style=""><strong>Niveau supérieur Gradle</strong></td>
        <td style="">{RUNTIME}\android\runner\RootFiles\build.gradle</td>
      </tr>
      <tr>
        <td style=""><strong>Niveau du module Gradle</strong></td>
        <td style="">{RUNTIME}\android\runner\ProjectFiles\build.gradle</td>
      </tr>
      <tr>
        <td style=""><strong>Manifeste Android</strong></td>
        <td style="">{RUNTIME}\android\runner\ProjectFiles\src\main\AndroidManifest.xml</td>
      </tr>
      <tr>
        <td style=""><strong>Cordes</strong></td>
        <td style="">{RUNTIME}\android\runner\ProjectFiles\src\main\res\values\strings.xml</td>
      </tr>
      <tr>
        <td style=""><strong>Mise en page</strong></td>
        <td style="">{RUNTIME}\android\runner\ProjectFiles\src\main\res\layout\main.xml</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><span class="note">NOTE</span> Ces chemins sont uniquement pour VM ; pour YYC, le code injecté ira dans le répertoire <span class="inline">{RUNTIME}\yyc\</span>, où les chemins peuvent ou non être équivalents à ceux de VM.</p>
  <h2>Fichiers sources</h2>
  <p>Une fois que vous l'avez configuré correctement, vous devez ajouter les fichiers requis pour que votre paquet d'extension fonctionne. Pour ce faire, vous devez cliquer sur les boutons situés en bas de la page, soit <em>Ajouter SDK</em>, soit <em>Ajouter Source</em>, puis rechercher les fichiers que vous souhaitez ajouter. Les fichiers ajoutés seront stockés dans le répertoire <span class="inline">AndroidSource</span> avec votre extension. Vous pouvez ouvrir cet emplacement à tout moment en cliquant avec le bouton droit de la souris <img> sur l'extension et en sélectionnant <em>Ouvrir dans l'explorateur</em>.</p>
  <p>Pour plus d'informations sur la création d'extensions natives pour <span class="notranslate">Android</span>, voir <a href="Extended_Examples.htm">Exemples de sources</a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Extensions.htm">L'éditeur d'extension</a></div>
        <div style="float:right">Suivant : <a href="iOS_Extensions.htm">Extensions iOS</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Android Extensions
-->
  <!-- TAGS
extensions_android
-->
</body>
</html>