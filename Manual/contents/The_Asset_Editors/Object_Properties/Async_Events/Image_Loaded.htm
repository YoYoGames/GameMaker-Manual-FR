<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Image chargée</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Image Loaded async event." />
  <meta name="rh-index-keywords" content="Objects - Async Image Loaded Event" />
  <meta name="search-keywords" content="Image Loaded,ev_web_image_load" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Image chargée</h1>
  <p><img>Cet événement est déclenché lorsque vous chargez une image dans <span data-keyref="GameMaker Name">GameMaker</span>, soit en HTML5, soit via une <a class="glossterm" data-glossterm="URL" href="#">URL</a>. Par exemple, disons que vous voulez charger une image <span class="notranslate">sprite</span>, et ne changer l'actuelle <span class="notranslate">sprite</span> de l'instance par la nouvelle qu'après son chargement. Vous auriez quelque chose comme ceci dans l'événement Create (ou tout autre événement) :</p>
  <p class="code">var _url = &quot;http://www.angusgames.com/game/background1.png&quot;;<br/> spr = sprite_add(_url, 0, false, false, 0, 0);</p>
  <p>Le chargement de l'image dans l'appareil ou le navigateur va commencer, mais <span data-keyref="GameMaker Name">GameMaker</span> ne sera pas bloqué pendant qu'il attendra que le fichier soit chargé. Au lieu de cela, <span data-keyref="GameMaker Name">GameMaker</span> continuera à fonctionner normalement jusqu'à ce que l'image soit chargée et que la <a class="glossterm" data-glossterm="rappel" href="#">callback</a> déclenche l'<strong>événement Image Loaded Event</strong>, où une <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">carte DS Map</a> est créée et stockée dans la variable spéciale
    <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>. Cette carte contient les informations suivantes :</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">filename</span>&quot; : Le chemin complet du fichier que vous avez demandé.</li>
    <li class="dropspot">&quot;<span class="inline">id</span>&quot; : L'ID de la ressource que vous avez chargée. Ce sera le même que celui de la variable à laquelle vous avez attribué la ressource.</li>
    <li class="dropspot">&quot;<span class="inline">status</span>&quot; : Renvoie une valeur inférieure à 0 en cas d'erreur.</li>
  </ul>
  <p>Vous devez ensuite affecter l'image nouvellement chargée à une <span class="notranslate">sprite</span> dans cet événement. L'exemple de code suivant montre comment utiliser les informations renvoyées :</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == spr<br/> {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) &gt;= 0<br/>     {<br/>         sprite_index = spr;<br/>     }<br/> }
  </p>
  <p>Le code ci-dessus vérifiera d'abord le <span class="inline">id</span> de la carte DS qui a été créée, puis le <span class="inline">status</span> de la callback. Si la valeur est supérieure ou égale à 0 (signalant un succès), le résultat de la callback sera alors utilisé pour définir l'index de l'image nouvellement chargée.
    la callback sera alors utilisé pour définir l'index <span class="notranslate">sprite</span> de l'image nouvellement chargée.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Async_Events.htm">Événements asynchrones</a></div>
        <div style="float:right">Suivant : <a href="Networking.htm">Mise en réseau</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Image Loaded Event
ev_web_image_load
-->
  <!-- TAGS
ev_web_image_load
-->

</body></html>