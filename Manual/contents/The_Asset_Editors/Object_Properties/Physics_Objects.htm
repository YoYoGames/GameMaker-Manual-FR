<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Objets de physique</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object physics" />
  <meta name="rh-index-keywords" content="Objects - Physics" />
  <meta name="search-keywords" content="Object Physics,Physics,fixtures,binding,physics shape editor,shape editor,physics properties" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Objets de physique</h1>
  <p>Lorsque vous créez pour la première fois une nouvelle ressource objet, vous pouvez cocher la case <strong>Uses Physics</strong>, qui <em>n'est pas </em>cochée par défaut. Si vous sélectionnez cette option, le comportement de votre objet sera radicalement modifié lorsqu'une instance de celui-ci sera placée dans une pièce.
    dans une pièce, car cela active les propriétés physiques de l'objet et signifie que ses fonctions de mouvement et de collision &quot;traditionnelles&quot; ne sont plus valides (mais seulement si la pièce dans laquelle il est placé est également marquée comme étant une pièce physique. Voir
    la section sur les <a href="../Room_Properties/Room_Properties.htm">propriétés de l'éditeur de salle</a>). Lorsque vous cochez cette case, la fenêtre de ressources de l'objet ouvre une nouvelle fenêtre chaînée pour l'éditeur physique :</p>
  <p><img>Avant de commencer à modifier les valeurs des comportements physiques, il est bon de commencer par définir la <strong>forme de la collision</strong>.
    Avec le système de collision &quot;normal&quot;, vos collisions sont basées sur le masque du site <span class="notranslate">sprite</span> attribué à l'objet, mais avec la physique activée, <strong>ce n'est plus</strong> le cas. Nous devons attribuer nous-mêmes une <strong>forme de collision</strong> à l'objet (c'est ce qu'on appelle un <strong>fixture</strong>, voir <a href="../../GameMaker_Language/GML_Reference/Physics/Physics.htm">les fonctions physiques</a> pour plus d'informations), qui peut être un cercle, un rectangle ou un polygone que vous définissez vous-même.
    que vous définissez vous-même. En cliquant sur le bouton <strong>Modify Collision Shape</strong>, vous ouvrirez la fenêtre chaînée suivante pour modifier la forme :</p>
  <p><img>Il ressemble à l'<a href="../Paths.htm">éditeur de chemin</a> et fonctionne de la même manière. Cependant, selon
    du masque que vous avez choisi, il peut être plus restrictif :</p>
  <ul class="colour">
    <li>Si vous disposez d'un masque <strong>circulaire </strong>, vous pouvez tirer n'importe quel point de la trajectoire pour agrandir ou réduire le diamètre du cercle.</li>
    <li>Si vous avez un masque <strong>rectangulaire </strong>, vous pouvez déplacer n'importe lequel des quatre coins, mais les coins correspondants ajusteront leur position automatiquement pour toujours maintenir un rectangle.</li>
    <li>Si vous avez un masque <strong>personnalisé </strong>(polygone), il doit comporter un minimum de 3 et un maximum de 8 points, et il doit être convexe (voir image ci-dessous).</li>
  </ul>
  <p><img>Une fois que vous avez établi votre forme, vous devez définir les propriétés physiques de base que votre objet doit avoir. Ces
    sont configurées en modifiant les paramètres suivants :</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Densité</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">La densité d'une chose est définie comme sa masse par unité de volume, ce qui signifie essentiellement la quantité de masse entassée dans l'espace qu'elle occupe dans le monde. Ainsi, un ballon aurait une faible densité car il a une faible masse qui occupe un grand espace, alors que
      une barre de plomb aurait une densité élevée car elle a une grande masse, mais occupe peu d'espace. Dans le monde physique 2D de <span data-keyref="GameMaker Name">GameMaker</span>, la masse est calculée automatiquement à partir des valeurs que vous avez saisies pour la densité et de la surface de la forme que vous définissez pour le support.
      forme que vous définissez pour l'objet. Cela aura un impact direct sur le degré d'inertie d'un accessoire ainsi que sur la façon dont il réagit aux collisions et aux forces.
      plomb), mais si vous définissez une grande forme avec une faible densité, elle aura une masse beaucoup plus faible (comme un ballon).</p>
    <p class="dropspot">Notez que si vous définissez la densité à 0, vous créerez un objet &quot;statique&quot; qui est essentiellement infiniment dense et qui ne sera pas affecté par les forces externes ou les collisions, sauf dans les cas particuliers où l'instance a été créée comme <strong>cinématique</strong> (voir
      ci-dessous pour plus de détails).</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Restitution</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">En physique, la restitution est définie comme &quot;le retour d'un objet ou d'un système à son état d'origine après une déformation élastique&quot;, mais comme les appareils dans le <span data-keyref="GameMaker Name">GameMaker</span> sont des corps rigides et ne peuvent pas être déformés, la restitution est en fait une façon de dire à quel point l'appareil est &quot;rebondissant&quot;.
      une façon de dire à quel point le dispositif est &quot;rebondissant&quot;. Ce paramètre affecte la quantité de &quot;rebond&quot; d'un objet lorsqu'il entre en collision avec d'autres objets et dépend des autres forces qui agissent sur l'instance comme la gravité et la friction.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Groupe Collision</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Par défaut, le groupe de collision de tous les objets physiques est 0, ce qui signifie qu'ils interagiront normalement, ce qui signifie qu'ils <strong>doivent avoir un événement de collision pour interagir</strong> (un simple commentaire suffira à déclencher la collision) ; sinon
      aucune collision ne sera enregistrée. Cependant, vous pouvez également spécifier qu'un objet doit appartenir à un <strong>groupe de collision</strong> spécifique, numéroté. En assignant des objets à un groupe de collision <em>positif </em>(par exemple, trois objets sont tous dans le groupe
      &quot; <strong>2</strong>&quot;), vous indiquez à <span data-keyref="GameMaker Name">GameMaker</span> que les instances de ces objets doivent <em>toujours </em>entrer en collision, même s'ils n'ont rien dans leur événement de collision, en obéissant aux propriétés physiques que vous leur avez attribuées et à la pièce dans laquelle ils se trouvent.
      la pièce dans laquelle ils se trouvent. Inversement, si vous avez des objets avec un groupe de collision <em>négatif </em>(c'est-à-dire quatre objets affectés à &quot;<strong>-1</strong>&quot;), vous indiquez à <span data-keyref="GameMaker Name">GameMaker</span> qu'ils <em>ne </em>doivent <em>jamais </em>entrer en collision, et que tout événement de collision entre eux sera ignoré.
      événements de collision entre eux seront ignorés.</p>
    <p class="note"><strong>REMARQUE</strong>: L'utilisation de groupes de collisions augmente considérablement le traitement requis par le système physique et ne doit être utilisée qu'en cas d'absolue nécessité, et vous devez avoir le moins de groupes possible.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Amortissement linéaire</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">L'amortissement est utilisé pour réduire la vitesse d'une instance dans le monde physique lorsqu'elle se déplace dans la pièce. En principe, c'est comme la friction contre une surface dans le monde &quot;réel&quot;, mais dans le système physique de <span data-keyref="GameMaker Name">GameMaker</span>, la friction n'est en fait appliquée que lorsque deux instances avec des formes de collision (fixtures) sont en contact.
      appliquée que lorsque deux instances avec des formes de collision (fixtures) sont en contact. Vous pouvez donc considérer l'amortissement linéaire comme une &quot;friction de l'air&quot; qui ralentit progressivement toute instance physique en mouvement, sans qu'il soit nécessaire d'entrer en contact avec une autre instance physique.
      avec une autre instance physique.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">Amortissement angulaire</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">Si vous pensez à n'importe quel objet en rotation dans le &quot;monde réel&quot;, à moins qu'il ne soit équipé d'un moteur ou qu'il se trouve dans l'espace, sa rotation ralentira au fil du temps sous l'influence de forces externes (comme la friction mécanique ou la friction contre l'air ou l'eau qui l'entourent).
      qui l'entoure). Nous pouvons utiliser l'option d'amortissement angulaire pour simuler cet effet et réduire la vitesse de rotation des instances dans le monde physique, car sans elle, toute instance en rotation continuerait à tourner à l'infini.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Friction</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot">La friction est la force qui résiste au mouvement relatif d'éléments matériels glissant l'un contre l'autre, ce qui, dans le monde physique de <span data-keyref="GameMaker Name">GameMaker</span>, se traduit par la perte d'élan causée par la collision de deux instances avec des dispositifs physiques.
      Ainsi, lorsque deux instances entrent en collision, leur mouvement est affecté par cette valeur, une friction élevée entraînant une perte d'élan plus importante qu'une valeur plus faible.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>Enfin, il y a trois options supplémentaires qui peuvent être activées ou désactivées pour votre projecteur, <strong>Sensor</strong>, <strong>Start Awake</strong> et <strong>Kinematic</strong>. Chacune de ces options <span class="notranslate">flags</span> changera le comportement de votre projecteur de la manière suivante
    manières suivantes :</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">Capteur</a></p>
  <div class="droptext" data-targetname="drop-down6">
    <p class="dropspot">En cochant cette case, vous demandez à <span data-keyref="GameMaker Name">GameMaker</span> d'&quot;ignorer&quot; les propriétés physiques de l'objet, mais de renvoyer un événement de collision avec les objets qui l'entourent. De cette façon, vous pouvez avoir une instance qui n'a pas de présence physique
      dans la pièce, mais qui peut réagir à la collision d'une autre instance, comme le joueur, et faire quelque chose à son tour, comme ouvrir une porte, ou déclencher une action quelconque à un autre endroit de la pièce.</p>
    <p class="note"><strong>REMARQUE</strong>: un dispositif de capteur déclenche l'événement de collision <strong>uniquement</strong> lorsque la collision <strong>se produit pour la première fois</strong>, ce qui signifie que vous n'obtenez pas un flux d'événements de collision lorsque les deux corps continuent à se chevaucher (ce qui se produirait traditionnellement).
      se produire). S'ils cessent de se chevaucher et se chevauchent à nouveau, un autre événement de collision sera déclenché.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">Start Awake</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p class="dropspot">Cette option est cochée par défaut et représente l'&quot;état&quot; initial du projecteur au début de la pièce dans laquelle il a été placé. Normalement, vous souhaitez qu'il soit éveillé (c'est-à-dire qu'il participe au monde physique) dès le début, mais parfois, cela peut entraîner certaines instabilités et des effets indésirables dus à un démarrage brutal de la simulation physique.
      peut entraîner certaines instabilités et des effets indésirables dus au démarrage brutal de la simulation physique. Pour éviter ces effets, vous pouvez décocher cet indicateur et l'instance sera créée avec le dispositif endormi, et il ne participera pas à la simulation physique à moins que quelque chose n'agisse sur lui.
      la simulation physique à moins que quelque chose n'agisse sur lui.</p>
    <p class="dropspot">Notez que les instances physiques sont signalées comme étant &quot;endormies&quot; lorsqu'elles ne sont plus en mouvement ou qu'elles n'ont plus d'interaction avec d'autres instances physiques.
      traitée par la simulation physique (ce qui permet d'économiser la <a class="glossterm" data-glossterm="Surcharge du CPU" href="#">surcharge du CPU</a>).</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Kinematic</a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">Dans certains cas, dans un jeu basé sur la physique, vous voudrez vous déplacer sans être soumis à des forces telles que la gravité ou à des forces résultant de collisions avec des objets dynamiques (pensez aux plates-formes mobiles dans un jeu de plates-formes, par exemple).
      par exemple). Pour de tels objets, il suffit de régler la densité du dispositif sur 0 pour que la physique considère que l'objet est censé être <strong>statique </strong>et qu'il ne réagisse à rien. Cependant, en cochant cette case
      rendra un objet statique <strong>cinématique </strong>et, bien qu'il ne soit toujours pas affecté par les collisions et les forces telles que la gravité, il pourra désormais être déplacé ou tourné à l'aide des variables appropriées (voir <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm"><span class="inline">phy_position_x</span></a> et
      <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm"><span class="inline">phy_position_y</span></a>par exemple).</p>
    <p> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="../Objects.htm">L'éditeur d'objets</a></div>
        <div style="float:right">Suivant : <a href="Object_Variables.htm">Variables d'objet</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Physics Objects
-->
  <!-- TAGS
objects_physics
-->

</body></html>