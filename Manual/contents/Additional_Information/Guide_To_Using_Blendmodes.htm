<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Guide d'utilisation des Blendmodes</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how blendmodes work." />
  <meta name="rh-index-keywords" content="blendmodes,Guide To Using Blendmodes" />
  <meta name="search-keywords" content="blendmodes,blending,blend modes" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Guide d'utilisation des Blendmodes</h1>
  <p>Si vous utilisez <span data-keyref="GameMaker Name">GameMaker</span> depuis un certain temps, vous avez certainement rencontré des <a href="../GameMaker_Language/GML_Reference/Drawing/GPU_Control/GPU_Control.htm">modes de fusion</a>, et vous les avez probablement utilisés dans vos jeux. Les modes de fusion sont un excellent moyen de modifier la façon dont un élément est dessiné pour obtenir des effets graphiques intéressants et spécifiques, mais savez-vous comment ils fonctionnent et comment les utiliser ? C'est un sujet qui peut dérouter les gens. Dans cette section, nous espérons dissiper une partie du mystère entourant les modes de fusion et vous permettre de les utiliser au maximum dans vos jeux.</p>
  <p> </p>
  <h2>APERÇU</h2>
  <p>Les modes de fusion indiquent à votre jeu de dessiner certaines choses en les mélangeant avec tout ce qui a été dessiné auparavant. Tout ce que vous dessinez à l'écran est constitué de quatre éléments - rouge, vert, bleu et alpha - et par défaut, ils sont dessinés à l'écran en utilisant le mode de fusion <span class="inline">bm_normal</span>. Ce mode de fusion dessine tous les pixels avec leurs valeurs de couleur et d'alpha essentiellement inchangées (bien que, plus tard dans cette section, vous verrez que ce n'est pas <em>tout à fait</em> vrai...), mais <span data-keyref="GameMaker Name">GameMaker</span> dispose d'un certain nombre de modes de fusion intégrés qui peuvent être définis pour modifier ce comportement.</p>
  <p>Lorsque <span data-keyref="GameMaker Name">GameMaker</span> dessine un pixel, il y a une <strong>couleur source</strong> (la couleur du pixel que vous allez dessiner) et une <strong>couleur de destination</strong> (la couleur qui se trouve déjà dans le pixel que nous dessinons). Pour déterminer la nouvelle couleur du pixel, <span class="notranslate">GameMaker</span> combinera les couleurs source et destination en fonction du <strong>mode de fusion</strong>, comme indiqué ci-dessus. Chaque composante des couleurs est stockée sous forme de valeur à virgule flottante comprise entre 0 et 1, et la nouvelle couleur est calculée en multipliant chaque composante de la couleur source par un certain facteur et en multipliant chaque composante de la couleur de destination par un autre facteur, puis en additionnant les résultats composante par composante.</p>
  <p> </p>
  <h2>MODES DE FUSION DE BASE</h2>
  <p><span data-keyref="GameMaker Name">GameMaker</span> utilise la fonction <a href="../GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_blendmode.htm">gpu_set_blendmode()</a> pour modifier le mélange que votre jeu utilise pour le dessin. Vous devez appeler cette fonction avant (par exemple) de dessiner un <span class="notranslate">sprite</span>, puis la rétablir après, comme ceci :</p>
  <p class="code">gpu_set_blendmode(bm_add);<br />
    draw_self();<br />
    gpu_set_blendmode(bm_normal);</p>
  <p>Ce code dessine l'instance <span class="notranslate">sprite</span> en utilisant un mode de fusion <strong>additif </strong>. Le mode de fusion additif est défini à l'aide de l'une des constantes disponibles sur <span class="notranslate">GML</span>, qui sont au nombre de quatre pour les modes de base :</p>
  <p class="code">bm_normal<br />
    bm_add<br />
    bm_subtract<br />
    bm_max</p>
  <p>Nous avons déjà vu à quoi ressemble le site <span class="inline">bm_normal</span> - puisque c'est ce qui est proposé par défaut ! - alors continuons à regarder les trois autres avec un peu plus de détails...</p>
  <p><img alt="bm_normal example" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/BlendModes1_BmNormal.png" /></p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">bm_add</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Ce mode de fusion additionne les couleurs des pixels source et destination (mais n'affecte pas les valeurs alpha). Par exemple, si votre image de fond est une couleur unie avec une valeur RVB de (100,15,70), et que vous dessinez un rectangle avec une valeur RVB de (120,25,30), alors (en utilisant bm_add) les valeurs RVB finales pour chaque pixel du rectangle seront (220,40,100). Notez que les valeurs de couleur ne peuvent pas dépasser 255 (ou être inférieures à 0), donc tout ce qui est supérieur à cette valeur sera fixé à 255.</p>
    <p class="dropspot"><img>L'utilisation de ce mode de fusion est un excellent moyen d'obtenir cet aspect &quot;néon&quot;, et est le plus souvent utilisé pour les effets d'éclairage, les lasers ou tout ce que vous voulez faire apparaître comme brillant ou luminescent.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">bm_subtract</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Ce mode de fusion est un peu différent du précédent, car il fonctionne sur la base d'un pourcentage plutôt que d'une valeur directe. Ce pourcentage est ce qui sera soustrait de la couleur de destination (la couleur du pixel dessiné). Pour mieux l'expliquer, prenons un exemple.</p>
    <p class="dropspot"><img>Imaginons que vous souhaitiez réduire de 25 % la valeur rouge de tous les pixels dessinés dans une zone de la pièce. Vous devrez d'abord obtenir 25 % de 255, puis convertir cette valeur en une valeur de couleur RVB, et enfin l'utiliser avec bm_subtract pour dessiner sur la zone. Quelque chose comme ceci :</p>
    <p class="code">var red = (25 / 100) * 255;<br />
      var col = make_colour_rgb(red, 0, 0);<br />
      gpu_set_blendmode(bm_subtract);<br />
      draw_rectangle_colour(0, 0, 128, 256, col, col, col, col, false);<br />
      gpu_set_blendmode(bm_normal);</p>
    <p class="dropspot">En suivant la même règle, si vous vouliez simplement réduire la luminosité d'un arrière-plan de 50 %, vous auriez une couleur composée de 50 % de rouge, 50 % de vert et 50 % de bleu, c'est-à-dire : RVB (128, 128, 128). Ce mode de fusion est principalement utilisé pour dessiner des ombres ou créer des effets de fondu intéressants.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">bmax</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Ce mode de fusion est plus complexe à expliquer, mais il multiplie essentiellement les couleurs source par l'alpha source, puis les ajoute aux valeurs des couleurs de destination multipliées par les valeurs inverses des couleurs source. Les mathématiques réelles derrière bm_max (et les autres modes de fusion) seront abordées dans la deuxième partie de notre article, mais tout ce que vous devez savoir, c'est que le résultat sera une couleur plus &quot;saturée&quot; et plus brillante, sans conduire à la même brillance blanche pure que l'utilisation de <span class="inline">bm_add</span>.</p>
    <p class="dropspot"><img>Ce mode de fusion peut être utile lorsque vous devez dessiner des images qui se chevauchent sans qu'elles deviennent si lumineuses qu'elles ne sont pas visibles. Les parties claires deviendront plus lumineuses, mais elles devraient conserver un certain niveau de couleur et de teinte. Notez cependant que la valeur alpha de l'image source aura également une influence sur l'effet final lorsque vous utilisez ce mode de fusion.</p>
  </div>
  <p> </p>
  <p>Vous connaissez maintenant les bases de l'utilisation d'un mode de fusion dans <span data-keyref="GameMaker Name">GameMaker</span>. Il prend les valeurs RVB et alpha de l'image source (ce qui est dessiné) et les fusionne avec les valeurs RVB et alpha de l'image de destination (ce qui est dessiné également). Ce mélange s'effectue en multipliant les composantes individuelles de chaque couleur de pixel et de chaque valeur alpha par différentes quantités, en fonction des effets que l'on souhaite obtenir. Avec ces connaissances, vous pouvez commencer à utiliser les modes de fusion dans vos jeux pour obtenir des lasers lumineux, des ombres réalistes ou des effets de transition saturés, mais il y a encore beaucoup à apprendre ! Nous examinons ci-dessous les <strong>modes de fusion étendus</strong> et explorons un peu les mathématiques qui les sous-tendent, afin que vous puissiez créer vos propres effets de fusion tels que la multiplication ou la superposition.</p>
  <p> </p>
  <h2>Modes de mélange étendus</h2>
  <p>Ci-dessus, nous avons parlé de la fonction <a href="../GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_blendmode.htm"><span class="inline">gpu_set_blendmode()</span></a>mais nous allons maintenant examiner la fonction <a href="../GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_blendmode_ext.htm"><span class="inline">gpu_set_blendmode_ext()</span></a>. Il s'agit (comme son nom l'indique) d'une fonction étendue permettant de définir des modes de fusion <em>personnalisés </em>, mais comment cela fonctionne-t-il ? Voyons d'abord la réponse technique sèche avant d'aller plus loin :</p>
  <ul class="colour">
    <li>La fonction <span class="inline">gpu_set_blendmode_ext</span><span class="inline">(src, dest)</span> indique le mode de fusion à utiliser pour la couleur source et la couleur de destination. La nouvelle couleur est un facteur multiplié par la source et un autre facteur multiplié par la destination. Ces facteurs sont définis par cette fonction. Pour comprendre cela, la source et la destination ont toutes deux une composante rouge, verte, bleue et alpha. Ainsi, la <strong>source </strong>est (<span class="inline">Rs, Gs, Bs, As</span>) et la <strong>destination </strong>est (<span class="inline">Rd, Gd, Bd, Ad</span>). Toutes les valeurs sont considérées comme étant comprises entre 0 et 1.</li>
  </ul>
  <p>Maintenant, bien que ce texte soit correct et explique ce que font les modes de fusion, il n'est pas vraiment intuitif... alors entrons un peu plus dans les détails et expliquons de quoi il s'agit.</p>
  <p>Lorsque nous parlons de la <strong>source </strong>, nous parlons de la couleur et des valeurs alpha du pixel qui est dessiné, et lorsque nous parlons de la <strong>destination </strong>, nous parlons de la couleur et des valeurs alpha du pixel sur lequel il est dessiné. Pour simplifier les choses, nous pouvons écrire la couleur source sous la forme de ses composantes, comme ceci :</p>
  <ul class="colour">
    <li><span class="inline">(Rs, Gs, Bs, As)</span> = le RGB et l'Alpha de la couleur que vous allez dessiner.</li>
  </ul>
  <p>Et la destination serait comme ceci :</p>
  <ul class="colour">
    <li><span class="inline">(Rd, Gd, Bd, Ad)</span> = le RGB et l'Alpha de la couleur sur laquelle vous allez dessiner.</li>
  </ul>
  <p>Ainsi, lorsque nous dessinons quelque chose à l'écran, notre processeur graphique effectue les opérations suivantes pour chaque pixel :</p>
  <p class="code">final_pixel_colour =  (Rs,Gs,Bs,As) * source_blend_factor + (Rd,Gd,Bd,Ad) * destination_blend_factor</p>
  <p>Les <strong>facteurs de mélange</strong> mentionnés ci-dessus sont définis dans <span data-keyref="GameMaker Name">GameMaker</span> par un certain nombre de constantes <span class="notranslate">GML</span>. Chacune d'entre elles représente un facteur par lequel les valeurs R, G, B et A de la source ou de la destination doivent être multipliées. Les facteurs disponibles sont les suivants :</p>
  <ul class="colour">
    <li><span class="inline">bm_zero</span>: Le facteur de mélange est (0, 0, 0, 0)</li>
    <li><span class="inline">bm_one</span>: Le facteur de mélange est (1, 1, 1, 1)</li>
    <li><span class="inline">bm_src_colour</span>: Le facteur de mélange est (Rs, Gs, Bs, As)</li>
    <li><span class="inline">bm_inv_src_colour</span>: Le facteur de mélange est (1-Rs, 1-Gs, 1-Bs, 1-As)</li>
    <li><span class="inline">bm_src_alpha</span>: Le facteur de mélange est (As, As, As, As)</li>
    <li><span class="inline">bm_inv_src_alpha</span>: Le facteur de mélange est (1-As, 1-As, 1-As, 1-As)</li>
    <li><span class="inline">bm_dest_alpha</span>: Le facteur de mélange est (Ad, Ad, Ad, Ad)</li>
    <li><span class="inline">bm_inv_dest_alpha</span>: Le facteur de mélange est (1-Ad, 1-Ad, 1-Ad, 1-Ad, 1-Ad)</li>
    <li><span class="inline">bm_dest_colour</span>: Le facteur de mélange est (Rd, Gd, Bd, Ad)</li>
    <li><span class="inline">bm_inv_dest_colour</span>: Le facteur de mélange est (1-Rd, 1-Gd, 1-Bd, 1-Ad)</li>
    <li><span class="inline">bm_src_alpha_sat</span>: Le facteur de mélange est (f, f, f, 1) ; f = min(As, 1-Ad)</li>
  </ul>
  <p>Les quatre modes de fusion &quot;de base&quot; de <span data-keyref="GameMaker Name">GameMaker</span> sont en fait des compositions de deux de ces facteurs de fusion.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">Exemple de fonctionnement de bm_normal</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">Il est temps d'examiner un exemple pratique de la manière dont tout cela peut être utilisé pour dessiner dans <span data-keyref="GameMaker Name">GameMaker</span>. Pour cela, nous allons nous intéresser à bm_normal, qui est vraiment.. :</p>
    <p class="code">gpu_set_blendmode_ext(bm_src_alpha, bm_inv_src_alpha);</p>
    <p class="dropspot">L'un des problèmes que l'on rencontre avec les modes de fusion est la visualisation des résultats. Pour montrer les mathématiques qui se cachent derrière, nous allons utiliser ce mode de fusion comme sujet de test, car c'est celui que tout le monde utilise le plus et nous savons exactement ce que nous devons en attendre. Imaginons que nous dessinions un rectangle de couleur (128, 255, 64, 255) sur un fond de couleur (64, 128, 255, 255) :</p>
    <p class="dropspot"><img>Donc, notre mode de fusion ressemble à ça :</p>
    <p class="code">Source: (128, 255, 64, 255) = (0.5, 1, 0.25, 1)<br />
      Destination: (64, 128, 255, 255) = (0.25, 0.5, 1, 1)<br />
      <br />
      <strong>Factors:</strong><br />
      bm_src_alpha (As, As, As, As) = (255, 255, 255, 255) = (1, 1, 1, 1)<br />
      bm_inv_src_alpha (1-As, 1-As, 1-As, 1-As) =  (0, 0, 0, 0)<br />
      <br />
      <strong>Formula:</strong><br />
      (Rs,Gs,Bs,As) * bm_src_alpha + (Rd,Gd,Bd,Ad) * bm_inv_src_alpha<br />
      <br />
      <strong>Apply factors</strong>:<br />
      (0.5, 1, 0.25, 1) * (1, 1, 1, 1) + (0.25, 0.5, 1, 1) * (0, 0, 0, 0)<br />
      (0.5, 1, 0.25, 1) + (0, 0, 0, 0) = (0.5, 1, 0.25, 1) = (128, 255, 64, 255)</p>
    <p class="dropspot">Comme vous pouvez le voir, nous multiplions les valeurs de destination par 0, ce qui leur donne également une valeur de 0, ce qui signifie que les couleurs sources restent inchangées, de sorte que notre valeur de couleur finale est <strong>(128, 255, 64, 255)</strong>. Vous pouvez voir comment l'inclusion de l'alpha affecte également cette valeur :</p>
    <p class="code">Source (128, 255, 64, 128) = (0.5, 1, 0.25, 0.5)<br />
      Destination: (64, 128, 255, 255) = (0.25, 0.5, 1, 1)<br />
      <br />
      <strong>Factors:</strong><br />
      bm_src_alpha (As, As, As, As) = (128, 128, 128, 128) = (0.5, 0.5, 0.5, 0.5)<br />
      bm_inv_src_alpha (1-As, 1-As, 1-As, 1-As) = (0.5, 0.5, 0.5, 0.5)<br />
      <br />
      <strong>Formula:</strong><br />
      (Rs,Gs,Bs,As) * bm_src_alpha + (Rd,Gd,Bd,Ad) * bm_inv_src_alpha<br />
      <br />
      <strong>Apply factors</strong>:<br />
      (0.5, 1, 0.25, 0.5) * (0.5, 0.5, 0.5, 0.5) + (0.25, 0.5, 1, 1) * (0.5, 0.5, 0.5, 0.5)<br />
      (0.25, 0.5, 0.125, 0.25) + (0.125, 0.25, 0.5, 0.5) = (0.375, 0.75, 0.625, 0.75) = (96, 192, 159, 192)</p>
    <p class="dropspot">Cela donne une couleur finale de pixel (96, 192, 159, 192), et donnera une image comme celle montrée ci-dessous :</p>
    <p class="dropspot"><img alt="bm_add example" class="center" src="../assets/Images/Scripting_Reference/Additional_Information/BlendModes1_BmAdd.png" /></p>
    <p class="dropspot">J'espère que vous voyez maintenant clairement ce que font les facteurs de mode de fusion, et comment les combiner peut modifier ce qui est dessiné pour créer des effets intéressants. Nous allons maintenant examiner un exemple pratique de la manière dont vous pouvez combiner ces facteurs pour créer vos propres modes de fusion personnalisés.</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p>Maintenant que vous connaissez le fonctionnement des modes de fusion et que vous avez vu un exemple de leur utilisation dans le dessin de tous les jours, voyons quelque chose de plus complexe...</p>
  <p> </p>
  <h2>CRÉER VOS PROPRES MODES DE FUSION</h2>
  <p>En utilisant les différents facteurs disponibles, vous pouvez créer vos propres modes de fusion pour obtenir des options de fusion qui ne vous sont pas accessibles normalement. Dans cet exemple, nous allons créer un effet de <strong>multiplication </strong>comme celui utilisé dans Photoshop. Nous pouvons simuler ce mode de fusion en utilisant deux de nos constantes de facteurs de mode de fusion mentionnées ci-dessus, comme ceci :</p>
  <p class="code">gpu_set_blendmode_ext(bm_dest_colour, bm_zero);</p>
  <p>Avant de dessiner quelque chose à l'aide de ce mode de fusion, regardons à quoi il devrait ressembler dans Photoshop :</p>
  <p><img>En utilisant notre mode de fusion étendu, nous obtenons ce qui suit :</p>
  <p class="code">(Rs, Gs, Bs, As) * (Rd, Gd, Bd, Ad) + (Rd, Gd, Bd, Ad) * (0,0,0,0) = (Rs, Gs, Bs, As) * (Rd, Gd, Bd, Ad)<br />
    Source colour * dest colour + dest colour * zero = source colour * dest colour</p>
  <p>Le facteur de fusion <span class="inline">bm_zero</span> supprime effectivement la couleur de destination de l'équation (car zéro fois quelque chose est zéro), il nous reste donc la couleur source multipliée par le facteur de fusion de la couleur de destination, d'où le nom &quot;multiplier&quot; du mode. Pour utiliser ce mode dans <span data-keyref="GameMaker Name">GameMaker</span>, il suffit de placer quelque chose comme ceci dans votre <strong>Draw Event</strong>:</p>
  <p class="code">gpu_set_blendmode_ext(bm_dest_colour, bm_zero);<br />
    draw_self();<br />
    gpu_set_blendmode(bm_normal);</p>
  <p>L'image suivante a été prise d'un projet de test dans <span class="notranslate">GameMaker</span> utilisant ce code exact :</p>
  <p><img>Pouvez-vous voir la différence ? Probablement pas ! Il y aura cependant un certain écart entre les deux en raison des différences entre les outils de rendu utilisés, mais c'est presque exactement ce à quoi vous vous attendez. Notez cependant que tous les modes de fusion utilisés par les programmes artistiques ne sont pas disponibles dans <span data-keyref="GameMaker Name">GameMaker</span>, car certains d'entre eux peuvent forcer les valeurs de couleur à dépasser 255 et ainsi créer des effets spéciaux, mais cela ne signifie pas que vous ne pouvez pas créer des imitations passables de ces effets, ou même de tout nouveaux effets, en les utilisant.</p>
  <p>Il est intéressant de noter qu'avec <span data-keyref="GameMaker Name">GameMaker</span>, vous pouvez aller plus loin en utilisant la fonction <span class="inline"><a href="../GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_blendmode_ext_sepalpha.htm">gpu_set_blendmode_ext_sepalpha()</a></span>. Celle-ci vous permet de séparer la composante alpha des différents facteurs du mode de fusion et de les utiliser individuellement pour créer encore plus de combinaisons possibles. Nous ne parlerons pas de cette fonction ici, car elle est déjà expliquée en détail dans le manuel, mais elle mérite d'être mentionnée pour que vous sachiez qu'elle est disponible.</p>
  <p> </p>
  <h2>SURFACES ET ALPHA</h2>
  <p>Une dernière chose mérite d'être soulignée à propos des modes de fusion, à savoir la manière dont ils affectent la composante <strong>alpha </strong>d'une couleur. Lorsque vous dessinez simplement sur la <a class="glossterm" data-glossterm="surface de pose" href="#">surface de l'application</a> ou le <a class="glossterm" data-glossterm="tampon d'affichage" href="#">tampon d'affichage</a>, vous n'avez pas vraiment besoin de prendre en compte la valeur alpha de destination, car elle sera <em>toujours </em>égale à un. Cependant, les surfaces que vous créez vous-même sont différentes, puisque vous pouvez effacer une surface pour qu'elle ait la valeur alpha de zéro à un que vous souhaitez. Cela donne lieu à des effets intéressants, contraires à ce que la plupart des gens attendent.</p>
  <p>Pour illustrer cela, nous allons voir comment dessiner en utilisant la valeur de base par défaut <span class="inline">bm_normal</span>. La plupart des gens pensent qu'avoir une surface nettoyée à alpha 0, et dessiner quelque chose avec un alpha de 0,5 donnera une valeur alpha résultante de 0,5 aussi... <strong>mais ce n'est pas</strong> le cas et c'est quelque chose que beaucoup de gens pensent être un &quot;bug&quot; dans la façon dont <span data-keyref="GameMaker Name">GameMaker</span> rend les choses. Cependant, comme vous allez le voir, ce n'est pas du tout un bug !</p>
  <p>Supposons que vous ayez une surface dont chaque pixel est à l'alpha 0, puis que vous y dessiniez un cercle à l'alpha 0,5 en utilisant le mode de fusion <span class="inline">bm_normal</span>. La surface entière aura toujours l'alpha 0, mais dans le cercle, l'alpha sera en fait de 0,25 :</p>
  <p class="code">0.5 * 0.5 + 0 * 0.5 = 0.5 * 0.5 = 0.25</p>
  <p>Si vous dessinez ensuite un autre cercle dans le cercle existant, également avec un alpha de 0,5, l'alpha à l'extérieur des cercles sera de 0, entre les cercles de 0,25 et dans le plus petit cercle de 0,375 :</p>
  <p class="code">0.5 * 0.5 + 0.25 * 0.5 = 0.25 + 0.125 = 0.375</p>
  <p>Si vous deviez continuer à dessiner un certain nombre de cercles de 0,5 alpha sur une surface de 0 alpha, puis dessiner cette surface sur la pièce, vous pourriez le voir clairement :</p>
  <p><img>Si vous êtes encore un peu confus au sujet de l'alpha, essayez de l'imaginer comme une couleur comme les autres. Elle se comporte comme une couleur et tous les calculs sur elle sont effectués de la même manière. Il n'est simplement pas vraiment visible, alors que l'effet qu'il a sur les autres couleurs l'est. Ce qui nous amène à la dernière chose à noter lorsque vous utilisez des surfaces et des modes de fusion (même <span class="inline">bm_normal</span>)...</p>
  <p>Même si l'alpha de la surface est de 0, <em><strong>les composantes de couleur sont toujours là et existent et influencent toutes les opérations de mélange.</strong></em>. Ainsi, dessiner sur une surface dont l'alpha est nul et qui a été nettoyée à l'aide de la couleur rouge (par exemple) mélangera les couleurs sources avec les couleurs de destination et donnera des effets différents de ceux que vous pouvez imaginer. L'image ci-dessus a été créée sur une surface nettoyée en noir sur un fond noir, mais si nous nettoyons la surface en rouge, nous obtenons ceci à la place :</p>
  <p><img>J'espère que vous pouvez maintenant comprendre pourquoi cela se produit en utilisant les formules que j'ai décrites ci-dessus et en appliquant les chiffres appropriés pour <span class="inline">bm_normal</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Retour : <a href="Additional_Information.htm">Informations complémentaires</a></div>
        <div style="float:right">Suivant : <a href="Error_Reporting.htm">Rapports d'erreurs</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tous droits réservés</span></h5>
  </div>
  <!-- KEYWORDS
Blendmodes
Blending
Blend Modes
-->
  <!-- TAGS
using_blendmodes
-->
</body>
</html>